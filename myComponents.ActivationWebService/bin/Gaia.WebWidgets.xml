<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gaia.WebWidgets</name>
    </assembly>
    <members>
        <member name="T:Gaia.WebWidgets.ImageField">
            <summary>
            Represents a field that is displayed as an image in a data-bound control.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.IAjaxDataControlField">
            <summary>
            Interface implemented by ajaxified <see cref="T:System.Web.UI.WebControls.DataControlField"/> derived controls for accessing protected members.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxDataControlField.Control">
            <summary>
            Gets a reference to the data control that the <see cref="T:System.Web.UI.WebControls.DataControlField"/> object is associated with.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageField.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageField.CreateField">
            <summary>Returns a new instance of the field class.</summary>
            <returns>A new instance of the %ImageField class.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ImageField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>Initializes the field object.</summary>
            <param name="enableSorting">True if sorting is supported; Otherwise, false.</param>
            <param name="control">The data control that contains the field.</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ImageField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
            <summary>
            Initializes the specified cell object with the specified cell type, row state, and row index.
            </summary>
            <param name="cell">The cell to initialize.</param>
            <param name="cellType">One of the %DataControlCellType values.</param>
            <param name="rowState">One of the %DataControlRowState values.</param>
            <param name="rowIndex">The zero-based index of the row.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)">
            <summary>
            Initializes the specified cell object with the specified row state.
            </summary>
            <param name="cell">The cell to initialize.</param>
            <param name="rowState">One of the %DataControlRowState values.</param>
        </member>
        <member name="P:Gaia.WebWidgets.ImageField.Gaia#WebWidgets#IAjaxDataControlField#Control">
            <summary>
            Gets a reference to the data control that the <see cref="T:System.Web.UI.WebControls.DataControlField"/> object is associated with.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.CheckBox">
            <summary>
            The Gaia Ajax CheckBox displays a check box that allows the
            user to select a true or false condition. It inherits from the
            <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.checkbox.aspx">
               ASP.NET CheckBox</a>, and has built-in Ajax behaviour.
            </summary>
            <example>
            <code title="ASPX Markup for Checkbox" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\CheckBox\Overview\Default.aspx" />
            </code> 
            <code title="Codebehind for Checkbox" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\CheckBox\Overview\Default.aspx.cs" region="Code" />
            </code> 
            </example>
        </member>
        <member name="T:Gaia.WebWidgets.IAspectableAjaxControl">
            <summary>
            Implemented by Controls to which Aspects can be attached
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.IAjaxControl">
            <summary>
            Implement this interface on any control where you need to interface with the Gaia Ajax Control Engine.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxControl.GetScript">
            <summary>
            Returns the Javascript used to register the control on the client. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxControl.IncludeScriptFiles">
            <summary>
            Called by the framework, when the required script files for the control
            should be added for inclusion
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxControl.CreateControlStateManager">
            <summary>
            Called by the Gaia framework when the StateManager of the Control needs to be initialized
            </summary>
            <returns>StateManager for the Control</returns>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxControl.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Called by the Gaia framework when the html markup for the Control should be rendered into 
            provided writer
            </summary>
            <param name="create">XhtmlTagFactory instance, which is used to create valid Xhtml markup</param>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxControl.InDesigner">
            <summary>
            Specifies if the Control is in DesignMode
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxControl.Control">
            <summary>
            Should return the control itself.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxControl.StateManager">
            <summary>
            Provides access to the state manager associated with the widget.
            Default behaviour in AjaxControl is to instanciate by passing only a reference to the Control.  
            Derived classes are allowed to override default behaviour which might be useful if you have
            special additional rendering through e.g. usage of the IExtraPropertyCallbackRenderer interface.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxControl.AjaxControl">
            <summary>
            Returns the AjaxControl object associated with this control. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxControl.TagName">
            <summary>
            Specifies tag which should be used when rendering invisible ajax control placeholder
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects">
            <summary>
            The Aspect collection contains all the Aspects for this control. Aspects
            are functional units that extend the behavior of this control. It allows
            you to add new dynamic functionality to almost all Gaia controls. Aspects
            can also be created as separate extensions. There exists many core Aspects
            built-in like <see cref="T:Gaia.WebWidgets.AspectClickable"/> and <see cref="T:Gaia.WebWidgets.AspectDraggable"/>
            just to name a few. You can also make any control Modal, by adding 
            <see cref="T:Gaia.WebWidgets.AspectModal"/>to the Aspects collection of that control. 
            </summary>
            <remarks>
            Not all aspects can be added to all controls. There's simply too many possible
            combinations to test everything. 
            </remarks>
            <example>
            <code title="Adding AspectClickable programmatically" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectClickable\Overview\Default.aspx.cs" region="Code"/>
            </code>
            <code title="Adding AspectModal in CodeBehind" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectModal\Overview\Default.aspx.cs"/>
            </code>
            </example>
        </member>
        <member name="P:Gaia.WebWidgets.IAspectableAjaxControl.AspectableAjaxControl">
            <summary>
            Retrieves the AspectableAjaxControl object associated with the Control
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.ExecuteLoadPostData(Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate,System.String,System.Collections.Specialized.NameValueCollection,Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate)"/> method for documentation. This method only forwards to that method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.OnPreRender(System.EventArgs)">
            <summary>
            See also <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.RenderControl(System.Web.UI.HtmlTextWriter)"/> method for documentation. This method only forwards to that method.
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBox.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="E:Gaia.WebWidgets.CheckBox.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.CheckBox.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBox.Text">
            <summary>
            Gets or sets the Text of the control. The default value is ""
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBox.AutoPostBack">
            <summary>
            Gets or sets the AutoPostBack property. If this property is true the control will generate an
            Ajax Request when it's value changes.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBox.Checked">
            <summary>
            Gets or sets if the CheckBox is CHECKED or not
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBox.TextAlign">
            <summary>
            Gets or sets the text alignment of the text of the CheckBox (right or left)
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBox.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when the <see cref="T:Gaia.WebWidgets.CheckBox"/> control is clicked.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBox.ValidationGroup">
            <summary>
            Gets or sets the group of controls for which the <see cref="T:Gaia.WebWidgets.CheckBox"/> control causes validation when it posts back to the server.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBox.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBox.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.BoundField">
            <summary>
            Represents a field that is displayed as text in a data-bound control.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.IAjaxBoundField">
            <summary>
            Interface implemented by <see cref="T:Gaia.WebWidgets.BoundField"/> and derived controls for accessing protected members.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxBoundField.OnFieldChanged">
            <summary>
            Raises the FieldChanged event.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxBoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> object to the specified row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> to initialize.</param>
            <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState"/> values.</param>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxBoundField.ViewState">
            <summary>
            Gets a dictionary of state information that allows you to save and 
            restore the view state of a <see cref="T:Gaia.WebWidgets.BoundField"/> object across multiple requests for the same page.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxBoundField.SupportsHtmlEncode">
            <summary>
            Gets or sets a value indicating whether HTML encoding is supported by a <see cref="T:Gaia.WebWidgets.BoundField"/> object.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BoundField.#ctor">
            <summary>
            Initializes new instance of the <see cref="T:Gaia.WebWidgets.BoundField"/> class.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BoundField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Initializes the <see cref="T:Gaia.WebWidgets.BoundField"/> object.
            </summary>
            <param name="enableSorting">True if sorting is supported; otherwise, false.</param>
            <param name="control">The data control that owns the <see cref="T:Gaia.WebWidgets.BoundField"/>.</param>
            <returns>False in all cases</returns>
        </member>
        <member name="M:Gaia.WebWidgets.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> object to the specified row state. 
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> to initialize.</param>
            <param name="cellType">One of the <see cref="T:System.Web.UI.WebControls.DataControlCellType"/> values.</param>
            <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState"/> values.</param>
            <param name="rowIndex">The zero-based index of the row.</param>
        </member>
        <member name="M:Gaia.WebWidgets.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> object to the specified row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> to initialize.</param>
            <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState"/> values.</param>
        </member>
        <member name="M:Gaia.WebWidgets.BoundField.CreateField">
            <summary>
            Creates an empty <see cref="T:Gaia.WebWidgets.BoundField"/> object.
            </summary>
            <returns>An empty <see cref="T:Gaia.WebWidgets.BoundField"/>.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.BoundField.Gaia#WebWidgets#IAjaxBoundField#OnFieldChanged">
            <summary>
            Raises the FieldChanged event.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BoundField.Gaia#WebWidgets#IAjaxBoundField#InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> object to the specified row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> to initialize.</param>
            <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState"/> values.</param>
        </member>
        <member name="P:Gaia.WebWidgets.BoundField.HeaderText">
            <summary>
            Gets or sets the text that is displayed in the header of a data control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.BoundField.Gaia#WebWidgets#IAjaxDataControlField#Control">
            <summary>
            Gets a reference to the data control that the <see cref="T:System.Web.UI.WebControls.DataControlField"/> object is associated with.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.BoundField.Gaia#WebWidgets#IAjaxBoundField#ViewState">
            <summary>
            Gets a dictionary of state information that allows you to save and 
            restore the view state of a <see cref="T:Gaia.WebWidgets.BoundField"/> object across multiple requests for the same page.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.BoundField.Gaia#WebWidgets#IAjaxBoundField#SupportsHtmlEncode">
            <summary>
            Gets or sets a value indicating whether HTML encoding is supported by a <see cref="T:Gaia.WebWidgets.BoundField"/> object.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.EffectUtils">
            <summary>
            Contains Utility methods for working with Effects in your application. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.EffectUtils.AppendElementID``1(System.String,``0)">
            <summary>
            This Function will apply a postfix to the ElementID which is retrieved from the the AjaxControl the effect is attached to.
            This is a useful function if you need to apply an Effect to the Body of a Control instead of the entire control itself. Examples
            include Window and ExtendedPanel which define their own content area.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="childId"></param>
            <param name="effect"></param>
            <returns></returns>
        </member>
        <member name="T:Gaia.WebWidgets.Effects.PrototypeEffectBase">
            <summary>
            Prototype defines a few "Effects" like show, hide, toggle which is implemented in the core library
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Effect">
            <summary>
            Base class for Effects. 
            note: This class has not been marked abstract for backwards compatibility. Ideally you should not use the ctor, but rather construct
            each individual effect descendant directly. For example new EffectShow, new EffectHide, 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.IEffect">
            <summary>
            Implemented on Effect explicitly to make a cleaner API when working with effects. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IEffect.GetScript">
            <summary>
            retrieves the script that represents the effect
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.IEffect.IncludeScriptFiles">
            <summary>
            Include script files
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IEffect.ElementID">
            <summary>
            a string containing the id of the element
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IEffect.PropertyParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Effect.PopulateProperties(Gaia.WebWidgets.RegisterEffect)">
            <summary>
            Override this function to automatically add custom properties to your derivative control/effect
            </summary>
            <param name="registerEffect">the </param>
        </member>
        <member name="M:Gaia.WebWidgets.Effect.IncludeScriptFiles">
            <summary>
            Override in derived classes to include custom javascript files for 
            automatic inclusion.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Effect.GetElementReference">
            <summary>
            Returns the id of the assocaited DOM element or
            client-side script which returns the id of the associated DOM element.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Effect.Show(System.String,Gaia.WebWidgets.Effect)">
            <summary>
            Utilize an effect on an element 
            </summary>
            <param name="elementId"></param>
            <param name="effect"></param>
        </member>
        <member name="M:Gaia.WebWidgets.Effect.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Effect.#ctor(System.Web.UI.Control,Gaia.WebWidgets.Effect.TypeOfEffect)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Effect.#ctor(System.String,Gaia.WebWidgets.Effect.TypeOfEffect)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Effect.#ctor(System.String,Gaia.WebWidgets.Effect.TypeOfEffect,System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Effect.#ctor(System.Web.UI.Control,Gaia.WebWidgets.Effect.TypeOfEffect,System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Effect.AppendID">
            <summary>
            AppendID is appended to the ElementID and is useful if  you need to apply an effect to an inner element.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Effect.TypeOfEffect">
            <summary>
            The type of effect to execute
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.Highlight">
            <summary>
            Highlights or "flash" the control
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.Appear">
            <summary>
            Makes the control "fade into" visibility, control should be INVISIBLE first
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.Fade">
            <summary>
            Fades control "out of visibility", contro should be visible
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.Puff">
            <summary>
            Makes the control "explode and fade" out of visibility
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.BlindUp">
            <summary>
            Makes the control "roll up" into invisibility
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.BlindDown">
            <summary>
            Makes the control "roll down" into VISIbility
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.SwitchOff">
            <summary>
            Makes the control "collapse" into invisibility
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.DropOut">
            <summary>
            Makes the control "fall down" on the page at the same time it's being faded
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.Shake">
            <summary>
            "Shakes" the element to the right and left a bit, doesn't modify visibility
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.Squish">
            <summary>
            Makes the element shrink into a corner before disappearing
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.Grow">
            <summary>
            Makes control grow from a point and into visibility, control should be INvisile first
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.Shrink">
            <summary>
            Makes control vanish into a point, opposite of Grow
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.Pulsate">
            <summary>
            Makes control pulse from and to visibility and vice versa, control should be visible first, control becomes INvisible
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.Fold">
            <summary>
            Makes control first roll up and then fold to the right, makes control IN visible, control should be visible first
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.SlideUp">
            <summary>
            This effect simulates a window blind, where the contents of the affected elements scroll up.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Effect.TypeOfEffect.SlideDown">
            <summary>
            This effect simulates a window blind, where the contents of the affected elements scroll down.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Effects.PrototypeEffectBase.GetElementMethod">
            <summary>
            Override this to provide a custom function name for this Prototype effect. 
            Examples include "show", "hide", "toggle" which will serialize a JavaScript call
            like Element.show(this.element.id); for example
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gaia.WebWidgets.Effects.EffectShow">
            <summary>
            Displays the AjaxControl
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Effects.EffectShow.GetElementMethod">
            <summary>
            Returns the function name for this effect
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gaia.WebWidgets.AspectHoverable">
            <summary>
            AspectHoverable can dispatch server events on true MouseOver/MouseOut events for a control.
            It automatically takes care of the bubbling problem and only dispatches the event if you have subscribed to it and if 
            it actually is a true MouseOver of that Element.
            <br />
            Also notice that the MouseOver and MouseOut events for many of the Gaia Ajax controls actually use AspectHoverable under the 
            hood by using AspectBindings. In many cases it's more appropriate to use those events directly instead of adding the Aspect. 
            </summary>
            <example>
            <code title="ASPX Markup for AspectHoverable" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectHoverable\Overview\Default.aspx" />
            </code> 
            <code title="Listening to OnMouseOver and OnMouseOut with AspectHoverable" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectHoverable\Overview\Default.aspx.cs" region="Code" />
            </code>
            </example>
        </member>
        <member name="T:Gaia.WebWidgets.Aspect`1">
            <summary>
            Contains equality operators to avoid duplicate aspects. Inherit from this class if you don't plan to add your
            own equality checks. 
            </summary>
            <typeparam name="T">Aspect type.</typeparam>
        </member>
        <member name="T:Gaia.WebWidgets.Aspect">
            <summary>
            This class implements IAspect and can be used as the base class for creating your own Aspects. If you want to be able to 
            bind your aspects to members (ie. properties, events) you need to inherit from this class so that the sender argument get's
            correct. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.IAspect">
            <summary>
            Interface all aspects must implement
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAspect.GetScript">
            <summary>
            Returns Aspect initialization script
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAspect.IncludeScriptFiles">
            <summary>
            Called when it's time to include the JavaScript files for the Aspect
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAspect.ParentControl">
            <summary>
            The Control the Aspect is attached to
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Aspect.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Aspect.GetSender">
            <summary>
            Returns the actual sender of the event raised by the aspect.
            Used by derived classes to provide the correct sender in aspect binding scenarios.
            </summary>
            <returns>Actual sender of the event(s) raised by the aspect</returns>
        </member>
        <member name="P:Gaia.WebWidgets.Aspect.ParentControl">
            <summary>
            See <see cref="P:Gaia.WebWidgets.IAspect.ParentControl"/> for documentation
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Aspect.Owner">
            <summary>
            Marked as internal as it is only used to detect wheter the aspect instance is memberbound or not. Is only using within GetSender()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Aspect`1.Equals(Gaia.WebWidgets.Aspect)">
            <summary>
            Determines whether the specified <see cref="T:Gaia.WebWidgets.Aspect"/> is equal to the current.
            </summary>
            <returns>
            true if the specified <see cref="T:Gaia.WebWidgets.Aspect"/> is equal to the current object; otherwise, false.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.Aspect`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.Aspect`1.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gaia.WebWidgets.AspectHoverable.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectHoverable.#ctor(System.EventHandler{Gaia.WebWidgets.AspectHoverable.HoverEventArgs})">
            <summary>
            Constructor taking event handler for the MouseOver Event
            </summary>
            <param name="mouseOver">delegate called when item is Hovered over (mouse positioned above it)</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectHoverable.#ctor(System.EventHandler{Gaia.WebWidgets.AspectHoverable.HoverEventArgs},System.EventHandler)">
            <summary>
            Constructor taking event handler for the MouseOver and the MouseOut Event
            </summary>
            <param name="mouseOver">delegate called when item is Hovered over (mouse positioned above it)</param>
            <param name="mouseOut">delegate called when item is Hovered out of (mouse removed from element)</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectHoverable.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectHoverable.EffectEventMouseOver">
            <summary>
            Add this EffectEvent to a control to add an effect when the mouse is moved over the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectHoverable.EffectEventMouseOut">
            <summary>
            Add this EffectEvent to a control to add an effect when the mouse is moved out of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectHoverable.UseRelativeCoordinates">
            <summary>
            When you click the element which this aspect is attached to, you will retrieve the coordinates on the server
            By default it will capture the absolute x,y position on the entire viewport, but if you want to only capture
            x,y relative to the aspects parent container you can set this value to true. 
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectHoverable.MouseOver">
            <summary>
            Event raised when mouse passes over the element
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectHoverable.MouseOut">
            <summary>
            Event raised when mouse passes OUT of the element's surface
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectHoverable.HoverEventArgs">
            <summary>
            EventArgs for the Hover Event
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.MouseEventArgs">
            <summary>
            Base EventArgs for Mouse related events
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.MouseEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor to be used with derived classes.
            </summary>
            <param name="left">Left position</param>
            <param name="top">Top position</param>
            <param name="controlKeys">Encoded control keys (Shift/Control/Alt)</param>
        </member>
        <member name="P:Gaia.WebWidgets.MouseEventArgs.CtrlKey">
            <summary>
            Returns True if the Control key was pressed during the click event
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.MouseEventArgs.ShiftKey">
            <summary>
            Returns True if the Shift key was pressed during the click event
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.MouseEventArgs.AltKey">
            <summary>
            Returns true if the Alt key was pressed during the click event
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.MouseEventArgs.Top">
            <summary>
            Offset from top of browser view
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.MouseEventArgs.Left">
            <summary>
            Offset from left of browser view
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Label">
            <summary>
            The Gaia Ajax Label displays text on a Web page. 
            It inherits from the <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.label.aspx">ASP.NET Label</a>, 
            and has built-in Ajax behaviour.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.IAjaxContainerControl">
            <summary>
            This interface defines that a Gaia Control is a container widget which means it can contain 
            child controls. Examples of such Controls are Panel, MultiView etc.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxContainerControl.ForceAnUpdate">
            <summary>
            Forces a re-rendering of the child controls of the widget. If you call this method
            the entire HTML markup of the widget will re-render. Note that this will be very
            bandwidth intensice compared to just updating the specifically changed controls instead
            so use this with CAUTION. Gaia tries to do "partial rendering" as seldom as possible
            but by calling this method you can "force" Gaia into doing a complete partial re-rendering
            of the widget which might inevitable occassionally.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxContainerControl.ForceAnUpdateWithAppending">
            <summary>
            Does the exact same thing as ForceAnUpdate except it only re-renders the child controls
            that are not previously rendered and it appends all child controls at the back of the list
            of DOM elements on the Client. Used in e.g. the AspectScrollable to create LiveScrolling and
            similar functionality. Note that this will APPEND all the non-rendered control back to the
            client which means that if you insert widgets at specific places in the Controls collection
            you might get surprised since those widgets will appear APPENDED on the client.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxContainerControl.TrackControlAdditions">
            <summary>
            TrackControlAdditions is used in combination with ForceAnUpdate() or ForceAnUpdateWithAppending()
            It basically signals that all controls added after calling this method will be appended to the container
            control. Useful for minimizing network traffic when you only need to append one new control at the bottom
            of the control, for example TreeViewItems, Panels and similar. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxContainerControl.RenderChildrenOnForceAnUpdate(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Called when ForceAnUpdate is dispatched for a control and the
            control needs to re-render its child control collection.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxContainerControl.GetDOMContainer(Gaia.WebWidgets.IAjaxControl)">
            <summary>
            Returns id of the DOM element which acts as the actual container
            for the specified child. Used during dynamic rendering.
            </summary>
            <param name="child">Child control to get container for</param>
            <returns>ID of the DOM element which should contain specified child</returns>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxContainerControl.AjaxContainerControl">
            <summary>
            Retrieves actual AjaxContainerControl associated with the Control
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.Label.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.Label.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.Label.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Label.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Label.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.Label.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.Label.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.Label.Gaia#WebWidgets#IAjaxControl#RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Calls base class RenderControl method
            </summary>
            <param name="create">XhtmlTagFactory to use to create XHTML</param>
        </member>
        <member name="M:Gaia.WebWidgets.Label.Gaia#WebWidgets#IAjaxContainerControl#ForceAnUpdate">
            <summary>
            Forces a re-rendering of the child controls of the widget.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.Gaia#WebWidgets#IAjaxContainerControl#ForceAnUpdateWithAppending">
            <summary>
            Does the exact same thing as ForceAnUpdate except it only re-renders the child controls
            that are not previously rendered and it appends all child controls at the back of the list
            of DOM elements on the Client.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.Gaia#WebWidgets#IAjaxContainerControl#TrackControlAdditions">
            <summary>
            TrackControlAdditions is used in combination with ForceAnUpdate() or ForceAnUpdateWithAppending().
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.Gaia#WebWidgets#IAjaxContainerControl#RenderChildrenOnForceAnUpdate(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Called when ForceAnUpdate is dispatched for a control and the
            control needs to re-render its child control collection.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.Gaia#WebWidgets#IAjaxContainerControl#GetDOMContainer(Gaia.WebWidgets.IAjaxControl)">
            <summary>
            Returns id of the DOM element which acts as the actual container
            for the specified child. Used during dynamic rendering.
            </summary>
            <param name="child">Child control to get container for</param>
            <returns>ID of the DOM element which should contain specified child</returns>
        </member>
        <member name="E:Gaia.WebWidgets.Label.Click">
            <summary>
            Event is fired when the control is clicked. Use the eventArgs to retrieve the mouse coordinates for the 
            click event
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.Label.DoubleClick">
            <summary>
            Event is fired when the control is double clicked. Use the eventArgs to retrieve the mouse coordinates for the 
            click event
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.Label.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.Label.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Label.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Label.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Label.Gaia#WebWidgets#IAjaxContainerControl#AjaxContainerControl">
            <summary>
            Retrieves actual AjaxContainerControl associated with the Control
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Label.LabelAjaxControl">
            <summary>
            Specialized implementation of <see cref="P:Gaia.WebWidgets.Label.AjaxContainerControl"/> for <see cref="T:Gaia.WebWidgets.Label"/>.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AjaxContainerControl">
            <summary>
            Common implmentation for Controls implementing IAjaxContainerControl interface. Usage is to implement
            IAjaxContainerControl and forward every method in that interface to this class. 
            All AjaxContainer Controls supports partial rendering by supporting the ForceAnUpdate method and
            related method TrackControlAdditions which means that the user can only render new controls that are 
            appended on the control when needed. Examples of controls using this class is Panel, HybridPanelBase and MultiView
            </summary>
            <seealso cref="T:Gaia.WebWidgets.IAjaxContainerControl"/>
            <seealso cref="T:Gaia.WebWidgets.AjaxControl"/>
            <seealso cref="T:Gaia.WebWidgets.IAjaxControl"/>
            <seealso cref="T:Gaia.WebWidgets.AspectableAjaxControl"/>
            <seealso cref="T:Gaia.WebWidgets.IAspectableAjaxControl"/>
        </member>
        <member name="T:Gaia.WebWidgets.AspectableAjaxControl">
            <summary>
            This is the worker class used by Aspectable Gaia Controls. It's primary responsibility is to handle Aspects.
            Usage is to implement IAjaxControl and forward every method in that interface to this class.
            </summary>
            <seealso cref="T:Gaia.WebWidgets.IAjaxContainerControl"/>
            <seealso cref="T:Gaia.WebWidgets.AjaxContainerControl"/>
            <seealso cref="T:Gaia.WebWidgets.AjaxControl"/>
            <seealso cref="T:Gaia.WebWidgets.IAjaxControl"/>
        </member>
        <member name="T:Gaia.WebWidgets.AjaxControl">
            <summary>
            This is the worker class used by Gaia Ajax Controls to initialize the ajax machinery.
            It handles state, rendering, callbacks, general inclusion of resources and more. 
            <para>Usage is to implement IAjaxControl and write forward calls in that interface to this class.</para>
            </summary>   
            <seealso cref="T:Gaia.WebWidgets.AspectableAjaxControl"/>
            <seealso cref="T:Gaia.WebWidgets.AjaxContainerControl"/>
            <seealso cref="T:Gaia.WebWidgets.IAjaxControl"/>
            <seealso cref="T:Gaia.WebWidgets.IAjaxContainerControl"/>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.#ctor(Gaia.WebWidgets.IAjaxControl)">
            <summary>
            The constructor takes a control that implements the IAjaxControl interface. 
            </summary>
            <param name="ajaxControl">Control which implements the IAjaxControl interface</param>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.Focus">
            <summary>
            Sets input focus to this control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.OnInit">
            <summary>
            Forward calls of <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)"/> to this method.
            Prepares ajax functionality of the control.        
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.TrackViewState">
            <summary>
            Forward calls of <see cref="M:System.Web.UI.Control.TrackViewState"/> to this method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.LoadControlState(System.Object)">
            <summary>
            Called to load control state
            </summary>
            <param name="savedState">Saved control state</param>
            <returns>Saved state to pass to the base LoadControlState method</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)">
            <summary>
            Called at the begining of the <see cref="M:System.Web.UI.Control.LoadControlState(System.Object)"/> method 
            to extract saved state for the chained <see cref="M:System.Web.UI.Control.LoadControlState(System.Object)"/> method.
            Should be coupled with <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> method after the control state is loaded.
            </summary>
            <param name="savedState">Saved control state</param>
            <returns>Saved state to pass to the chained (base) <see cref="M:System.Web.UI.Control.LoadControlState(System.Object)"/> method</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState">
            <summary>
            Called at the end of the <see cref="M:System.Web.UI.Control.LoadControlState(System.Object)"/> method
            after the state loading is fully complete.
            Should be coupled with the <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)">
            <summary>
            Called at the begining of the <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)"/> method 
            to extract saved state for the chained <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)"/> method.
            Should be coupled with <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> method after the viewstate is loaded.
            </summary>
            <param name="savedState">Saved view state</param>
            <returns>Saved state to pass to the chained (base) <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)"/> method</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState">
            <summary>
            Called at the end of the <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)"/> method
            after the state loading is fully complete.
            Should be coupled with the <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.ExecuteLoadPostData(Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate,System.String,System.Collections.Specialized.NameValueCollection,Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate)">
            <summary>
            This function is used to make sure we detect changes and merge them when LoadPostData Second Try fires after you have modified
            the state of your control. 
            </summary>
            <param name="loadPostDataDelegate">Pass in the LoadPostDataDelegate</param>
            <param name="postDataKey">Post Data Key</param>
            <param name="postCollection">Name Value Collection </param>
            <param name="clearPropertyStateDelegate">
            Delegate which will be called when clearing of dirtyness
            may be nesseccary for some properties
            </param>
            <returns>True if State Changed</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.OnPreRender">
            <summary>
            Called just before the rendering of the Control is being initiated.
            We use this override to add inclusion of the JavaScript files for the <see cref="T:System.Web.UI.Control"/> and signalize that we have
            a Gaia Control visible on the <see cref="T:System.Web.UI.Page"/>
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)">
            <summary>
            Forward calls of <see cref="M:System.Web.UI.Control.SaveViewState"/> to this method. 
            Stores required state information.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)">
            <summary>
            Saves state information into control state if <see cref="P:System.Web.UI.Control.EnableViewState"/> is false.
            </summary>
            <param name="savedState">Base saved state</param>
            <returns>New state to save into control state</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Forward calls of <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)"/> to this method.
            Renders the control. Handles various scenarios that controls can be rendered in. 
            </summary>        
            <param name="writer">Specifies where the Control will be rendered</param>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.OnUnload">
            <summary>
            Forward calls of <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)"/> to this method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.RegisterDefaultSkinStyleSheetFromResource(System.Type,System.String)">
            <summary>
            Registers a stylesheet from the resource using the specified <paramref name="type"/> and <paramref name="resourceName"/> 
            for the associated <see cref="T:Gaia.WebWidgets.ISkinControl"/>.
            </summary>
            <param name="type">Type which acts as a key for the embedded resource to include.</param>
            <param name="resourceName">The embedded resource name to include.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.RenderNonCallback(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            This method will run when either this is an initial hit, a conventional postback or
            for some other reasons (e.g. ForceAnUpdate) the control needs to render HTML instead
            of just changing the property values.
            </summary>
            <param name="create">XhtmlTagFactory passed to use as basis for creating markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.ResolveClientReferenceConflicts(System.IO.TextWriter)">
            <summary>
            Resolves client reference and client id conflicts.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.ResolveClientReferenceSelfConflict">
            <summary>
            Resolve <see cref="P:Gaia.WebWidgets.AjaxControl.ClientReference"/> conflict when itself.
            </summary>
            <remarks>
            Such conflicts occur for example when the control is moved and rerendered,
            in which case the old reference needs to cleaned up.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.IsPartOfRerendering(System.Boolean)">
            <summary>
            Returns true if the <see cref="P:Gaia.WebWidgets.AjaxControl.ClientReference"/> is part of rerendering.
            </summary>
            <param name="includeSelf">True if this <see cref="T:Gaia.WebWidgets.AjaxControl"/> should be analyzed as well.</param>
            <remarks>
            Being part of rerendering means that <see cref="P:Gaia.WebWidgets.AjaxControl.ClientReference"/> cannot be used as client reference.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.ResolveClientReferenceConflict(Gaia.WebWidgets.AjaxControl,System.IO.TextWriter)">
            <summary>
            Resolve <see cref="P:Gaia.WebWidgets.AjaxControl.ClientReference"/> conflict with the specified <paramref name="conflictingControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.GetContainer(System.Web.UI.Control,System.Boolean)">
            <summary>
            Returns containing <see cref="T:System.Web.UI.ControlCollection"/> for the specified control.
            </summary>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.GetVirtualContainer(System.Web.UI.Control)"/>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.GetVirtualContainer(System.Web.UI.Control)">
            <summary>
            Returns virtual <see cref="T:System.Web.UI.ControlCollection"/> for the specified child <paramref name="control"/>.
            </summary>
            <param name="control">Child control to get cotnainer for.</param>
            <returns>Virtual container for the specified control.</returns>
            <remarks>
            Container <see cref="T:System.Web.UI.ControlCollection"/> can be partitioned into different sets or
            combined into different groups which are rendered and handled seperately.
            Such an example is child ToolbarItems and ChildControls of a ToolbarItem.
            This method should return virtual partition of the container to use for DRIMR operations.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.HandleReplacement(System.Boolean)">
            <summary>
            Tries to find a replacement and render changes instead of it.
            </summary>
            <remarks>
            Replacement is an <see cref="T:Gaia.WebWidgets.IAjaxControl"/>, which was removed
            from the same position as the control being rendered.
            </remarks>
            <param name="rendered">True if the control was rendered.</param>
            <returns>
            True if replacement of the same type was found and replacement does not require markup rendering.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.HandleContainerPlacement(Gaia.WebWidgets.Helpers.CallbackWriter,System.Boolean,System.Boolean)">
            <summary>
            Tries to render the control into the top or bottom parts of its parent container.
            </summary>
            <returns>True if placement succeeded. Otherwise, false.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.HandleAfterPlacement(System.Web.UI.ControlCollection,System.Int32,System.Boolean)">
            <summary>
            Try to find a place after which to put this control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.HandlePlacementFailure(Gaia.WebWidgets.Helpers.CallbackWriter,System.Web.UI.ControlCollection,System.Int32,System.Boolean)">
            <summary>
            Tries to handle the case when the any placement did not succeed.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.RenderCallback(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the Control during Ajax Callback.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.DetermineRequiresMoveSerialization">
            <summary>
            When the ajax control is replaced, this method is called to check
            if the move script needs to serialized, or if it is handled by the replacement script
            </summary>
            <returns>True if during ajax control replacement, move script needs to be serialized</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.RenderControlFirstTimeOnAjaxCallback">
            <summary>
            Called when the control is being rerendered during ajax callback.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.RenderControlChangesOnAjaxCallback">
            <summary>
            Called during ajax callback to render control state changes.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.GetMarkup">
            <summary>
            When the control has not yet been rendered to the page, this function is used to extract the control 
            content and inject it into the page.
            </summary>
            <returns>Widget HTML initialization sent back to the client</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.GetDesignTimeWriter(System.IO.TextWriter)">
            <summary>
            Returns provided <paramref name="writer"/> as is, if it's already a <see cref="T:Gaia.WebWidgets.DesignTimeHtmlTextWriter"/>,
            or creates and returns new <see cref="T:Gaia.WebWidgets.DesignTimeHtmlTextWriter"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.RenderStyleSheetsDesignTime(Gaia.WebWidgets.DesignTimeHtmlTextWriter,System.Collections.Generic.KeyValuePair{System.Type,System.String})">
            <summary>
            Renders specified <paramref name="styleSheet"/> into the provided <paramref name="writer"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.RenderDesignTime(Gaia.WebWidgets.DesignTimeHtmlTextWriter)">
            <summary>
            Renders the associated control into the specified <paramref name="writer"/> during desing-time.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.RenderBasicAction(System.String,System.Boolean,System.String,System.String,System.IO.TextWriter)">
            <summary>
            Renders basic DRIMR action to the current writer.
            </summary>
            <param name="action">DRIMR action to perform.</param>
            <param name="move">
            True if sourceContent is the id of the node which needs to be moved to referenceNode; otherwise: false.
            </param>
            <param name="referenceNode">Reference node for the action.</param>
            <param name="sourceContent">Markup for the action if not moved, otherwise: id of the node to move.</param>
            <param name="writer">Writer for rendering.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.GetCoordinates(System.Boolean)">
            <summary>
            Returns coordinates of the control on the page.
            </summary>
            <param name="useVirtualContainers">
            When true uses virtual containers to get virtual coordinates.
            </param>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.GetReplacement">
            <summary>
            Tries to find replacement for the owner control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.DenoteSamePosition(System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Returns true if <paramref name="first"/> and <paramref name="second"/> have the same size
            and same elements. Otherwise return false.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.AreAllEmptyLiteralControls(System.Web.UI.ControlCollection,System.Int32,System.Int32)">
            <summary>
            Returns true if all controls in the specified <paramref name="container"/>
            from <paramref name="start"/> to <paramref name="end"/> satisfy <see cref="M:Gaia.WebWidgets.AjaxControl.IsEmptyLiteralControl(System.Web.UI.Control)"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.IsEmptyLiteralControl(System.Web.UI.Control)">
            <summary>
            Returns true if specified <paramref name="control"/> is a <see cref="T:System.Web.UI.LiteralControl"/>,
            which does not have text or text is only whitespace which can be ignored.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.ApplyDefaultSkin">
            <summary>
            Applies default skin to the controls implementing ISkinControl interface
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.SaveState(System.Object)">
            <summary>
            Saves ajax control state.        
            </summary>
            <remarks>
            Ajax control state is encoded based on following assumptions:
            1. If the control is visible, then it rendered
            2. If the control is invisible, but its parent is visible, then control is rendered invisibile
            3. If the control is invisible, but its parent is invisible, then control is not rendered
            
            Resulting state is prepared so that it uses least possible bytes when encoded.
            </remarks>
            <param name="savedState">Saved state</param>
            <returns>Saved state for ajax control</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.LoadState(System.Object)">
            <summary>
            Extracts ajax control state from specified saved state
            and returns saved state to pass to base state loading methods.
            </summary>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.SaveState(System.Object)"/>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.TryLoadAjaxControlState(System.Object,System.Boolean)"/>
            <param name="savedState">Save state to load from.</param>
            <returns>Saved state to pass to base state loading methods.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxControl.TryLoadAjaxControlState(System.Object,System.Boolean)">
            <summary>
            Tries to load ajax control state from the specified saved state.
            </summary>
            <see cref="M:Gaia.WebWidgets.AjaxControl.SaveState(System.Object)"/> for more info.
            <param name="savedState">Saved state to load from.</param>
            <param name="checkOnly">If true, only saved state is checked, otherwise the state is actually loaded.</param>
            <returns>True if the it was possible to load state from the specified saved state. Otherwise, false.</returns>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.StateManager">
            <summary>
            See <see cref="P:Gaia.WebWidgets.IAjaxControl.StateManager"/> for documentation on this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.Manager">
            <summary>
            Shortend way to access Manager.Instance.
            Used by derived classes for cached access to Manager.Instance.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.ClientReference">
            <summary>
            Returns the client reference which the control has been rendered with.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.Renamed">
            <summary>
            Returns true if the ClientID of the associated <see cref="T:System.Web.UI.Control"/> was modified.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.ShouldRender">
            <summary>
            Returns true if the control should be completely re-rendered. Gaia tries to do "partial rendering" as
            seldom as possible, however there are a few scenarios where partial rendering is "inevitable".
            One of those are if the control has not previously been rendered due to either being "invisible" or
            some ancestor container widget was invisible. Another reason might be because the control needs a full
            re-rendering like for instance ForceAnUpdate on container widgets. If this property is true then
            a full re-rendering will be initiated.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.ShouldRenderAjaxControl">
            <summary>
            Returns true if the associated <see cref="T:System.Web.UI.Control"/> needs to be rendered.
            </summary>
            <remarks>
            Used by derived classes to know if the control should be rendered or not
            based on the facts if the <see cref="P:Gaia.WebWidgets.AjaxControl.ShouldRender"/> was set or <see cref="T:System.Web.UI.Control"/> was previously rendered
            </remarks>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.WasMadeVisible">
            <summary>
            True if the visibility of control was changed from false to true.
            Otherwise, false.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.WasMadeHidden">
            <summary>
            True if the visibility of the control was changed from true to false.
            Otherwise, false.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.Rendered">
            <summary>
            Gets value indicating if this ajax control was previously rendered or not.
            Used by derived classes.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.Rerendered">
            <summary>
            Gets value indicating if the ajax control is rerendered.
            Used by derived classes.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.Moved">
            <summary>
            True if the control was removed and readded to a position
            which is different from the initial one.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.Removed">
            <summary>
            True if the control was removed and it is not part of the control tree.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.PartOfControlTree">
            <summary>
            True if the control is part of the control tree,
            meaning it is possible to climb up to the page using Parent property.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.ShouldRemove">
            <summary>
            Returns true if after all controls are rendered it does not act as a placeholder
            for any DRIMR operation and it is not part of any rerendering (which would have resulted in correct client state), and:
            1. the control was removed and not readded to the control tree
            - or -
            2. it was rendered on the client, but wasn't or couldn't be rendered during this request
            - or -
            3. control was moved and the initial state was not used for that (ie. moved and rerendered)
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.ViewStateEnabled">
            <summary>
            Returns true if State information can be persisted in the ViewState of the control.
            Otherwise, false.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxControl.Focused">
            <summary>
            Gets or sets if the input focus is set to this control.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate">
            <summary>
            Callback delegate for the <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)"/> method.
            Used in combination with <see cref="M:Gaia.WebWidgets.AjaxControl.ExecuteLoadPostData(Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate,System.String,System.Collections.Specialized.NameValueCollection,Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate)"/> method.
            </summary>
            <param name="postDataKey">Post Data Key</param>
            <param name="postCollection">Name Value Collection</param>
            <returns>True if State Changed</returns>
        </member>
        <member name="T:Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate">
            <summary>
            Delegate specifying a delegate which will be called
            when clearing of the dirtyness of some properties
            during LoadPostData() may be nesseccary
            </summary>
            <param name="stateMananger">StateManager instance to use for clearing property state</param>
        </member>
        <member name="T:Gaia.WebWidgets.AjaxControl.ReplacementMode">
            <summary>
            Defines how the replacement was handled.
            </summary>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.HandleReplacement(System.Boolean)"/>.
        </member>
        <member name="F:Gaia.WebWidgets.AjaxControl.ReplacementMode.NotReplaced">
            <summary>
            No replacement was found or was not able to replace.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AjaxControl.ReplacementMode.ReplacedWithRendering">
            <summary>
            Replacement was found with required markup rendering.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AjaxControl.ReplacementMode.ReplacedWithoutRendering">
            <summary>
            Replacement was found which did not require markup rendering.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectableAjaxControl.#ctor(Gaia.WebWidgets.IAspectableAjaxControl)">
            <summary>
            Creates new instance of <see cref="T:Gaia.WebWidgets.AspectableAjaxControl"/> class.
            </summary>
            <param name="control">Control to associate with.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectableAjaxControl.OnPreRender">
            <summary>
            PreRender override to make sure we add up the JavaScript files for the aspects in the Aspects 
            list of the control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectableAjaxControl.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxContainerControl.#ctor(Gaia.WebWidgets.IAjaxContainerControl)">
            <summary>
            Constructor
            </summary>
            <param name="control">Control which owns this instance</param>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxContainerControl.ForceAnUpdate">
            <summary>
            See <see cref="M:Gaia.WebWidgets.IAjaxContainerControl.ForceAnUpdate"/> for documentation on this method
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxContainerControl.ForceAnUpdateWithAppending">
            <summary>
            See <see cref="M:Gaia.WebWidgets.IAjaxContainerControl.TrackControlAdditions"/> for documentation on this method
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxContainerControl.TrackControlAddition">
            <summary>
            Call this function to start tracking control additions. All controls added to the controls collection
            after this will be rendered during ForceAnUpdate() or ForceAnUpdateWithAppending(). This is very useful
            when you are just adding new content like for example new TreeViewItems in the TreeView or adding new
            stuff in for example AspectScrollable. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxContainerControl.OnPreRender">
            <summary>
            Overridden to ensure inclusion of common JavaScript files
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxContainerControl.DetermineRequiresMoveSerialization">
            <summary>
            When the ajax control is replaced, this method is called to check
            if the move script needs to serialized, or if it is handled by the replacement script
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxContainerControl.RenderControlFirstTimeOnAjaxCallback">
            <summary>
            Called when the control is being rerendered during ajax callback.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxContainerControl.RenderControlChangesOnAjaxCallback">
            <summary>
            Called during ajax callback to render control state changes.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxContainerControl.RenderCallbackOnNotForceAnUpdate">
            <summary>
            Called when container control is being rerendered, but ForceAnUpdate was not called.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxContainerControl.RenderCallbackOnForceAnUpdate">
            <summary>
            Called when container control is being rerendered and ForceAnUpdate was called.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxContainerControl.GetMarkup">
            <summary>
            Called when the control for some reason (was invisible previously e.g.) should render for the "first" time
            but it is still an Ajax Callback
            </summary>
            <returns>Value to return back to client for initializing control</returns>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxContainerControl.IsTrackingControlAdditions">
            <summary>
            Returns true if the Container Control is tracking control additions. See TrackControlAddition() for 
            more information. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxContainerControl.ShouldRenderAjaxControl">
            <summary>
            Used by derived controls to know if the control should be rendered or not
            based on the facts if the ShouldRender was set or control was previously rendered
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.LabelAjaxControl.#ctor(Gaia.WebWidgets.IAjaxContainerControl)">
            <summary>
            Constructor
            </summary>
            <param name="control">Control which owns this instance.</param>
        </member>
        <member name="P:Gaia.WebWidgets.Label.LabelAjaxControl.ShouldRenderAjaxControl">
            <summary>
            Used by derived controls to know if the control should be rendered or not
            based on the facts if the ShouldRender was set or control was previously rendered
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Label.PropertyStateManagerLabel">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.Label"/>.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.PropertyStateManagerWebControl">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
            <seealso cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/>
        </member>
        <member name="T:Gaia.WebWidgets.PropertyStateManagerControl">
            <summary>
            Tracks state changes for the associated <see cref="T:Gaia.WebWidgets.IAjaxControl"/> and
            renders found state changes to the client.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.#ctor(System.Web.UI.Control)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.#ctor(System.Web.UI.Control,System.String)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.#ctor(System.Web.UI.Control,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.TrackChanges">
            <summary>
            Takes snapshot of the associated <see cref="T:System.Web.UI.Control"/> state and raises <see cref="M:Gaia.WebWidgets.PropertyStateManagerControl.OnSnapshotTakenEvent(System.Object,System.EventArgs)"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.RenderChanges(System.IO.TextWriter)">
            <summary>
            Detects state changes of the associated <see cref="T:System.Web.UI.Control"/> and serialized them back to the client.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> to write the changes into.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.ClearDirty(System.String)">
            <summary>
            Marks the property with the specified <paramref name="propertyName"/> as clean.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <remarks>
            The property must have <see cref="T:Gaia.WebWidgets.AjaxSerializableAttribute"/> applied to it.
            Marking the property as clean prevents detection of change in its state.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.AssignState(Gaia.WebWidgets.PropertyStateManagerControl,System.Boolean)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> to copy state from.</param>
            <param name="keepVisible">True if the state of the <see cref="P:Gaia.WebWidgets.PropertyStateManagerControl.WasVisible"/> property should be kept during assignment.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.OnSnapshotTakenEvent(System.Object,System.EventArgs)">
            <summary>
            Raised after the state snapshot for the associated <see cref="T:System.Web.UI.Control"/> is taken.
            </summary>
            <returns>
            True if event was consumed and the bubbling is cancelled. Otherwise, false.
            Default value is false.
            </returns>
            <remarks>
            Bubbles up until stopped by return value of true.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.Control"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.Control"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.RenderChange``1(``0,``0,System.Action{``0})">
            <summary>
            Executes specified <paramref name="renderAction"/> if the specified <paramref name="initial"/> and <paramref name="current"/> values are not equal.
            </summary>
            <typeparam name="T">Type of the parameters.</typeparam>
            <param name="initial">Initial value.</param>
            <param name="current">Curretn value.</param>
            <param name="renderAction">Action to execute if the specified <paramref name="initial"/> and <paramref name="current"/> values are not equal.</param>
            <remarks>Equality is determined using <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>.</remarks>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.RenderChange``1(``0,``0,System.String,System.Boolean)">
            <summary>
            Renders client-side Gaia Control method call using specified <paramref name="commandName"/>
            if the specified <paramref name="initial"/> and <paramref name="current"/> values are not equal.
            </summary>
            <typeparam name="T">Type of the parameters.</typeparam>
            <param name="initial">Initial value.</param>
            <param name="current">Current value.</param>
            <param name="commandName">Client-side Gaia Control method name.</param>
            <param name="optimizeCommandArgument">True if the client-side method supports argument optimizations. Otherwise, false.</param>
            <remarks>
            Equality is determined using <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>.
            Client-side Gaia Control methods supporting argument optimizations should have the form of "function foo(value, index)".
            To get the actual value to use they should call Gaia.Control.decodeArgument and specify initial and current values, as well as the index provided.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.FormatValue(System.Object)">
            <summary>
            Formats the specified <paramref name="value"/> as <see cref="T:System.String"/> to send to the client.
            </summary>
            <param name="value">Value to format.</param>
            <returns><see cref="T:System.String"/> representation of the specified <paramref name="value"/>.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.RenderVisibleChanged(System.Boolean)">
            <summary>
            Renders code for the visibility change on the client-side.
            </summary>
            <param name="visible">The current value of the <see cref="P:System.Web.UI.Control.Visible"/> property.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.RenderAjaxSerializablePropertyChanged(Gaia.WebWidgets.AjaxSerializableAttributeBase,System.Object,System.Object)">
            <summary>
            Renders code for the property value change having specified <paramref name="attr"/>.
            </summary>
            <param name="attr">The attribute of the property.</param>
            <param name="initialValue">The initial value of the property.</param>
            <param name="currentValue">The current value of the property.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.RenderFocus">
            <summary>
            Renders code for setting focus to the associated <see cref="T:System.Web.UI.Control"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.FormatString(System.String)">
            <summary>
            Formats specified <paramref name="value"/> for using in client-side code as valid string.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.RaiseSnapshotTaken">
            <summary>
            Raises <see cref="M:Gaia.WebWidgets.PropertyStateManagerControl.OnSnapshotTakenEvent(System.Object,System.EventArgs)"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.FormatColor(System.Drawing.Color)">
            <summary>
            Formats specified <paramref name="color"/> as <see cref="T:System.String"/> using RRGGBBAA format.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerControl.FormatValue``1(``0,``0,System.Boolean)">
            <summary>
            Formats the specified <paramref name="current"/> value as <see cref="T:System.String"/> for client-side evaluation.
            </summary>
            <typeparam name="T">Type of the values.</typeparam>
            <param name="initial">Initial value.</param>
            <param name="current">Current value.</param>
            <param name="optimizeCommandArgument">True to optimize the current value.</param>
            <remarks>
            If optimization is requested, the difference from the <paramref name="initial"/> value and the difference index is returned.
            </remarks>
            <seealso cref="M:Gaia.WebWidgets.PropertyStateManagerControl.RenderChange``1(``0,``0,System.String,System.Boolean)"/>.
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerControl.ShouldRender">
            <summary>
            Returns true if changes should be serialized to the client.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerControl.WasVisible">
            <summary>
            True if the control was visible during previous request.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerControl.Builder">
            <summary>
            Buffer to render changes into.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerControl.AjaxControl">
            <summary>
            Returns the associated <see cref="P:Gaia.WebWidgets.PropertyStateManagerControl.AjaxControl"/>.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.PropertyStateManagerControl.ControlPropertyState">
            <summary>
            Keeps state for a property which has <see cref="T:Gaia.WebWidgets.AjaxSerializableAttribute"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerWebControl.#ctor(System.Web.UI.WebControls.WebControl)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerWebControl.#ctor(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerWebControl.#ctor(System.Web.UI.WebControls.WebControl,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerWebControl.ClearDirty(Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty[])">
            <summary>
            Clears dirtyness of the specified properties
            </summary>
            <param name="properties">Properties to clear dirtyness</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerWebControl.ClearDirtyStyle(System.Web.UI.HtmlTextWriterStyle[])">
            <summary>
            Clears dirtyness for the specified Style keys
            </summary>
            <param name="keys">Style keys to clear dirtyness</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerWebControl.ClearDirtyStyle(System.String[])">
            <summary>
            Clears dirtyness for the specified Style keys as strings
            </summary>
            <param name="keys">Style keys to clear dirtyness</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerWebControl.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerWebControl.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerWebControl.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerWebControl.RenderAttributeChanged(System.String,System.String)">
            <summary>
            Called when an attribute in <see cref="P:System.Web.UI.WebControls.WebControl.Attributes"/> collection was modified.
            </summary>
            <param name="name">Name of the modified attribute.</param>
            <param name="value">Value of the modified attribute.</param>
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerWebControl.ControlStyle">
            <summary>
            Gets or sets <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle"/> property in the state snapshot.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerWebControl.ForeColor">
            <summary>
            Gets or sets <see cref="P:System.Web.UI.WebControls.WebControl.ForeColor"/> property in the state snapshot.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty">
            <summary>
            Enumeration of supported properties.
            </summary>
            <seealso cref="M:Gaia.WebWidgets.PropertyStateManagerWebControl.ClearDirty(Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty[])"/>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.AccessKey">
            <summary>
            AccessKey
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.BackColor">
            <summary>
            BackColor
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.BorderColor">
            <summary>
            BorderColor
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.BorderStyle">
            <summary>
            BorderStyle
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.BorderWidth">
            <summary>
            BorderWidth
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.CssClass">
            <summary>
            CssClass
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.Enabled">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.ForeColor">
            <summary>
            ForeColor
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.TabIndex">
            <summary>
            TabIndex
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.ToolTip">
            <summary>
            ToolTip
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.Styles">
            <summary>
            Styles
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.FontBold">
            <summary>
            FontBold
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.FontItalic">
            <summary>
            FontItalic
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.FontSize">
            <summary>
            FontSize
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.FontOverline">
            <summary>
            FontOverline
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.FontStrikeout">
            <summary>
            FontStrikeout
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.FontUnderline">
            <summary>
            FontUnderline
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.PropertyStateManagerWebControl.WebControlProperty.FontNames">
            <summary>
            FontNames
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.PropertyStateManagerLabel.#ctor(Gaia.WebWidgets.Label)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.Label.PropertyStateManagerLabel"/> for specified <paramref name="label"/>.
            </summary>
            <param name="label">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="label"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.Label.PropertyStateManagerLabel.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.Label.PropertyStateManagerLabel.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.PropertyStateManagerLabel.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Label.PropertyStateManagerLabel.OnSnapshotTakenEvent(System.Object,System.EventArgs)">
            <summary>
            Raised after the state snapshot for the associated <see cref="T:System.Web.UI.Control"/> is taken.
            </summary>
            <returns>
            True if event was consumed and the bubbling is cancelled. Otherwise, false.
            Default value is false.
            </returns>
            <remarks>
            Bubbles up until stopped by return value of true.
            </remarks>
        </member>
        <member name="P:Gaia.WebWidgets.Label.PropertyStateManagerLabel.RequiresRerendering">
            <summary>
            Returns true if the associated <see cref="T:Gaia.WebWidgets.TableCell"/> requires rerendering.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Image">
            <summary>
            Gaia Ajax Image displays an image on a Web page. It inherits from the 
            <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.image.aspx">
            ASP.NET Image</a>, and has built-in Ajax behaviour.
            </summary>
            <example>
            <code title="ASPX Markup for Image" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\Image\Overview\Default.aspx" />
            </code> 
            <code title="Codebehind for Image" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\Image\Overview\Default.aspx.cs" region="Code" />
            </code> 
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.Image.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.Image.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Image.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Image.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.Image.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.Image.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Image.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Image.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.Image.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.Image.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Image.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="E:Gaia.WebWidgets.Image.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.Image.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.Image.Click">
            <summary>
            Event is fired when the control is clicked. Use the eventArgs to retrieve the mouse coordinates for the 
            click event
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.Image.DoubleClick">
            <summary>
            Event is fired when the control is double clicked. Use the eventArgs to retrieve the mouse coordinates for the 
            click event
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Image.ImageUrl">
            <summary>
            Gets or sets the image URL for the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Image.AlternateText">
            <summary>
            Sets the ALT taxt for the image
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Image.DescriptionUrl">
            <summary>Gets or sets the location to a detailed description for the image.</summary>
            <value>
            The URL for the file that contains a detailed description for the image.
            The default is an empty string ("").
            </value>   
        </member>
        <member name="P:Gaia.WebWidgets.Image.ImageAlign">
            <summary>
             Gets or sets the alignment of the System.Web.UI.WebControls.Image control
             in relation to other elements on the Web page.
            </summary>
            <value>One of the System.Web.UI.WebControls.ImageAlign values. The default is NotSet.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The specified value is not one of the System.Web.UI.WebControls.ImageAlign values.
            </exception>
        </member>
        <member name="P:Gaia.WebWidgets.Image.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Image.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.LinkButton">
            <summary>
            The Gaia Ajax LinkButton displays a hyperlink-style button control on a Web page. It inherits from the 
            <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.linkbutton.aspx"> ASP.NET LinkButton</a>, 
            and has built-in Ajax behaviour.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.IAjaxButtonControl">
            <summary>
            Defines required members for Ajax Button controls.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxButtonControl.GetPostBackOptions">
            <summary>
            Returns a <see cref="T:System.Web.UI.PostBackOptions"/> object that represents the control's postback behavior.
            </summary>
            <returns>A <see cref="T:System.Web.UI.PostBackOptions"/> that represents the control's postback behavior.</returns>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxButtonControl.OnClientClick">
            <summary>
            Return the client-side script that executes when a Button control's Click event is raised.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxButtonControl.EnableBubbling">
            <summary>
            Returns true if the click even should bubble on the client.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object and 
            stores tracing information about the control if tracing is enabled.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the control content.</param>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.GetPostBackOptions">
            <summary>
            Creates a <see cref="T:System.Web.UI.PostBackOptions"/> object that represents the <see cref="T:System.Web.UI.WebControls.LinkButton"/> control's postback behavior.
            </summary>
            <returns>
            A <see cref="T:System.Web.UI.PostBackOptions"/> that represents the <see cref="T:System.Web.UI.WebControls.LinkButton"/> control's postback behavior.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.Gaia#WebWidgets#IAjaxButtonControl#GetPostBackOptions">
            <summary>
            Returns a <see cref="T:System.Web.UI.PostBackOptions"/> object that represents the control's postback behavior.
            </summary>
            <returns>A <see cref="T:System.Web.UI.PostBackOptions"/> that represents the control's postback behavior.</returns>
        </member>
        <member name="P:Gaia.WebWidgets.LinkButton.EnableBubbling">
            <summary>
            Gets or sets if the click even should bubble on the client.
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.LinkButton.Blur">
            <summary>
            Raised when the control looses focus.
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.LinkButton.Focused">
            <summary>
            Raised when the control gets focus.
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.LinkButton.MouseOver">
            <summary>
            Raised when the mouse is moved over the control.
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.LinkButton.MouseOut">
            <summary>
            Raised when the mouse cursor is moved outside the control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.LinkButton.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.LinkButton.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.LinkButton.LinkButtonWriter">
            <summary>
            Specialized <see cref="T:System.Web.UI.HtmlTextWriter"/> for <see cref="T:Gaia.WebWidgets.LinkButton"/>
            which removes postback references from the href attribute.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.LinkButtonWriter.#ctor(System.IO.TextWriter,Gaia.WebWidgets.LinkButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.LinkButton.LinkButtonWriter"/> class that uses a default tab string.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> instance that renders the markup content.</param>
            <param name="owner">Owner button control.</param>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.LinkButtonWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
            <summary>
            Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter"/> object 
            creates with a subsequent call to the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)"/> method.
            </summary>
            <param name="key">
            An <see cref="T:System.Web.UI.HtmlTextWriterAttribute"/> that represents the markup attribute to add to the output stream. 
            </param>
            <param name="value">A string containing the value to assign to the attribute.</param>
        </member>
        <member name="T:Gaia.WebWidgets.LinkButton.PropertyStateManagerLinkButton">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.LinkButton"/> control.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.PropertyStateManagerButtonControl`1">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for Button controls.
            </summary>
            <typeparam name="T">Concrete button type.</typeparam>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerButtonControl`1.#ctor(`0)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerButtonControl`1"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerButtonControl`1.#ctor(`0,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerButtonControl`1"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerButtonControl`1.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerButtonControl`1"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerButtonControl`1"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerButtonControl`1.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerButtonControl`1.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerButtonControl`1.RenderAttributeChanged(System.String,System.String)">
            <summary>
            Called when an attribute in <see cref="P:System.Web.UI.WebControls.WebControl.Attributes"/> collection was modified.
            </summary>
            <param name="name">Name of the modified attribute.</param>
            <param name="value">Value of the modified attribute.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerButtonControl`1.GetOnClickHandler">
            <summary>
            Returns DOM 0 click event handler for the associated <see cref="T:Gaia.WebWidgets.IAjaxButtonControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerButtonControl`1.EnsureSemicolonSuffix(System.String)">
            <summary>
            Ensures specified <paramref name="str"/> ends with semicolon.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerButtonControl`1.GetCallbackName(System.Web.UI.PostBackOptions)">
            <summary>
            Returns the callbackName based on the specified <paramref name="options"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.PropertyStateManagerLinkButton.#ctor(Gaia.WebWidgets.LinkButton)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.LinkButton.PropertyStateManagerLinkButton"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.LinkButton.PropertyStateManagerLinkButton.#ctor(Gaia.WebWidgets.LinkButton,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.LinkButton.PropertyStateManagerLinkButton"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.#ctor(System.Web.UI.WebControls.IPostBackContainer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton"/>.
            </summary>
            <param name="container">Button container.</param>
        </member>
        <member name="M:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.GetPostBackOptions">
            <summary>
            Creates a <see cref="T:System.Web.UI.PostBackOptions"/> object that represents the <see cref="T:System.Web.UI.WebControls.LinkButton"/> control's postback behavior.
            </summary>
            <returns>
            A <see cref="T:System.Web.UI.PostBackOptions"/> that represents the <see cref="T:System.Web.UI.WebControls.LinkButton"/> control's postback behavior.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object and 
            stores tracing information about the control if tracing is enabled.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the control content.</param>
        </member>
        <member name="M:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.Gaia#WebWidgets#IAjaxControl#CreateControlStateManager">
            <summary>
            Called by the Gaia framework when the StateManager of the Control needs to be initialized
            </summary>
            <returns>StateManager for the Control</returns>
        </member>
        <member name="P:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.ForeColorSet">
            <summary>
            Returns true if the <see cref="P:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.ForeColor"/> property was set.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.Depth">
            <summary>
            Returns depth of the <see cref="T:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton"/> in the container.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when the <see cref="T:System.Web.UI.WebControls.LinkButton"/> control is clicked.
            </summary>
            <returns>
            True if validation is performed when the <see cref="T:System.Web.UI.WebControls.LinkButton"/> control is clicked; otherwise, false. The default value is true.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.ForeColor">
            <summary>
            Gets or sets the foreground color (typically the color of the text) of the Web server control.
            </summary>
            <returns>
            A <see cref="T:System.Drawing.Color"/> that represents the foreground color of the control. The default is <see cref="F:System.Drawing.Color.Empty"/>.
            </returns>
        </member>
        <member name="T:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.PropertyStateManagerDataControlLinkButton">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.PropertyStateManagerDataControlLinkButton.#ctor(Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerButtonControl`1"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.PropertyStateManagerDataControlLinkButton.#ctor(Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerButtonControl`1"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.Widgets.DataControls.DataControlLinkButton.PropertyStateManagerDataControlLinkButton.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute">
            <summary>
            These are all the attributes in the XHTML 1.1 standard, not that of course not all of them
            can be added to all of the elements. The Gaia XHTML Serializer will throw an exception
            if you try to add the wrong attribute to an element which doesn't support it though.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Href">
            <summary>
            URI. This attribute specifies the location of a Web resource.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.CssClass">
            <summary>
            This maps to the class attribute
            This attribute assigns a class name or set of class names to an element. 
            Any number of elements may be assigned the same class name or set of class names. 
            Multiple class names must be separated by white space characters.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Id">
            <summary>
            This attribute assigns an ID to an element. This ID must be unique in a document.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Title">
            <summary>
            This attribute offers advisory information. Some Web browsers will display this 
            information as tooltips.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.XmlLang">
            <summary>
            This maps to the xml:lang attribute.
            This attribute specifies the base language of an element's attribute values and text content.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Dir">
            <summary>
            This attribute specifies the base direction of text.
            Must contain either ltr or rtl.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnClick">
            <summary>
            A client-side script event that occurs when a pointing device button is clicked over an element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnDblClick">
            <summary>
            A client-side script event that occurs when a pointing device button is double-clicked 
            over an element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnMouseDown">
            <summary>
            A client-side script event that occurs when a pointing device button is pressed down 
            over an element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnMouseUp">
            <summary>
            A client-side script event that occurs when a pointing device button is released 
            over an element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnMouseOver">
            <summary>
            A client-side script event that occurs when a pointing device is moved onto an element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnMouseMove">
            <summary>
            A client-side script event that occurs when a pointing device is moved within an element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnMouseOut">
            <summary>
            A client-side script event that occurs when a pointing device is moved away from an element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnKeyPress">
            <summary>
            A client-side script event that occurs when a key is pressed down over an element then released.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnKeyDown">
            <summary>
            A client-side script event that occurs when a key is pressed down over an element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnKeyUp">
            <summary>
            A client-side script event that occurs when a key is released over an element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnLoad">
            <summary>
            A client-side script event that occurs when the document has been loaded.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnUnload">
            <summary>
            A client-side script event that occurs when the document has been removed.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnReset">
            <summary>
            A client-side script event that occurs when a form is reset (all form 
            controls are set to their initial values).
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnSubmit">
            <summary>
            A client-side script event that occurs when a form is submitted 
            (form data is sent to server-side scripts for processing).
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Style">
            <summary>
            This attribute specifies formatting style information for the current element. 
            The content of this attribute is called inline CSS. The style attribute is 
            deprecated (considered outdated), because it fuses together content and 
            formatting.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Media">
            <summary>
            This attribute specifies the intended destination medium for style information. 
            It may be a single media descriptor or a comma-separated list. 
            The default value for this attribute is screen.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Type">
            <summary>
            For the link tag;
            Style sheet language. For example: text/css.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.HrefLang">
            <summary>
            Specifies the primary language of the resource designated 
            by href and may only be used when href is specified.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Rel">
            <summary>
            Describes the forward relationship from the current document to 
            the resource specified by the href attribute. The value of this 
            attribute is a space-separated list of link types.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Rev">
            <summary>
            Describes the reverse relationship back to the current document, 
            to the resource specified by the href attribute. The value of this 
            attribute is a space-separated list of link types.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Name">
            <summary>
            Form control name.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Content">
            <summary>
            Specifies a property's value in the META element
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.HttpEquiv">
            <summary>
            This attribute may be used in place of the name attribute of the META element. HTTP 
            servers use this attribute to gather information for HTTP response message headers.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Scheme">
            <summary>
            Names a scheme to be used to interpret the property's value in the META element
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Src">
            <summary>
            This required attribute specifies the location of the image source.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Defer">
            <summary>
            When set on SCRIPT element, this boolean attribute provides a hint to 
            the user agent that the script is not going to generate any document 
            content (e.g., no "document.write" in javascript) and thus, the user 
            agent can continue parsing and rendering.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.XmlSpace">
            <summary>
            The special attribute xml:space may be attached to an element to 
            signal an intention that in that element, white space should be 
            preserved by applications. In valid documents, this attribute, 
            like any other, MUST be declared if it is used. When declared, it 
            MUST be given as an enumerated type whose values are one or both 
            of "default" and "preserve".
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Cite">
            <summary>
            URI. This attribute is intended to supply information about 
            the source from which the quotation was borrowed.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.DateTime">
            <summary>
            This is used to indicate the date and time when the content change was made.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Action">
            <summary>
            Specifies the location of the server-side script used to process data collected in the form.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Method">
            <summary>
            Specifies the type of HTTP method used to send data to the server.
            Possible values are get and post
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Accept">
            <summary>
            This attribute specifies a comma-separated list of content types that a server 
            processing the form will handle correctly.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.AcceptCharset">
            <summary>
            This attribute specifies the list of character encodings for input data that 
            are accepted by the server processing the form.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.EncType">
            <summary>
            This attribute specifies the content type used to send form data to the server 
            when the value of method is post. The default value for this attribute is 
            application/x-www-form-urlencoded. If a form contains a file upload control 
            (input element with type value of file), then this attribute value should be 
            multipart/form-data.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Border">
            <summary>
            This attributes specifies the width (in pixels) of the border around table cells.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.CellPadding">
            <summary>
            This attribute specifies the amount of space between the border of the cell 
            and its contents.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.CellSpacing">
            <summary>
            This attribute specifies the amount of space between the border of the cell 
            and the table frame or other cells.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Summary">
            <summary>
            This attribute provides a summary of the table's purpose and structure, 
            for devices rendering to non-visual media such as speech and Braille.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Width">
            <summary>
            This attribute specifies the desired width.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Frame">
            <summary>
            This attribute specifies which sides of the frame surrounding a table will be visible.
            Possible values:<br />
            void, above, below, hsides, vsides, lhs, rhs, box, border
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Rules">
            <summary>
            This attribute specifies which rules (lines) will appear between cells within a table.
            Possible values:<br />
            none, groups, rows, cols, all
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.AccessKey">
            <summary>
            Accessibility key character. Normally in combination with ALT the element will receive focus.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Charset">
            <summary>
            Specifies the character encoding of the resource designated by the link (A element)
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Coords">
            <summary>
            Specifies the position and shape on the screen. The number and order of values depends 
            on the shape being defined.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnBlur">
            <summary>
            Event occuring when element looses focus
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnFocus">
            <summary>
            Element occuring when wlement gains focus
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Shape">
            <summary>
            Specifies the shape of a region
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.TabIndex">
            <summary>
            Numeric value describing the order controls will receive focus if TAB is clicked
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Value">
            <summary>
            Value of form element input field.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Disabled">
            <summary>
            Disables a form control. Possible value is only disabled.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Alt">
            <summary>
            Alternative text for element
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Height">
            <summary>
            Height of element
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.IsMap">
            <summary>
            Boolean attribute, must be set for server-side image maps for IMG and INPUT (of type image) elements
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.LongDesc">
            <summary>
            For FRAME and IFRAME elements, specifies a link to a long description of the frame. This 
            description should supplement the short description provided using the title attribute. For IMG 
            element, Specifies a link to a long description of the image. This description should supplement 
            the short description provided using the alt attribute. When the image has an associated image map, 
            this attribute should provide information about the image map's contents. This is particularly important 
            for server-side image maps.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.UseMap">
            <summary>
            Associates an image map with an element. The image map is defined by a MAP element. The value of usemap 
            must match the value of the name attribute of the associated MAP element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Checked">
            <summary>
            When the type attribute of an input field has the value radio or checkbox, 
            this attribute specifies that the radio/checkbox is selected.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.MaxLength">
            <summary>
            Max length of value of an input field
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Size">
            <summary>
            This attribute tells the Web browser the initial width of the control. 
            The width is given in pixels except when the type attribute has the value 
            text or password. In such cases, its value is the number of characters.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnChange">
            <summary>
            Event occuring when input form element changes its value
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.OnSelect">
            <summary>
            Event occuring when input form element selects a different value
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.ReadOnly">
            <summary>
            If present, this attribute prohibits changes to the value in the control. 
            Possible value is readonly.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.For">
            <summary>
            This attribute explicitly associates the label with a form control.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.FrameBorder">
            <summary>
            Border of frame of Iframe
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.MarginHeight">
            <summary>
            Height of margin between iframe and surroundings
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.MarginWidth">
            <summary>
            Width of margin between iframe and surroundings
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Scrolling">
            <summary>
            Whether iframe should have scrolling enabled or not
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.ClassId">
            <summary>
            May be used to specify the location of an object's implementation via a URI. It may be used together 
            with, or as an alternative to the data attribute, depending on the type of object involved.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.CodeBase">
            <summary>
            For OBJECT element, specifies the base path used to resolve relative URIs specified by the 
            classid, data, and archive attributes. When absent, its default value is the base URI of 
            the current document. For the APPLET element, specifies the base URI for the applet. If this 
            attribute is not specified, then it defaults the same base URI as for the current document.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Archive">
            <summary>
            For APPLET element, specifies a comma-separated list of URIs for archives containing classes 
            and other resources that will be "preloaded". For OBJECT element, specifies a space-separated 
            list of URIs for archives containing resources relevant to the object, which may include the 
            resources specified by the classid and data attributes.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.CodeType">
            <summary>
            Specifies the content type of data expected when downloading the object specified by classid.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Data">
            <summary>
            Specifies the location of the object's data, for instance image data for objects defining 
            images, or more generally, a serialized form of an object which can be used to recreate it.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Declare">
            <summary>
            This boolean attribute (if present) makes the current OBJECT definition a declaration 
            only. The object must be instantiated by a subsequent OBJECT definition referring to this declaration.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.StandBy">
            <summary>
            Specifies a message that a user agent may render while loading the object's implementation and data.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Multiple">
            <summary>
            If set, this boolean attribute allows multiple selections. If not set, the SELECT element only 
            permits single selections.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Cols">
            <summary>
            For TEXTAREA element, specifies the visible width in average character widths. For FRAMESET 
            element, specifies the layout of vertical frames. It is a comma-separated list of 
            pixels, percentages, and relative lengths. The default value is 100%, meaning one column.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Rows">
            <summary>
            For TEXTAREA element, specifies the number of visible text lines. For FRAMESET element
            specifies the layout of horizontal frames. It is a comma-separated list of pixels, 
            percentages, and relative lengths. The default value is 100%, meaning one row.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Align">
            <summary>
            For the CAPTION element, specifies the position of the caption with respect to the table. For
            IMG, OBJECT and APPLET elements, specifies the position of the element with respect to its context.
            For LEGEND and FIELDSET elements, specifies the position of the legend with respect to the fieldset.
            For the TABLE element, specifies the position of the table with respect to the document. For the 
            HR element, specifies the horizontal alignment of the rule with respect to the surrounding context.
            For block level elements, specifies the horizontal alignment of its element with respect to the 
            surrounding context. For different table elements, specifies the alignment of data and the 
            justification of text in a cell.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Span">
            <summary>
            For the COL element Specifies the number of columns "spanned" by the COL element. For the 
            COLGROUP element, specifies the number of columns in a column group.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Valign">
            <summary>
            Specifies the vertical position of data within a cell.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Char">
            <summary>
            Specifies a single character within a text fragment to act as an axis for alignment.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.CharOff">
            <summary>
            For alignment, specifies the offset to the first occurrence of the alignment character on each line.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Headers">
            <summary>
            Specifies the list of header cells that provide header information for the current data cell.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.ColSpan">
            <summary>
            Specifies the number of columns spanned by the current cell.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.RowSpan">
            <summary>
            Specifies the number of rows spanned by the current cell.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Axis">
            <summary>
            Used to place a cell into conceptual categories that can be considered to form axes in an n-dimensional space.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Abbr">
            <summary>
            Used to provide an abbreviated form of the cell's content
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.Scope">
            <summary>
            Specifies the set of data cells for which the current header cell provides header information.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.ValueType">
            <summary>
            Specifies the type of the value attribute of PARAM element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute.RbSpan">
            <summary>
            In complex ruby markup, the rbspan attribute allows an rt element to span multiple rb elements.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RangeValidator">
            <summary>
            Validates whether the value of an associated input control matches the pattern specified by a regular expression.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.IAjaxValidator">
            <summary>
            Interface implemented by ajaxified validators to access protected members.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxValidator.DetermineRenderUplevel">
            <summary>
            Determines whether the validation control can perform client-side validation.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxValidator.RegisterValidatorDeclaration">
            <summary>
            Registers an ECMAScript array declaration using the array name Page_Validators.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxValidator.GetControlRenderId(System.String)">
            <summary>
            Gets the client ID of the control having specified id.
            </summary>
            <param name="controlToValidate">The name of the control to get the client ID from. </param>
            <returns>The client ID of the specified control.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.IAjaxValidator.RenderDesignTime(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the validator to the specified HTML <paramref name="writer"/> during design time.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxValidator.PropertiesValid">
            <summary>
            Gets a value that indicates whether the control specified by the <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate"/> property is a valid control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxValidator.IsEnabled">
            <summary>
            Gets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxValidator.RenderUplevel">
            <summary>
            Gets a value denoting if the client browser supports "upward" rendering.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.LoadViewState(System.Object)">
            <summary>Loads the previously saved state for the control.</summary>
            <param name="savedState">An object that contains the saved view state values for the control. </param>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.SaveViewState">
            <summary>
            Saves any state that was modified after the <see cref="M:System.Web.UI.Control.TrackViewState"/> method was invoked.
            </summary>
            <returns>
            An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object and stores tracing information about the control if tracing is enabled.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the control content. </param>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.Gaia#WebWidgets#IAjaxControl#RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Calls base class RenderControl method
            </summary>
            <param name="create">XhtmlTagFactory to use to create XHTML</param>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.Gaia#WebWidgets#IAjaxValidator#DetermineRenderUplevel">
            <summary>
            Determines whether the validation control can perform client-side validation.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.Gaia#WebWidgets#IAjaxValidator#RegisterValidatorDeclaration">
            <summary>
            Registers an ECMAScript array declaration using the array name Page_Validators.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.Gaia#WebWidgets#IAjaxValidator#GetControlRenderId(System.String)">
            <summary>
            Gets the client ID of the control having specified id.
            </summary>
            <param name="controlToValidate">The name of the control to get the client ID from. </param>
            <returns>The client ID of the specified control.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.Gaia#WebWidgets#IAjaxValidator#RenderDesignTime(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the validator to the specified HTML <paramref name="writer"/> during design time.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RangeValidator.Gaia#WebWidgets#IAjaxValidator#PropertiesValid">
            <summary>
            Gets a value that indicates whether the control specified by the <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate"/> property is a valid control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RangeValidator.Gaia#WebWidgets#IAjaxValidator#IsEnabled">
            <summary>
            Gets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RangeValidator.Gaia#WebWidgets#IAjaxValidator#RenderUplevel">
            <summary>
            Gets a value denoting if the client browser supports "upward" rendering.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RangeValidator.BaseValidator">
            <summary>
            Returns implementation.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RangeValidator.PropertyStateManagerRangeValidator">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for <see cref="T:Gaia.WebWidgets.RangeValidator"/> control.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.PropertyStateManagerBaseCompareValidator">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for compare validator controls.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.PropertyStateManagerBaseValidator">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for validator controls.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.IMayRequireRerendering">
            <summary>
            Specialized interface for such <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> 
            which may require rerendering of associated <see cref="T:System.Web.UI.Control"/> instead of serializing changes.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IMayRequireRerendering.RequiresRerendering">
            <summary>
            Returns true if associated <see cref="T:System.Web.UI.Control"/> needs to be rerendered.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerBaseValidator.#ctor(Gaia.WebWidgets.BaseValidator)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerBaseValidator"/> for specified <paramref name="baseValidator"/>.
            </summary>
            <param name="baseValidator">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="baseValidator"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerBaseValidator.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerBaseValidator.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerBaseValidator.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerBaseValidator.ValueHasChanged``1(``0,``0)">
            <summary>
            Returns true if the specified values are not equal.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerBaseValidator.Gaia#WebWidgets#IMayRequireRerendering#RequiresRerendering">
            <summary>
            Returns true if associated <see cref="T:System.Web.UI.Control"/> needs to be rerendered.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerBaseValidator.RequiresRerendering">
            <summary>
            Returns true if the associated <see cref="T:System.Web.UI.IValidator"/> needs to be rerendered.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerBaseCompareValidator.#ctor(Gaia.WebWidgets.BaseValidator)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerBaseCompareValidator"/> for specified <paramref name="baseValidator"/>.
            </summary>
            <param name="baseValidator">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="baseValidator"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerBaseCompareValidator.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerBaseCompareValidator.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerBaseCompareValidator.RequiresRerendering">
            <summary>
            Returns true if the associated validator needs to be rerendered.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.PropertyStateManagerRangeValidator.#ctor(Gaia.WebWidgets.RangeValidator)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerBaseValidator"/> for specified <paramref name="validator"/>.
            </summary>
            <param name="validator">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="validator"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.PropertyStateManagerRangeValidator.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.RangeValidator.PropertyStateManagerRangeValidator.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RangeValidator.PropertyStateManagerRangeValidator.RequiresRerendering">
            <summary>
            Returns true if the associated validator needs to be rerendered.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Helpers.MovedContainerHtmlTextWriter">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.Helpers.CallbackWriter"/> used when the control is moved during callback.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Helpers.CallbackWriter">
            <summary>
            Specialized <see cref="T:System.Web.UI.HtmlTextWriter"/> used during callback rendering
            to detect if a control does not render anything itself and jsut forwards
            rendering to its children.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.#ctor(System.IO.TextWriter,System.IO.Stream,Gaia.WebWidgets.IAjaxControl)">
            <summary>Initializes a new instance of the <see cref="T:Gaia.WebWidgets.Helpers.CallbackWriter"/> class that uses a default tab string.</summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> instance that renders the markup content.</param>
            <param name="writerStream">The <see cref="T:System.IO.Stream"/> instance used in <see cref="T:System.IO.TextWriter"/></param>
            <param name="ajaxControl">The <see cref="T:Gaia.WebWidgets.IAjaxControl"/> which created this writer</param>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.HasContent">
            <summary>
            Returns true if there was something written 
            to this writer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.Reset">
            <summary>
            Resets writer
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.RegisterUnresolved(Gaia.WebWidgets.IAjaxControl)">
            <summary>
            Registers <paramref name="ajaxControl"/> as unresolved,
            meaning DRIMR logic could not find any way to render this control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.Add(Gaia.WebWidgets.IAjaxControl)">
            <summary>
            Registers <paramref name="ajaxControl"/> with this writer
            and returns its position.
            </summary>
            <returns>Position of <paramref name="ajaxControl"/>.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.HasEmptyContent">
            <summary>
            Checks if the content written to this writer
            is just whitespace which can be safely ignored.
            </summary>
            <returns>True if only whitespace was written to this writer.</returns>
        </member>
        <member name="P:Gaia.WebWidgets.Helpers.CallbackWriter.AjaxControl">
            <summary>
            Owner ajax control
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection">
            <summary>
            Read-only collection of sibling controls.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.#ctor(System.Web.UI.Control,System.Collections.Generic.IList{System.Web.UI.Control})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.UI.ControlCollection"/> class for the specified parent server control.
            </summary>
            <param name="owner">The ASP.NET server control that the control collection is created for. </param>
            <param name="collection">Collection of controls to wrap around.</param>
            <exception cref="T:System.ArgumentNullException">Occurs if the <paramref name="owner"/> or <paramref name="collection"/> parameters are null. </exception>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.Add(System.Web.UI.Control)">
            <summary>
            Adds the specified <see cref="T:System.Web.UI.Control"/> object to the collection.
            </summary>
            <param name="child">The <see cref="T:System.Web.UI.Control"/> to add to the collection. </param>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="child"/> parameter does not specify a control. </exception>
            <exception cref="T:System.Web.HttpException">Thrown if the <see cref="T:System.Web.UI.ControlCollection"/> is read-only. </exception>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.AddAt(System.Int32,System.Web.UI.Control)">
            <summary>
            Adds the specified <see cref="T:System.Web.UI.Control"/> object to the collection at the specified index location.
            </summary>
            <param name="index">The location in the array at which to add the child control.</param>
            <param name="child">The <see cref="T:System.Web.UI.Control"/> to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="child"/> parameter does not specify a control.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index"/> parameter is less than zero or greater than the <see cref="P:System.Web.UI.ControlCollection.Count"/> property.
            </exception><exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.UI.ControlCollection"/> is read-only.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.Clear">
            <summary>
            Removes all controls from the current server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.Contains(System.Web.UI.Control)">
            <summary>
            Determines whether the specified server control is in the parent server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <returns>
            true if the specified server control exists in the collection; otherwise, false.
            </returns>
            <param name="c">The server control to search for in the collection. </param>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.IndexOf(System.Web.UI.Control)">
            <summary>
            Retrieves the index of a specified <see cref="T:System.Web.UI.Control"/> object in the collection.
            </summary>
            <returns>
            The index of the specified server control. If the server control is not currently a member of the collection, it returns -1.
            </returns>
            <param name="value">The <see cref="T:System.Web.UI.Control"/> for which the index is returned. </param>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.GetEnumerator">
            <summary>
            Retrieves an enumerator that can iterate through the <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <returns>
            The enumerator to iterate through the collection.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the child controls stored in the <see cref="T:System.Web.UI.ControlCollection"/> object to an <see cref="T:System.Array"/> object, beginning at the specified index location in the <see cref="T:System.Array"/>.
            </summary>
            <param name="array">The <see cref="T:System.Array"/> to copy the child controls to.</param>
            <param name="index">The zero-based relative index in <paramref name="array"/> where copying begins.</param>
            <exception cref="T:System.Web.HttpException"><paramref name="array"/> is not null and not one-dimensional.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a child control, at the specified index location, from the <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <param name="index">The ordinal index of the server control to be removed from the collection.</param>
            <exception cref="T:System.Web.HttpException">Thrown if the <see cref="T:System.Web.UI.ControlCollection"/> is read-only.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.Remove(System.Web.UI.Control)">
            <summary>
            Removes the specified server control from the parent server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <param name="value">The server control to be removed. </param>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.ThrowCollectionReadOnly">
            <summary>
            Throws <see cref="T:System.Web.HttpException"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.Count">
            <summary>
            Gets the number of server controls in the <see cref="T:System.Web.UI.ControlCollection"/> object for the specified ASP.NET server control.
            </summary>
            <returns>
            The number of server controls in the <see cref="T:System.Web.UI.ControlCollection"/>.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.Helpers.CallbackWriter.SiblingCollection.Item(System.Int32)">
            <summary>
            Gets a reference to the server control at the specified index location in the <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <returns>
            The reference to the control.
            </returns>
            <param name="index">The location of the server control in the <see cref="T:System.Web.UI.ControlCollection"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index"/> parameter is less than zero or greater than or equal to <see cref="P:System.Web.UI.ControlCollection.Count"/>.
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.Helpers.MovedContainerHtmlTextWriter.#ctor(System.IO.TextWriter,System.IO.Stream,Gaia.WebWidgets.IAjaxControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.Helpers.MovedContainerHtmlTextWriter"/> class that uses a default tab string.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Button">
            <summary>
            The Gaia Ajax Button displays a push button control on the Web
            page. It inherits from the <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.button.aspx">ASP.NET Button</a>, 
            and has built-in Ajax behaviour.
            </summary>
            <example>
            <code title="ASPX Markup for Button" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\Button\Overview\Default.aspx" />
            </code> 
            <code title="Codebehind for Button" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\Button\Overview\Default.aspx.cs" region="Code" />
            </code> 
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.Button.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Button.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.Button.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Button.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Button.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.Button.OnPreRender(System.EventArgs)">
            <summary>
            See also <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.Button.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Button.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Button.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.RenderControl(System.Web.UI.HtmlTextWriter)"/> method for documentation. This method only forwards to that method.
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.Button.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.Button.GetPostBackOptions">
            <summary>
            Creates a <see cref="T:System.Web.UI.PostBackOptions"/> object that represents the <see cref="T:Gaia.WebWidgets.Button"/> control's postback behavior.
            </summary>
            <returns>A <see cref="T:System.Web.UI.PostBackOptions"/> that represents the <see cref="T:Gaia.WebWidgets.Button"/> control's postback behavior.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Button.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Button.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.Button.GetScript(Gaia.WebWidgets.RegisterControl)">
            <summary>
            Returns control registration object required for registering control on the client.
            </summary>
            <param name="registerControl">Suggested control registration object.</param>
            <returns>Modified or new control registration object.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Button.Gaia#WebWidgets#IAjaxButtonControl#GetPostBackOptions">
            <summary>
            Returns a <see cref="T:System.Web.UI.PostBackOptions"/> object that represents the control's postback behavior.
            </summary>
            <returns>A <see cref="T:System.Web.UI.PostBackOptions"/> that represents the control's postback behavior.</returns>
        </member>
        <member name="P:Gaia.WebWidgets.Button.EnableBubbling">
            <summary>
            Gets or sets if the click even should bubble on the client.
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.Button.Blur">
            <summary>
            Event is triggered when the control looses focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.Button.Focused">
            <summary>
            Event is triggered when the control gets focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.Button.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.Button.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Button.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Button.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Button.PropertyStateManagerButton">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.Button"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Button.PropertyStateManagerButton.#ctor(Gaia.WebWidgets.Button)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.Button.PropertyStateManagerButton"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.Button.PropertyStateManagerButton.#ctor(Gaia.WebWidgets.Button,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.Button.PropertyStateManagerButton"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.Button.PropertyStateManagerButton.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerButtonControl`1"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerButtonControl`1"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.Button.PropertyStateManagerButton.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Button.PropertyStateManagerButton.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ContainerHtmlTextWriter">
            <summary>
            Specliazed <see cref="T:System.Web.UI.HtmlTextWriter"/> for ForceAnUpdate scenarios.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ContainerHtmlTextWriterBase">
            <summary>
            Base class for <see cref="T:System.Web.UI.HtmlTextWriter"/> classes which acts as
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ContainerHtmlTextWriterBase.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.ContainerHtmlTextWriterBase"/> class that uses a default tab string.
            </summary>
            <param name="writer">
            The <see cref="T:System.IO.TextWriter"/> instance that renders the markup content. 
            </param>
        </member>
        <member name="M:Gaia.WebWidgets.ContainerHtmlTextWriterBase.RenderForceAnUpdateRequirement(System.String)">
            <summary>
            Renders specified <paramref name="script"/> before doing ForceAnUpdate.
            </summary>
            <param name="script">Script to render.</param>
        </member>
        <member name="P:Gaia.WebWidgets.ContainerHtmlTextWriterBase.ForceAnUpdateRequirements">
            <summary>
            Returns required script for ForceAnUpdate.
            </summary>
            <remarks>
            Required scripts can be rendered using <see cref="M:Gaia.WebWidgets.ContainerHtmlTextWriterBase.RenderForceAnUpdateRequirement(System.String)"/>.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.ContainerHtmlTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.ContainerHtmlTextWriter"/> class that uses a default tab string.
            </summary>
            <param name="writer">
            The <see cref="T:System.IO.TextWriter"/> instance that renders the markup content. 
            </param>
        </member>
        <member name="T:Gaia.WebWidgets.AjaxEffectEvent">
            <summary>
            An EffectEvent is a client side "event" dispatched by a Gaia Control or navtive DOM element
            For example the Window supports events like Appearing, Closing, Minimizing, etc and these
            effect events all have custom properties passed into the event arguments on the client. 
            To properly connect an Effect to one of these pure client side events you should add the
            effect to the Effect collection of the control and also use an effect event to tie them 
            together. The available effect events are commonly made available as static functions on the
            control itself. 
            </summary>
            <example>
            <code title="Attaching EffectEvents to Ajax Controls" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Effects\Various\EnhancedWindow\Default.aspx.cs" />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxEffectEvent.GetParameters">
            <summary>
            Overriden in concrete classes to obtain the list of parameters used in this 
            EffectEvent.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxEffectEvent.VerifyEffect(Gaia.WebWidgets.Effect)">
            <summary>
            Not all effects can be added to all events. Override this function if you need to 
            perform validation on the effect added. 
            </summary>
            <param name="effect"></param>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxEffectEvent.FunctionName">
            <summary>
            The name of the function/event. For example "gaiaminimizing". The gaia prefix is
            used to sort out gaia specific events with native events. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.GenericControlList`1">
            <summary>
            Defines a list of <see cref="T:System.Web.UI.Control"/> of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">List item type.</typeparam>
        </member>
        <member name="T:Gaia.WebWidgets.GenericControlCollection`1">
            <summary>
            Generic Controls Collection
            </summary>
            <typeparam name="T">Type of items</typeparam>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.#ctor(System.Web.UI.Control)">
            <summary>
            Constructor.
            </summary>
            <param name="owner">Owner control</param>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.Add(System.Web.UI.Control)">
            <summary>
            Adds the specified <see cref="T:System.Web.UI.Control"/> object to the collection.
            </summary>
            <param name="child">The <see cref="T:System.Web.UI.Control"/> to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="child"/> parameter does not specify a control.</exception>
            <exception cref="T:System.Web.HttpException">Thrown if the <see cref="T:System.Web.UI.ControlCollection"/> is read-only.</exception>
            <exception cref="T:System.InvalidOperationException">Throw if <paramref name="child"/> is not of expected <typeparamref name="T"/> type.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.AddAt(System.Int32,System.Web.UI.Control)">
            <summary>
            Adds the specified <see cref="T:System.Web.UI.Control"/> object to the collection at the specified index location.
            </summary>
            <param name="index">The location in the array at which to add the child control.</param>
            <param name="child">The <see cref="T:System.Web.UI.Control"/> to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="child"/> parameter does not specify a control.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index"/> parameter is less than zero or greater than the <see cref="P:System.Web.UI.ControlCollection.Count"/> property.
            </exception>
            <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.UI.ControlCollection"/> is read-only.</exception>
            <exception cref="T:System.InvalidOperationException">Throw if <paramref name="child"/> is not of expected <typeparamref name="T"/> type.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.GetEnumerator">
            <summary>
            Retrieves an enumerator that can iterate through the <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <returns>The enumerator to iterate through the collection.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.System#Collections#Generic#ICollection{T}#Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. 
            The <see cref="T:System.Array"/> must have zero-based indexing.
            </param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            -or-
            Type <typeparamref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            True if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.Verify(System.Web.UI.Control)">
            <summary>
            Checks if specified <paramref name="control"/> is of expected <typeparamref name="T"/> type.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown if specified <paramref name="control"/> is not of the expected <typeparamref name="T"/> type.
            </exception>
        </member>
        <member name="P:Gaia.WebWidgets.GenericControlCollection`1.Item(System.Int32)">
            <summary>
            Gets a reference to the server control at the specified index location in the <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <returns>The reference to the control.</returns>
            <param name="index">
            The location of the server control in the <see cref="T:System.Web.UI.ControlCollection"/>. 
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index"/> parameter is less than zero or greater than or equal to <see cref="P:System.Web.UI.ControlCollection.Count"/>. 
            </exception>
        </member>
        <member name="T:Gaia.WebWidgets.GenericControlCollection`1.GenericControlCollectionEnumerator">
            <summary>
            Specialized <see cref="T:System.Collections.Generic.IEnumerator`1"/> for <see cref="T:Gaia.WebWidgets.GenericControlCollection`1"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.GenericControlCollectionEnumerator.#ctor(System.Collections.IEnumerator)">
            <summary>
            Constructor
            </summary>
            <param name="enumerator">Underlying enumerator.</param>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.GenericControlCollectionEnumerator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.GenericControlCollectionEnumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns>
            True if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlCollection`1.GenericControlCollectionEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="P:Gaia.WebWidgets.GenericControlCollection`1.GenericControlCollectionEnumerator.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <returns>
            The element in the collection at the current position of the enumerator.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.GenericControlCollection`1.GenericControlCollectionEnumerator.System#Collections#IEnumerator#Current">
            <summary>Gets the current element in the collection.</summary>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The enumerator is positioned before the first element of the collection or after the last element.
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlList`1.#ctor(System.Web.UI.Control)">
            <summary>
            Constructor.
            </summary>
            <param name="owner">Owner control</param>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlList`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"/>.
            </summary>
            <returns>
            The position into which the new element was inserted.
            </returns>
            <param name="value">The <see cref="T:System.Object"/> to add to the <see cref="T:System.Collections.IList"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.
            -or- 
            The <see cref="T:System.Collections.IList"/> has a fixed size. 
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlList`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"/> contains a specific value.
            </summary>
            <returns>
            true if the <see cref="T:System.Object"/> is found in the <see cref="T:System.Collections.IList"/>; otherwise, false.
            </returns>
            <param name="value">The <see cref="T:System.Object"/> to locate in the <see cref="T:System.Collections.IList"/>.</param>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlList`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"/>.
            </summary>
            <returns>
            The index of <paramref name="value"/> if found in the list; otherwise, -1.
            </returns>
            <param name="value">The <see cref="T:System.Object"/> to locate in the <see cref="T:System.Collections.IList"/>.</param>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlList`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"/> to insert into the <see cref="T:System.Collections.IList"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.
            -or- 
            The <see cref="T:System.Collections.IList"/> has a fixed size. 
            </exception>
            <exception cref="T:System.NullReferenceException"><paramref name="value"/> is null reference in the <see cref="T:System.Collections.IList"/>.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlList`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove from the <see cref="T:System.Collections.IList"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.
            -or- 
            The <see cref="T:System.Collections.IList"/> has a fixed size. 
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlList`1.System#Collections#Generic#IList{T}#IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:Gaia.WebWidgets.GenericControlList`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Gaia.WebWidgets.GenericControlList`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.IList"/> is read-only.</exception>
        </member>
        <member name="P:Gaia.WebWidgets.GenericControlList`1.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.IList"/> has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.GenericControlList`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="T:Gaia.WebWidgets.AspectScrollable">
            <summary>
            Aspect class for tracking "scroll events" on widgets. Widgets you attach this aspect to
            can raise the Scroll event when the user scrolls the widget. Either when scrolling to the bottom
            or when scrolling at all.
            </summary>
            <example>
            <code title="ASPX Markup for AspectScrollable" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectScrollable\Another\Default.aspx" />
            </code> 
            <code title="Codebehind for AspectScrollable" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectScrollable\Another\Default.aspx.cs" />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AspectScrollable.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectScrollable.#ctor(System.EventHandler{Gaia.WebWidgets.AspectScrollable.ScrollEventArgs})">
            <summary>
            Constructor taking event handler for the OnScrolled event
            </summary>
            <param name="scrolled">delegate called when item is scrolled</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectScrollable.#ctor(System.EventHandler{Gaia.WebWidgets.AspectScrollable.ScrollEventArgs},Gaia.WebWidgets.AspectScrollable.ScrollModes)">
            <summary>
            Constructor taking event handler of the OnScrolled event and also the directions to raise the event for
            </summary>
            <param name="scrolled">Event handler for the scrolled event</param>
            <param name="mode">Which axis to raise the event for</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectScrollable.#ctor(System.EventHandler{Gaia.WebWidgets.AspectScrollable.ScrollEventArgs},Gaia.WebWidgets.AspectScrollable.ScrollModes,System.Boolean)">
            <summary>
            Constructor taking event handler for the Scroll event,
            the sides to raise the event for and whether or not the event should only 
            be raised when you're at "EOF" of the element.
            </summary>
            <param name="scrolled">Event handler for thescrolled event</param>
            <param name="mode">Which axis to raise the event for</param>
            <param name="onlyRaiseAtEdge">If true event handler will only be called when you're at the bottom or far right of the element</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectScrollable.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectScrollable.Scrolled">
            <summary>
            Event raised when element is scrolled
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectScrollable.Mode">
            <summary>
            Which direction to trap scroll events for
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectScrollable.OnlyRaiseAtEdge">
            <summary>
            If true then scroll events will only be raised at "edges" meaning when maximum scrolling to
            some direction have occured
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectScrollable.ScrollEventArgs">
            <summary>
            EventArgs for the Scroll Event
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectScrollable.ScrollEventArgs.Top">
            <summary>
            Distance between element top and current viewable content top
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectScrollable.ScrollEventArgs.Left">
            <summary>
            Distance between element left and current viewable content left
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectScrollable.ScrollEventArgs.Width">
            <summary>
            Full scrollable width of the element content,
            which is NOT the actual viewable width
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectScrollable.ScrollEventArgs.Height">
            <summary>
            Full scrollable height of the element content,
            which is NOT the actual viewable height
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectScrollable.ScrollModes">
            <summary>
            Specifies in what direction or combination of directions scrolling should be trapped.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectScrollable.ScrollModes.None">
            <summary>
            Doesn't trap scroll events at all
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectScrollable.ScrollModes.Vertical">
            <summary>
            Traps vertical scrolling events
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectScrollable.ScrollModes.Horizontal">
            <summary>
            Traps horizontal scrolling events
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectScrollable.ScrollModes.All">
            <summary>
            Traps all scrolling events in all directions
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ValidationSummary">
            <summary>
            Displays a summary of all validation errors inline on a Web page.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.RenderControl(System.Web.UI.HtmlTextWriter)"/> method for documentation. This method only forwards to that method.
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the contents of the control to the specified writer. This method is used primarily by control developers.
            </summary>
            <param name="writer">
            A <see cref="T:System.Web.UI.HtmlTextWriter"/> that represents the output stream to render HTML content on the client. 
            </param>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.GetScript(Gaia.WebWidgets.RegisterControl)">
            <summary>
            Overrride in derived classes to change registration script for this control.
            </summary>
            <param name="registerControl">Initial RegisterControl object to modify.</param>
            <returns>The modified RegisterControl object.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.Gaia#WebWidgets#IAjaxControl#RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Calls base class RenderControl method
            </summary>
            <param name="create">XhtmlTagFactory to use to create XHTML</param>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.SaveValidationState">
            <summary>
            Returns validation state to save.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.GetValidationErrors">
            <summary>
            Returns <see cref="T:System.Collections.Generic.List`1"/> of validator error messages.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gaia.WebWidgets.ValidationSummary.TagKey">
            <summary>
            Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> value that corresponds to this Web server control. This property is used primarily by control developers.
            </summary>
            <returns>
            One of the <see cref="T:System.Web.UI.HtmlTextWriterTag"/> enumeration values.
            </returns>
        </member>
        <member name="T:Gaia.WebWidgets.ValidationSummary.PropertyStateManagerValidationSummary">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.ValidationSummary"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.PropertyStateManagerValidationSummary.#ctor(Gaia.WebWidgets.ValidationSummary)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.ValidationSummary.PropertyStateManagerValidationSummary"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.PropertyStateManagerValidationSummary.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.PropertyStateManagerValidationSummary.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ValidationSummary.PropertyStateManagerValidationSummary.ValueHasChanged``1(``0,``0)">
            <summary>
            Returns true if <paramref name="initial"/> value is equal to the <paramref name="current"/> value.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ValidationSummary.PropertyStateManagerValidationSummary.Gaia#WebWidgets#IMayRequireRerendering#RequiresRerendering">
            <summary>
            Returns true if the associated <see cref="T:Gaia.WebWidgets.ValidationSummary"/> needs rerendering.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.CancellablePositionEventArgs">
            <summary>
            Base class for event argument classes, which denote position and can be cancelled.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.CancellableEventArgs">
            <summary>
            Base class for event argument classes, which can be cancelled.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CancellableEventArgs.Cancel">
            <summary>
            True if the event should be cancelled. Otherwise, false.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CancellablePositionEventArgs.#ctor(System.Drawing.Point)">
            <summary>
            Constructs object using specified position.
            </summary>
            <param name="position">Position for the event argument.</param>
        </member>
        <member name="P:Gaia.WebWidgets.CancellablePositionEventArgs.Position">
            <summary>
            Position
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ISkinControl">
            <summary>
            The ISkinControl applies default skins to Gaia Controls if a CssClass or StylesheetTheme is not applied. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ISkinControl.ApplySkin">
            <summary>
            Applies default skin for the Control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ISkinControl.Enabled">
            <summary>
            Returns true if the default skin is enabled.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ControlCollectionWrapperCached`1">
            <summary>
            This abstract class has similar purpose as <see cref="T:Gaia.WebWidgets.ControlCollectionWrapper`1"/> but instead of just creating
            a View over the real collection it will internally use a List and thereby speed up access dramatically. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ControlCollectionWrapper`1">
            <summary>
            An abstract control collection wrapper that implements <see cref="T:System.Collections.Generic.ICollection`1"/> over a normal <see cref="T:System.Web.UI.ControlCollection"/>. 
            The wrapper will only work on top of an existing <see cref="T:System.Web.UI.ControlCollection"/> and you can create a custom implementation in a derived class.     
            </summary>
            <example>
            Examples include <see cref="T:Gaia.WebWidgets.ControlCollectionOf`1"/> and <see cref="T:Gaia.WebWidgets.ControlCollectionExcept`1"/>.
            </example>
            <typeparam name="T">Generic <see cref="T:System.Web.UI.Control"/> if specialization is needed on the collection wrapper</typeparam>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="ownerControl">The owner of the controls collection</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.Add(System.Web.UI.Control)">
            <summary>
            Adds the specified <see cref="T:System.Web.UI.Control"/> object to the collection.
            </summary>
            <param name="child">The <see cref="T:System.Web.UI.Control"/> to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="child"/> parameter does not specify a control.</exception>
            <exception cref="T:System.Web.HttpException">Thrown if the <see cref="T:System.Web.UI.ControlCollection"/> is read-only.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the control is not of type <typeparamref name="T"/> or is not valid for this container.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
            <seealso cref="M:Gaia.WebWidgets.ControlCollectionWrapper`1.Add(System.Web.UI.Control)"/>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.AddAt(System.Int32,System.Web.UI.Control)">
            <summary>
            Adds the specified <see cref="T:System.Web.UI.Control"/> object to the collection at the specified index location.
            </summary>
            <param name="index">The location in the array at which to add the child control.</param>
            <param name="child">The <see cref="T:System.Web.UI.Control"/> to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="child"/> parameter does not specify a control.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index"/> parameter is less than zero or greater than the <see cref="P:System.Web.UI.ControlCollection.Count"/> property. 
            </exception>
            <exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.UI.ControlCollection"/> is read-only.</exception>
            <exception cref="T:System.InvalidOperationException">Thrown if the control is not of type <typeparamref name="T"/> or is not valid for this container.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.Clear">
            <summary>
            Removes all controls from the current server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.Contains(System.Web.UI.Control)">
            <summary>
            Determines whether the specified server control is in the parent server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <returns>
            True if the specified server control exists in the collection; otherwise, false.
            </returns>
            <param name="control">The server control to search for in the collection.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.System#Collections#Generic#ICollection{T}#Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            True if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the child controls stored in the <see cref="T:System.Web.UI.ControlCollection"/> object to an <see cref="T:System.Array"/> object, beginning at the specified index location in the <see cref="T:System.Array"/>.
            </summary>
            <param name="array">The <see cref="T:System.Array"/> to copy the child controls to.</param>
            <param name="index">The zero-based relative index in <paramref name="array"/> where copying begins.</param>
            <exception cref="T:System.Web.HttpException"><paramref name="array"/> is not null and not one-dimensional.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. 
            The <see cref="T:System.Array"/> must have zero-based indexing.
            </param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            -or-
            Type <typeparamref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.IndexOf(System.Web.UI.Control)">
            <summary>
            Retrieves the index of a specified <see cref="T:System.Web.UI.Control"/> object in the collection.
            </summary>
            <returns>
            The index of the specified server control. If the server control is not currently a member of the collection, it returns -1.
            </returns>
            <param name="value">The <see cref="T:System.Web.UI.Control"/> for which the index is returned.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.GetEnumerator">
            <summary>
            Retrieves an enumerator that can iterate through the <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <returns>
            The enumerator to iterate through the collection.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.Remove(System.Web.UI.Control)">
            <summary>
            Removes the specified server control from the parent server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <param name="value">The server control to be removed.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            True if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.RemoveAt(System.Int32)">
            <summary>
            Removes a child control, at the specified index location, from the <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <param name="index">The ordinal index of the server control to be removed from the collection.</param>
            <exception cref="T:System.Web.HttpException">Thrown if the <see cref="T:System.Web.UI.ControlCollection"/> is read-only.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.IsValidControl(System.Web.UI.Control)">
            <summary>
            Return true if specified <paramref name="control"/> is valid for this wrapped container.
            </summary>
            <param name="control">Control to check for validity.</param>
            <returns>True if specified <paramref name="control"/> is valid.</returns>
            <remarks>
            Used by derived classes to specify which controls are valid for this wrapped container.
            </remarks>
            <example>
            Concrete implementations can be found in <see cref="T:Gaia.WebWidgets.ControlCollectionOf`1"/> and <see cref="T:Gaia.WebWidgets.ControlCollectionExcept`1"/> classes.
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.VerifyControl(System.Web.UI.Control)">
            <summary>
            Ensures <paramref name="control"/> is of type <typeparamref name="T"/> and is valid.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionWrapper`1.Collection">
            <summary>
            Collection which is wrapped.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionWrapper`1.OwnerControl">
            <summary>
            The control that owns the underlying collection.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionWrapper`1.Count">
            <summary>
            Gets the number of server controls in the <see cref="T:System.Web.UI.ControlCollection"/> object for the specified ASP.NET server control.
            </summary>
            <returns>
            The number of server controls in the <see cref="T:System.Web.UI.ControlCollection"/>.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionWrapper`1.Item(System.Int32)">
            <summary>
            Gets a reference to the server control at the specified index location in the <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <returns>
            The reference to the control.
            </returns>
            <param name="index">The location of the server control in the <see cref="T:System.Web.UI.ControlCollection"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index"/> parameter is less than zero or greater than or equal to <see cref="P:System.Web.UI.ControlCollection.Count"/>. 
            </exception>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionWrapper`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            True if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionWrapper`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            True if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Gaia.WebWidgets.ControlCollectionWrapper`1.WrapperEnumerator">
            <summary>
            Specialized <see cref="T:System.Collections.Generic.IEnumerator`1"/> for wrapper.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.WrapperEnumerator.#ctor(Gaia.WebWidgets.ControlCollectionWrapper{`0})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.WrapperEnumerator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.WrapperEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            True if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapper`1.WrapperEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionWrapper`1.WrapperEnumerator.Position">
            <summary>
            Returns position of the <see cref="P:Gaia.WebWidgets.ControlCollectionWrapper`1.WrapperEnumerator.Current"/> element
            in the underlying collection of the wrapper.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionWrapper`1.WrapperEnumerator.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <returns>
            The element in the collection at the current position of the enumerator.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionWrapper`1.WrapperEnumerator.System#Collections#IEnumerator#Current">
            <summary>Gets the current element in the collection.</summary>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">
            The enumerator is positioned before the first element of the collection or after the last element.
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.#ctor(`0,System.Collections.Generic.IList{`0})">
            <summary>
             Constructor. Initializes a new instance of <see cref="T:Gaia.WebWidgets.ControlCollectionWrapperCached`1"/>
            </summary>
            <param name="owner">The owner Control</param>
            <param name="thisCollection">The collection containing the controls that are part of this collection wrapper</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.Add(System.Web.UI.Control)">
            <summary>
            Adds the specified <see cref="T:System.Web.UI.Control"/> object to the collection.
            </summary>
            <param name="child">The <see cref="T:System.Web.UI.Control"/> to add to the collection. 
                            </param><exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="child"/> parameter does not specify a control. 
                            </exception><exception cref="T:System.Web.HttpException">Thrown if the <see cref="T:System.Web.UI.ControlCollection"/> is read-only. 
                            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.System#Collections#Generic#ICollection{T}#Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
                            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.AddAt(System.Int32,System.Web.UI.Control)">
            <summary>
            Adds the specified <see cref="T:System.Web.UI.Control"/> object to the collection at the specified index location.
            </summary>
            <param name="index">The location in the array at which to add the child control. 
                            </param><param name="child">The <see cref="T:System.Web.UI.Control"/> to add to the collection. 
                            </param><exception cref="T:System.ArgumentNullException">The <paramref name="child"/> parameter does not specify a control. 
                            </exception><exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than the <see cref="P:System.Web.UI.ControlCollection.Count"/> property. 
                            </exception><exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.UI.ControlCollection"/> is read-only. 
                            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.RemoveAt(System.Int32)">
            <summary>
            Removes a child control, at the specified index location, from the <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <param name="index">The ordinal index of the server control to be removed from the collection. 
                            </param><exception cref="T:System.Web.HttpException">Thrown if the <see cref="T:System.Web.UI.ControlCollection"/> is read-only. 
                            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the child controls stored in the <see cref="T:System.Web.UI.ControlCollection"/> object to an <see cref="T:System.Array"/> object, beginning at the specified index location in the <see cref="T:System.Array"/>.
            </summary>
            <param name="array">The <see cref="T:System.Array"/> to copy the child controls to. 
                            </param><param name="index">The zero-based relative index in <paramref name="array"/> where copying begins. 
                            </param><exception cref="T:System.Web.HttpException"><paramref name="array"/> is not null and not one-dimensional. 
                            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.
                            </param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.
                            </param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.
                            </exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.
                            </exception><exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.
                                -or-
                            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
                                -or-
                                The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
                                -or-
                                Type <typeparamref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.
                            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.Contains(System.Web.UI.Control)">
            <summary>
            Determines whether the specified server control is in the parent server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <returns>
            true if the specified server control exists in the collection; otherwise, false.
            </returns>
            <param name="c">The server control to search for in the collection. 
                            </param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.System#Collections#Generic#ICollection{T}#Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.Clear">
            <summary>
            Removes all controls from the current server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.IndexOf(System.Web.UI.Control)">
            <summary>
            Retrieves the index of a specified <see cref="T:System.Web.UI.Control"/> object in the collection.
            </summary>
            <returns>
            The index of the specified server control. If the server control is not currently a member of the collection, it returns -1.
            </returns>
            <param name="value">The <see cref="T:System.Web.UI.Control"/> for which the index is returned. 
                            </param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.Remove(System.Web.UI.Control)">
            <summary>
            Removes the specified server control from the parent server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <param name="value">The server control to be removed. 
                            </param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
                            </param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
                            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.TranslateIndex(System.Int32)">
            <summary>
            Helper function to translate the index of the underlying collection to the true index in the Owner Controls collection.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionWrapperCached`1.VerifyIndexInsideBounds(System.Int32)">
            <summary>
            Helper function to verify that the index doesn't fall outside the underlying collection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionWrapperCached`1.Item(System.Int32)">
            <summary>
            Gets a reference to the server control at the specified index location in the <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <returns>
            The reference to the control.
            </returns>
            <param name="index">The location of the server control in the <see cref="T:System.Web.UI.ControlCollection"/>. 
                            </param><exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to <see cref="P:System.Web.UI.ControlCollection.Count"/>. 
                            </exception>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionWrapperCached`1.Count">
            <summary>
            Gets the number of server controls in the <see cref="T:Gaia.WebWidgets.ControlCollectionWrapperCached`1"/> object for the specified ASP.NET server control.
            </summary>
            <returns>
            The number of server controls in the <see cref="T:Gaia.WebWidgets.ControlCollectionWrapperCached`1"/>.
            </returns>
        </member>
        <member name="T:Gaia.WebWidgets.AjaxSerializableAttributeBase">
            <summary>
            Abstract base class for all AjaxSerializable attributes.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxSerializableAttributeBase.#ctor(System.String)">
            <summary>
            The constructor for the AjaxSerializableAttribute
            </summary>
            <param name="jsMethodName">The name of the JS client-side method that implements the property setter</param>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxSerializableAttributeBase.FormatValue(System.Web.UI.Control,System.Object)">
            <summary>
            Called by the Gaia framework to format the provided value of the property of the provided control.
            </summary>
            <param name="control">Property owner</param>
            <param name="value">Value of the property to format.</param>
            <returns>The formatted value of the control's property.</returns>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxSerializableAttributeBase.JSMethodName">
            <summary>
            Returns the JS client-side property setter name
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxSerializableAttributeBase.OptimizeValue">
            <summary>
            Returns true if the property value should be optimized.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectModal">
            <summary>
            Aspect for making Widgets Modal by obscuring the entire surface on the screen. If you attach this to a widget and
            you make the widget visible during a callback then only that widget (and widgets with higher z-index)
            will be "accessible" to be clicked by the end user since all other widgets will be "obscured" by a DIV 
            which will fill up the entire viewport of the browser.
            <p>Modality is something that previously only was available when developing Windows Forms applications, but now with Gaia Ajax 
            it's made available as an Aspect which you can attach to almost all Gaia Controls via the Aspects collection </p>
            <br /> <p>It can be customized with a Color and Opacity by using an overloaded ctor </p>
            <p>The Window has the Modal property which is automatically adding the Aspect for you if set to true. </p>
            </summary>
            <example>
            <code title="ASPX Markup for AspectModal" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectModal\Overview\Default.aspx"  />
            </code> 
            <code title="Adding AspectModal in CodeBehind" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectModal\Overview\Default.aspx.cs" />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AspectModal.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectModal.#ctor(System.Drawing.Color)">
            <summary>
            CTOR taking Color argument for the obscurer DIV
            </summary>
            <param name="color">Background Color of the obscurer DIV</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectModal.#ctor(System.Drawing.Color,System.Double)">
            <summary>
            CTOR taking Color argument for the obscurer DIV in addition to opacity
            </summary>
            <param name="color">Background Color of the obscurer DIV</param>
            <param name="opacity">Opacity of obscurer DIV 0 == invisible, 1 == fully visible</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectModal.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AjaxModule">
            <summary>
            An <see cref="T:System.Web.IHttpModule"/> handling Gaia Ajax requests.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
            <summary>
            Initializes a module and prepares it to handle requests.
            </summary>
            <param name="context">
            An <see cref="T:System.Web.HttpApplication"/> that provides access to the methods, properties, and events common to all application objects within an ASP.NET application 
            </param>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxModule.System#Web#IHttpModule#Dispose">
            <summary>
            Disposes of the resources (other than memory) used by the module that implements <see cref="T:System.Web.IHttpModule"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxModule.ProcessResponse(System.Object,System.EventArgs)">
            <summary>
            Process <see cref="P:System.Web.HttpContext.Response"/> before sending it to the client.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Timer">
            <summary>
            This is an <em>Ajax Timer Control</em>. The Gaia Ajax Timer will poll the server raising an event handler
            every n'th second according to which interval you have configured it to do so. It can be disabled and enabled
            from the server and from the Event Handler you can do whatever you wish with other controls on the page. Including
            creating new controls and update existing ones.
            </summary>
            <example>
            <code title="ASPX Markup for Timer" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\Timer\Overview\Default.aspx" />
            </code> 
            <code title="Codebehind for Timer" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\Timer\Overview\Default.aspx.cs" region="Code" />
            </code> 
            </example>
        </member>
        <member name="T:Gaia.WebWidgets.GaiaControl">
            <summary>
            Gaia Base Control, useful if you need to create your own Ajax Control and don't want to 
            start from scratch. If inheriting from this class you get a LOT for free when creating your own "custom 
            extension widgets".
            This class inherits from the System.Web.UI.Control and is useful if you create "invisible" Ajax Controls like
            for instance our Timer control which is inheriting from this class. It might also be a useful base class 
            for your extension controls if you don't need the overhead from the System.Web.UI.WebControls.WebControl class
            like style collection, Border, BackgroundColor and so on. It is our most lightweight Ajax Extension Control
            base class.
            
            Very useful class if you need to implement your own Ajax Extensions Controls with as few lines of code 
            as possible.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaControl.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaControl.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaControl.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaControl.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaControl.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaControl.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaControl.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaControl.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaControl.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaControl.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaControl.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.Timer.Reset">
            <summary>
            Will reset an active timer. If the timer is Enabled it will continue to Tick, but it will start from the beginning again.
            This will be useful if you rely on a regular callback, but if a callback happens due to "other" events it makes no sense
            to have the extra roundtrip to the server
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Timer.IncludeScriptFiles">
            <summary>
            Include Timer Javascript stuff
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Timer.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Overrriden to provide design time support for timer
            </summary>
            <param name="create">XHtmlTagFactory for markup rendering</param>
        </member>
        <member name="M:Gaia.WebWidgets.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">
            A <see cref="T:System.String"/> that represents an optional event argument to be passed to the event handler.
            </param>
        </member>
        <member name="E:Gaia.WebWidgets.Timer.Tick">
            <summary>
            Raised when the specified amount of time is ellapsed.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Timer.Enabled">
            <summary>
            Gets or sets if the <see cref="T:Gaia.WebWidgets.Timer"/> should tick and raise events.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Timer.Milliseconds">
            <summary>
            Gets or sets the time frame after which <see cref="E:Gaia.WebWidgets.Timer.Tick"/> event is raised.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Timer.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <returns>
            true if the control is visible on the page; otherwise false.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.Timer.ResetInternal">
            <summary>
            Gets or sets if the timer should be reset.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.TableCell">
            <summary>
            Represents ajaxified cell in the <see cref="T:System.Web.UI.WebControls.Table"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.OnPreRender(System.EventArgs)">
            <summary>
            See also <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.RenderControl(System.Web.UI.HtmlTextWriter)"/> method for documentation. This method only forwards to that method.
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create"><see cref="T:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory"/> to use for creating Xhtml compliant markup</param>
        </member>
        <member name="T:Gaia.WebWidgets.TableCell.TableCellAjaxControl">
            <summary>
            Specialized implementation of <see cref="P:Gaia.WebWidgets.TableCell.AjaxContainerControl"/> for <see cref="T:Gaia.WebWidgets.TableCell"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.TableCellAjaxControl.#ctor(Gaia.WebWidgets.IAjaxContainerControl)">
            <summary>
            Constructor
            </summary>
            <param name="control">Control which owns this instance.</param>
        </member>
        <member name="P:Gaia.WebWidgets.TableCell.TableCellAjaxControl.ShouldRenderAjaxControl">
            <summary>
            Used by derived controls to know if the control should be rendered or not
            based on the facts if the ShouldRender was set or control was previously rendered
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.TableCell.PropertyStateManagerTableCell">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.TableCell"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.PropertyStateManagerTableCell.#ctor(Gaia.WebWidgets.TableCell)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.PropertyStateManagerTableCell.#ctor(Gaia.WebWidgets.TableCell,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.PropertyStateManagerTableCell.#ctor(System.Web.UI.WebControls.TableCell,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.PropertyStateManagerTableCell.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.PropertyStateManagerTableCell.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.PropertyStateManagerTableCell.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TableCell.PropertyStateManagerTableCell.OnSnapshotTakenEvent(System.Object,System.EventArgs)">
            <summary>
            Raised after the state snapshot for the associated <see cref="T:System.Web.UI.Control"/> is taken.
            </summary>
            <returns>
            True if event was consumed and the bubbling is cancelled. Otherwise, false.
            Default value is false.
            </returns>
            <remarks>
            Bubbles up until stopped by return value of true.
            </remarks>
        </member>
        <member name="P:Gaia.WebWidgets.TableCell.PropertyStateManagerTableCell.ControlStyle">
            <summary>
            Gets or sets <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle"/> property in the state snapshot.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.TableCell.PropertyStateManagerTableCell.RequiresRerendering">
            <summary>
            Returns true if the associated <see cref="T:Gaia.WebWidgets.TableCell"/> requires rerendering.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ImageButton">
            <summary>
            Gaia Ajax ImageButton displays an image and responds to mouse clicks on the image. It inherits from the <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.imagebutton.aspx">
            ASP.NET ImageButton</a>, and has built-in Ajax behaviour.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.ExecuteLoadPostData(Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate,System.String,System.Collections.Specialized.NameValueCollection,Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate)"/> method for documentation. This method only forwards to that method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.GetPostBackOptions">
            <summary>
            Creates a <see cref="T:System.Web.UI.PostBackOptions"/> object that represents the <see cref="T:Gaia.WebWidgets.Button"/> control's postback behavior.
            </summary>
            <returns>A <see cref="T:System.Web.UI.PostBackOptions"/> that represents the <see cref="T:Gaia.WebWidgets.Button"/> control's postback behavior.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.Gaia#WebWidgets#IAjaxButtonControl#GetPostBackOptions">
            <summary>
            Returns a <see cref="T:System.Web.UI.PostBackOptions"/> object that represents the control's postback behavior.
            </summary>
            <returns>A <see cref="T:System.Web.UI.PostBackOptions"/> that represents the control's postback behavior.</returns>
        </member>
        <member name="E:Gaia.WebWidgets.ImageButton.Blur">
            <summary>
            Event is triggered when the control looses focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.ImageButton.Focused">
            <summary>
            Event is triggered when the control gets focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.ImageButton.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.ImageButton.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ImageButton.ImageUrl">
            <summary>
            Sets the Image URL of the button
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ImageButton.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ImageButton.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ImageButton.Gaia#WebWidgets#IAjaxButtonControl#EnableBubbling">
            <summary>
            Returns true if the click even should bubble on the client.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ImageButton.PropertyStateManagerImageButton">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.ImageButton"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.PropertyStateManagerImageButton.#ctor(Gaia.WebWidgets.ImageButton)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.ImageButton.PropertyStateManagerImageButton"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.ImageButton.PropertyStateManagerImageButton.#ctor(Gaia.WebWidgets.ImageButton,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.ImageButton.PropertyStateManagerImageButton"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="T:Gaia.WebWidgets.GaiaWebControl">
            <summary>
            Gaia Base WebControl, useful if you need to create your own Ajax Control and don't want to 
            start from scratch. 
            By inheriting from this class you can with extremely few lines of code 
            implement your own Ajax Extension WebControl. Note that this is the *exact* counterpart
            to the GaiaControl except that this one inherits from ASP.NET WebControl instead of ASP.NET
            Control which means you can create Ajax Controls with Style collection, Border, Color, Font
            properties and so on. If you need a more "lightweight" Ajax Control then you probably should
            rather inherit from GaiaControl instead.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaWebControl.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaWebControl.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaWebControl.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaWebControl.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaWebControl.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaWebControl.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaWebControl.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaWebControl.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaWebControl.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaWebControl.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GaiaWebControl.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="E:Gaia.WebWidgets.GaiaWebControl.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.GaiaWebControl.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.GaiaWebControl.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.GaiaWebControl.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.MethodAttribute">
            <summary>
            Attribute to mark a Method as valid for an Ajax method invocation.
            Without this attribute no method can be called from JavaScript on the client side. Used
            by Control Developers to create extension controls with support from calling methods from the server
            which maps back to methods on the client side.
            </summary>
            <example>
            <code title="Using the METHOD attribute on the Page (ASPX)" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Core\Manager\PageMethods\Default.aspx" />
            </code> 
            <code title="Using the METHOD attribute on the Page (Codebehind)" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Core\Manager\PageMethods\Default.aspx.cs" />
            </code> 
            </example>
        </member>
        <member name="T:Gaia.WebWidgets.Utilities">
            <summary>
            Commonly used utility methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Utilities.IsViewStateEnabled(System.Web.UI.Control)">
            <summary>
            Returns true if <see cref="P:System.Web.UI.Control.ViewState"/> is enabled for the specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to check the ViewState for.</param>
            <returns>True if viewstate is enabled, false otherwise.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Utilities.IsEnabled(System.Web.UI.WebControls.WebControl)">
            <summary>
            Returns true if specified <paramref name="webControl"/> is enabled.
            Checks recursively.
            </summary>
            <param name="webControl">WebControl to check.</param>
            <returns>True if <see cref="T:System.Web.UI.WebControls.WebControl"/> is enabled.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Utilities.GetCallbackName(System.Web.UI.Control)">
            <summary>
            Returns callback name for the specified <paramref name="control"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Utilities.GetCallbackName(System.String,System.String)">
            <summary>
            Gets callback name for the control based on the specified <paramref name="uniqueid"/> and <paramref name="clientid"/>.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ComposeXhtml">
            <summary>
            The ComposeXhtml is a helper class for creating xhtml compliant markup as string values. The ToString()
            and Write() functions take either an XhtmlTagFactory or XhtmlTextWriter input parameter in a delegate.
            </summary>
            <example>
            <code title="Using the ComposeXhtml.ToString() function" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Core\XhtmlTagFactory\Overview\Default.aspx.cs" region="Code" />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.ComposeXhtml.ToString(Gaia.WebWidgets.ComposeXhtml.RenderStringDelegateFactory,System.Boolean)">
            <summary>
            Takes a delegate and returns a string based on the usage of the XhtmlTagfactory. 
            Allows for nice syntax when using the factory to provide markup that can be easily serialized
            </summary>
            <param name="use">delegate to a method taking XhtmlTagFactory as only parameter</param>
            <param name="disableValidation">Specifies if the <see cref="T:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory"/> should be validating or not.</param>
            <returns>XHTML string representation</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ComposeXhtml.ToString(Gaia.WebWidgets.ComposeXhtml.RenderStringDelegateTextWriter)">
            <summary>
            Takes a delegate and returns a string based on the usage of the TextWriter.
            Allows for nice syntax when using the factory to provide markup that can be easily serialized
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ComposeXhtml.Write(Gaia.WebWidgets.ComposeXhtml.RenderStringDelegateFactory)">
            <summary>
            Just writes directly to memory stream. 
            Use if you need to use XhmltTagFactory and to throw memory sream away
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ComposeXhtml.Write(Gaia.WebWidgets.ComposeXhtml.RenderStringDelegateTextWriter)">
            <summary>
            Just writes directly to memory stream. 
            Use if you need to use TextWriter and to throw memory sream away
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ComposeXhtml.Write(Gaia.WebWidgets.ComposeXhtml.RenderStringDelegateStream)">
            <summary>
            Just writes directly to memory stream. 
            Use if you need to use Stream and to throw away
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ComposeXhtml.RenderStringDelegateFactory">
            <summary>
            The RenderStringDelegateFactory is used as input parameter to functions where it's useful to
            have access to the XhtmlTagFactory
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ComposeXhtml.RenderStringDelegateTextWriter">
            <summary>
            The RenderStringDelegateTextWriter is used as input parameter to functions where you need access
            to the TextWriter. Used in Gaia.WebWidgets.AjaxContainerControl
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ComposeXhtml.RenderStringDelegateStream">
            <summary>
            The RenderStringDelegateStream is used as input parameter to functions where you need access
            to the Stream. Used in Gaia.WebWidgets.AjaxControl
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Css">
            <summary>
            Css Helper class
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Css.Combine(System.String,System.String[])">
            <summary>
            Specify a root CssClass (ie. Gaia) and then subsequent combinations like (ie "panel", "header" )
            and it will return a list of combinations, like ("Gaia-panel Gaia-header") that can be passed to
            the CssClass property of any control
            </summary>
            <param name="cssClass">the root CssClass</param>
            <param name="cssClasses">combinations</param>
            <returns>the combined string</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Css.Combine(System.String,System.Boolean,System.String[])">
            <summary>
            Specify a root CssClass (ie. Gaia) and then subsequent combinations like (ie "panel", "header" )
            and it will return a list of combinations, like ("Gaia-panel Gaia-header") that can be passed to
            the CssClass property of any control
            </summary>
            <param name="cssClass">The Root CssClass</param>
            <param name="skipIfDisabled">If set to true, will skip the process if Nesting of Classes is disabled</param>
            <param name="cssClasses">The additional cssclasses to append</param>
            <returns>a complete string</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Css.SerializeAttributesAndStyles(Gaia.WebWidgets.Panel,Gaia.WebWidgets.HtmlFormatting.Tag)">
            <summary>
            Helper method to render Attributes and Styles for controls inheriting from Gaia Panel. Examples include
            TabControl and ExtendedPanel. We override the style serialization to render valid xhtml markup and gaia
            compatible properties. Extra properties included in Panel include HorizontalAlign, Scrollbars, Wrap, etc.
            </summary>
            <param name="panel">Panel to parse attributes and styles for</param>
            <param name="tag">The Tag to render values into</param>
        </member>
        <member name="M:Gaia.WebWidgets.Css.SerializeAttributesAndStyles(System.Web.UI.WebControls.WebControl,Gaia.WebWidgets.HtmlFormatting.Tag)">
            <summary>
            Helper method to render Attributes and Styles for a WebControl. The WebControl hierarchy unfortunately have a lot
            of overlapping properties from ASP.NET WebControl. E.g. the BorderWidth which also maps to the Style["border-width"]
            and so on. This method renders all attributes, properties and Style values to the given tag. If you create
            your own Ajax Controls with Gaia then use this method on your "root element" to make sure you get all those
            values into the Root element of your widget.
            </summary>
            <param name="webControl">Control to parse attributes for</param>
            <param name="tag">Tag to render values into</param>
        </member>
        <member name="M:Gaia.WebWidgets.Css.SerializeScrollingAttribute(System.Web.UI.WebControls.ScrollBars)">
            <summary>
            Use this function to retrieve the overflow based on the scrollbars of your control.
            This is a useful function if you need to use the overflow on a nested element in your
            composition control. 
            </summary>
            <param name="scrollBars">Scrollbars</param>
            <returns>Overflow string</returns>
        </member>
        <member name="T:Gaia.WebWidgets.BaseValidator">
            <summary>
            Common implementation details for the ajaxified validator controls.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.#ctor(System.Web.UI.WebControls.BaseValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.BaseValidator"/> class.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.LoadViewState(System.Object)">
            <summary>Loads the previously saved state for the control.</summary>
            <param name="savedState">An object that contains the saved view state values for the control. </param>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.OnPreRender">
            <summary>
            Called during PreRender stage.
            </summary>
            <returns>Disposable object.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.SaveViewState(System.Object)">
            <summary>
            Saves any state that was modified after the <see cref="M:System.Web.UI.Control.TrackViewState"/> method was invoked.
            </summary>
            <returns>
            An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.BeginRenderValidator(System.Web.UI.HtmlTextWriter)">
            <summary>
            Begin rendering associated <see cref="P:Gaia.WebWidgets.BaseValidator.Validator"/> using the specified <paramref name="writer"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.EndRenderValidator(System.Web.UI.HtmlTextWriter)">
            <summary>
            Finish rendering associated <see cref="P:Gaia.WebWidgets.BaseValidator.Validator"/> using the specified <paramref name="writer"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Renders HTML markup for the validator using the specified <see cref="T:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.IncludeScriptFiles">
            <summary>
            Includes required script files.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.GetScript">
            <summary>
            Returns validator client-side registration object.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.EnsureClientScriptUpdated">
            <summary>
            Ensures client scripts are updated.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.SetDisplayStyle(Gaia.WebWidgets.BaseValidator.ValidatorDisplayMode)">
            <summary>
            Sets display styles based on the value of the specified <paramref name="displayMode"/> parameter.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.GetDisplayMode(System.Boolean,System.Boolean)">
            <summary>
            Computes display mode for rendering based on the value of <paramref name="isValid"/> parameter.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BaseValidator.GetValidationText(System.Boolean,System.Boolean)">
            <summary>
            Returns the validation text to render.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.BaseValidator.WasValid">
            <summary>
            Returns true if the validator was valid.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.BaseValidator.Validator">
            <summary>
            Returns the owner of this implementation.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.BaseValidator.ValidatorDisplayMode">
            <summary>
            Specifies the display rendering mode for text and error messages in the validator.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.BaseValidator.ValidatorDisplayMode.None">
            <summary>
            Validator content is never displayed inline.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.BaseValidator.ValidatorDisplayMode.Static">
            <summary>
            Validator content is rendered and is part of page layout.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.BaseValidator.ValidatorDisplayMode.Dynamic">
            <summary>
            Validator content is rendered, but not as part of page layout.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.BaseValidator.ValidatorDisplayMode.Visible">
            <summary>
            Validator content is rendered and displayed.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Effects.EffectToggle">
            <summary>
            Toggles the AjaxControl's visibility
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Effects.EffectToggle.GetElementMethod">
            <summary>
            Returns the function name for this Effect
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gaia.WebWidgets.AjaxSerializableAttribute">
            <summary>
            Attribute class for telling the Gaia Core Runtime that a property is serializable. Usage is to submit the
            JavaScript "setter method" as JSMethodName part of the Attribute. Then when the property is changed
            during an Ajax Callback the framework itself will handle serializing the new value back to the client.
            </summary>
            <example>
            <code title="Using the AjaxSerializableAttribute attribute" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Extensions\Widgets\ExtendedButton.cs" region="[ -- Properties -- ]" />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxSerializableAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes new instance of the <see cref="T:Gaia.WebWidgets.AjaxSerializableAttribute"/> class.
            </summary>
            <param name="jsMethodName">The name of the JS client-side method that implements the property setter.</param>
            <param name="optimizeValue">True to optimize the property value if supported.</param>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxSerializableAttribute.OptimizeValue">
            <summary>
            Returns true if the property value should be optimized.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.SnapConfigurationBase">
            <summary>
            Defines snapping configuration.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.SnapConfigurationBase.ToRegistrationOption">
            <summary>
            Returns string representation of this configuration for registering as client-side option.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gaia.WebWidgets.SnapConfigurationBase.Delta">
            <summary>
            Specifies delta values for horizontal and vertical snap.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.SnapConfigurationBase.ClientFunctionName">
            <summary>
            Specifies a function that receives the proposed new top left coordinate pair and 
            returns the coordinate pair to actually be used.
            </summary>
            <remarks>
            Function signature should be function(x, y, element).
            If both <see cref="P:Gaia.WebWidgets.SnapConfigurationBase.Delta"/> and <see cref="P:Gaia.WebWidgets.SnapConfigurationBase.ClientFunctionName"/> are specified, <see cref="P:Gaia.WebWidgets.SnapConfigurationBase.ClientFunctionName"/> takes precedence.
            </remarks>
        </member>
        <member name="T:Gaia.WebWidgets.AspectResizable">
            <summary>
            Aspect class for making elements resizable. With this aspect you can make ANY widget 
            resizable by dragging its borders. Events will be raised (if subscribed to) on the server
            when the Widget has been resized by the user.
            </summary>
            <example>
            <code title="ASPX Markup for AspectResizable" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectResizable\Overview\Default.aspx"  />
            </code> 
            <code title="Adding Support for Resizing your Control with AspectResizable" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectResizable\Overview\Default.aspx.cs" region="Code"  />
            </code>
            <code title="Specifying Maximum Height and Width during Resize" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectResizable\MaxHeightWidth\Default.aspx.cs" region="Code"  />
            </code>
            <code title="Add Support for Resizing only certain corners of your Control" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectResizable\SpecificBorders\Default.aspx.cs" region="Code"  />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.#ctor">
            <summary>
            Constructor defaults to resizing in all directions
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.#ctor(System.EventHandler)">
            <summary>
            Constructor taking event handler for Resized event and defaults the resizing to all directions.
            </summary>
            <param name="onResized">Event handler for Resized event</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.#ctor(System.EventHandler,Gaia.WebWidgets.AspectResizable.ResizeModes)">
            <summary>
            Constructor taking resize mode and Resized event handler
            </summary>
            <param name="resizeMode">Which borders to let the widget be resized at</param>
            <param name="onResized">Event handler to call when widget has been resized</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.#ctor(System.EventHandler,Gaia.WebWidgets.AspectResizable.ResizeModes,System.Int32,System.Int32)">
            <summary>
            Constructor taking resize mode, resized event handler and min width and height
            </summary>
            <param name="resizeMode">Which borders to let the widget be resized at</param>
            <param name="onResized">Event handler for OnResized event</param>
            <param name="minWidth">Minimum width of widget</param>
            <param name="minHeight">Mininum height of widget</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.#ctor(System.EventHandler,Gaia.WebWidgets.AspectResizable.ResizeModes,System.Drawing.Size)">
            <summary>
            Constructor taking resize mode, resized event handler and min size
            </summary>
            <param name="resizeMode">Which borders to let the widget be resized at</param>
            <param name="onResized">Event handler for OnResized event</param>
            <param name="minSize">Minimum size of widget</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.#ctor(System.EventHandler,Gaia.WebWidgets.AspectResizable.ResizeModes,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor taking resize mode, OnResized event handler, minimum height and width and maximum 
            height and width
            </summary>
            <param name="resizeMode">Which borders to let the widget be resized by</param>
            <param name="onResized">Event handler to call when Widget is resized</param>
            <param name="minWidth">Minimum width of widget</param>
            <param name="minHeight">Minimum height of widget</param>
            <param name="maxWidth">Maximum width of widget</param>
            <param name="maxHeight">Maximum height of widget</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.#ctor(System.EventHandler,Gaia.WebWidgets.AspectResizable.ResizeModes,System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Constructor taking resize mode, OnResized event handler, minimum size and maximum size
            </summary>
            <param name="resizeMode">Which borders to let the widget be resized by</param>
            <param name="onResized">Event handler to call when Widget is resized</param>
            <param name="minSize">Minimum size of widget</param>
            <param name="maxSize">Maximum size of widget</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.#ctor(System.EventHandler,Gaia.WebWidgets.AspectResizable.ResizeModes,System.Drawing.Size,System.Drawing.Size,System.String)">
            <summary>
            Constructor taking resize mode, OnResized event handler, minimum size and maximum size 
            and handle DOM element ID from which the widget should be resizable from.
            </summary>
            <param name="resizeMode">Which borders to let the widget be resized by</param>
            <param name="onResized">Event handler to call when Widget is resized</param>
            <param name="minSize">Minimum size of widget</param>
            <param name="maxSize">Maximum size of widget</param>
            <param name="handleId">The client ID of the DOM element from which to resize the Widget</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.#ctor(System.EventHandler,Gaia.WebWidgets.AspectResizable.ResizeModes,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Constructor taking resize mode, OnResized event handler, minimum height and width and maximum height 
            and width and handle DOM element ID from which the widget should be resizable from.
            </summary>
            <param name="resizeMode">Which borders to let the widget be resized by</param>
            <param name="onResized">Event handler to call when Widget is resized</param>
            <param name="minWidth">Minimum width of widget</param>
            <param name="minHeight">Minimum height of widget</param>
            <param name="maxWidth">Maximum width of widget</param>
            <param name="maxHeight">Maximum height of widget</param>
            <param name="handleId">The client ID of the DOM element from which to resize the Widget</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.GetScript(Gaia.WebWidgets.RegisterAspect)">
            <summary>
            Used by derived classes to modify the aspect registration script.
            </summary>
            <param name="registerAspect">Initial aspect registration object.</param>
            <returns>Modified aspect registration object.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectResizable.SerializeBoundingRectangle">
            TODO: Consider moving into Utility or member method for both
            TODO: AspectDraggable and AspectResizable
        </member>
        <member name="P:Gaia.WebWidgets.AspectResizable.EffectEventResized">
            <summary>
            Add this EffectEvent to a control to add an effect when element is resized
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectResizable.Resized">
            <summary>
            Raised when the associated <see cref="T:System.Web.UI.WebControls.WebControl"/> has been resized,
            but after the resizing is handled by the <see cref="T:Gaia.WebWidgets.AspectResizable"/>.
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectResizable.Resizing">
            <summary>
            Raised when the associated <see cref="T:System.Web.UI.WebControls.WebControl"/> has been resized,
            but before the resizing is handled by the <see cref="T:Gaia.WebWidgets.AspectResizable"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectResizable.Mode">
            <summary>
            Which corners the Widget can be resized at
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectResizable.MinWidth">
            <summary>
            Minimum width that widget can be resized to
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectResizable.MaxWidth">
            <summary>
            Maximum width widget can be resized to
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectResizable.MinHeight">
            <summary>
            Minimum height widget can be resized to
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectResizable.MaxHeight">
            <summary>
            Maximum height widget can be resized to
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectResizable.HandleID">
            <summary>
            ID to DOM element from which the widget will be resizable from, 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectResizable.SiblingElement">
            <summary>
            ID to DOM element which ALSO will be resized with the exact same delta if widget is resized. This
            is useful if you have another element (or control) which needs to be resized with the exact same delta as the
            widget the resizing occurs to.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectResizable.Snap">
            <summary>
            Specifies snap configuration.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectResizable.BoundingRectangle">
            <summary>
            Specifies the bounding rectangle where the control resizing will be constrainted to.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectResizable.ResizeModes">
            <summary>
            Denotes through which borders or their combination(s)
            control can be resized.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectResizable.ResizeModes.None">
            <summary>
            Disables resizing
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectResizable.ResizeModes.LeftBorder">
            <summary>
            Resize using left border
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectResizable.ResizeModes.RightBorder">
            <summary>
            Resize using right border
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectResizable.ResizeModes.TopBorder">
            <summary>
            Resize using top border
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectResizable.ResizeModes.BottomBorder">
            <summary>
            Resize using bottom border
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectResizable.ResizeModes.All">
            <summary>
            Resize using all borders
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectResizable.SnapConfiguration">
            <summary>
            Snapping configuration for the <see cref="T:Gaia.WebWidgets.AspectResizable"/>.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectResizable.ResizingEventArgs">
            <summary>
            Provides data for <see cref="E:Gaia.WebWidgets.AspectResizable.Resizing"/> event.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectResizable.ResizingEventArgs.Dimensions">
            <summary>
            Returns new dimensions of the resized element.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.BrowserHistory">
            <summary>
            The BrowserHistory Control allows you to add states to your application by using the
            AddHistory function. When the user clicks back in the browser, the state info will be passed
            to the server in the Navigated event. This is an Ajax request where you can restore the
            state of your application based on this information. 
            </summary>
            <example>
            <code title="ASPX Markup for BrowserHistory" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Core\BrowserHistory\Overview\Default.aspx" />
            </code> 
            <code title="Codebehind for BrowserHistory" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Core\BrowserHistory\Overview\Default.aspx.cs" region="Code" />
            </code> 
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.BrowserHistory.AddHistory(System.String)">
            <summary>
            Adds an entry to the history of the browser allowing the user to navigate back/forward
            between different *cue* points. The string token will be passed back in the Navigated
            event when the user performs custom navigation. 
            </summary>
            <param name="token">The identifier that will be set as a bookmark</param>
        </member>
        <member name="M:Gaia.WebWidgets.BrowserHistory.GoBack">
            <summary>
            Go back in the browser history one step;
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BrowserHistory.GoForward">
            <summary>
            Go one step forward in the browser history
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BrowserHistory.Go(System.Int32)">
            <summary>
            Go back/forward in the browser history based on an integer value. +1 signalizes
            one step forward, whereas -2 signalizes two steps backwards in the browser history 
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Gaia.WebWidgets.BrowserHistory.OnLoad(System.EventArgs)">
            <summary>
            Overridden to do more processing during Control Load.
            </summary>
            <param name="e">Event argument.</param>
        </member>
        <member name="M:Gaia.WebWidgets.BrowserHistory.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BrowserHistory.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="E:Gaia.WebWidgets.BrowserHistory.Navigated">
            <summary>
            The Navigated Event is fired when the user clicks the back/forward button
            in the browser and ends up with a bookmarked page. A bookmarked page uses the
            # (hash) symbol + an identifier that will be passed into the EventArgs. 
            You can reset the state of the application based on this identifier. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.BrowserHistory.BrowserHistoryEventArgs">
            <summary>
            EventArgs used when the Navigated event fires. Here you will get access to the
            Token that was used as a bookmark in the browser history. From that you can 
            restore state. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.BrowserHistory.BrowserHistoryEventArgs.Token">
            <summary>
            The Token is the bookmark/hash (#) value in the browser location field. 
            Use this token to restore state in your application. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AutoGeneratedField">
            <summary>
             Represents an automatically generated field in a data-bound control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AutoGeneratedField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)">
            <summary>
            Fills the specified <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> object with the values from the specified <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> object.
            </summary>
            <param name="dictionary">An <see cref="T:System.Collections.Specialized.IOrderedDictionary"/> used to store the values of the specified cell.</param>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> that contains the values to retrieve.</param>
            <param name="rowState">One of the <see chref="ASP.DataControlRowState"/> values.</param>
            <param name="includeReadOnly">The value true includes only the values of read-only fields; otherwise, false.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AutoGeneratedField.CopyProperties(System.Web.UI.WebControls.DataControlField)">
            <summary>
            Copies properties into specified new field.
            </summary>
            <param name="newField">New field to copy properties into</param>
        </member>
        <member name="M:Gaia.WebWidgets.AutoGeneratedField.CreateField">
            <summary>
            Creates an empty <see cref="T:Gaia.WebWidgets.AutoGeneratedField"/> object.
            </summary>
            <returns>An empty <see cref="T:Gaia.WebWidgets.AutoGeneratedField"/>.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AutoGeneratedField.GetDesignTimeValue">
            <summary>
            Retrieves the value used for a field's value when rendering the <see cref="T:System.Web.UI.WebControls.BoundField"/> object in a designer.
            </summary>
            <returns>
            The value to display in the designer as the field's value.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.AutoGeneratedField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> object to the specified row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> to initialize.</param>
            <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState"/> values.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AutoGeneratedField.OnDataBindField(System.Object,System.EventArgs)">
            <summary>
            Binds the value of a field to the <see cref="T:System.Web.UI.WebControls.BoundField"/> object.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <exception cref="T:System.Web.HttpException">
            The control to which the field value is bound is not a <see cref="T:System.Web.UI.WebControls.TextBox"/> or a <see cref="T:System.Web.UI.WebControls.TableCell"/>. 
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.AutoGeneratedField.ThrowIfNotSuppressed">
            <summary>
            Throws <see cref="T:System.NotSupportedException"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AutoGeneratedField.DataType">
            <summary>
             Gets or sets the data type of the values displayed in an <see cref="T:Gaia.WebWidgets.AutoGeneratedField"/> object.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AutoGeneratedField.ConvertEmptyStringToNull">
            <summary>
            Gets or sets a value indicating whether empty string ("") values are converted to null when the field values are retrieved from the data source.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AutoGeneratedField.DataFormatString">
            <summary>
            Gets or sets the string that specifies the format in which the alternate text for each image in an <see cref="T:Gaia.WebWidgets.AutoGeneratedField"/> object is rendered.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AutoGeneratedField.InsertVisible">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Gaia.WebWidgets.AutoGeneratedField"/> object is visible in insert mode.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AutoGeneratedField.UseCheckBox">
            <summary>
            Returns true if <see cref="T:Gaia.WebWidgets.CheckBox"/> is autogenerated in the field.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag">
            <summary>
            This enum contain all the valid elements form XHTML 1.1
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Body">
            <summary>
            The body element contains the contents of a Web page.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Head">
            <summary>
            The head element contains information about the current document, 
            such as its title, keywords that may be useful to search engines, 
            and other data that is not considered to be document content. 
            This information is usually not displayed by browsers.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Html">
            <summary>
            The html element is the root element that contains all other elements. 
            It must appear only once and usually follows the document declaration.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Title">
            <summary>
            The title element is used to identify the document.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Abbr">
            <summary>
            An abbreviation is a shortened form of a word or phrase. 
            The abbr element is used to identify an abbreviation, 
            and can help assistive technologies to correctly pronounce abbreviated text.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Acronym">
            <summary>
            An acronym is a word formed from the initial letters of a series of words. 
            The acronym element identifies acronyms, and can help assistive technologies 
            to correctly pronounce the acronym.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Address">
            <summary>
            The address element is used to supply contact information. 
            This element often appears at the beginning or end of a document.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.BlockQuote">
            <summary>
            The blockquote element is used to identify larger amounts of quoted text.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Br">
            <summary>
            The br element forcibly breaks (ends) the current line of text. 
            Web browsers render these line breaks as hard returns.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Cite">
            <summary>
            The cite element contains a citation or reference to another source.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Code">
            <summary>
            The code element contains a fragment of computer code.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Div">
            <summary>
            The div element offers a generic way of grouping areas of content.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Dfn">
            <summary>
            The dfn element contains the defining instance of the enclosed term.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Em">
            <summary>
            The em element is used to indicate emphasis.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.H1">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.H2">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.H3">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.H4">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.H5">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.H6">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Kbd">
            <summary>
            The kbd element indicates input to be entered by the user.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.P">
            <summary>
            The p element represents a paragraph.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Pre">
            <summary>
            The pre element instructs visual Web browsers to render content 
            in a pre-formatted fashion. Most Web browsers will render 
            pre-formatted content in a monospace font while preserving 
            white space (spaces, tabs and hard returns).
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Q">
            <summary>
            The q is used to identify short quoted text.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Samp">
            <summary>
            The samp element is used to designate sample output 
            from programs, scripts, etc.
            <br />
            Block Level Element.
            <br />
            Inline Element. ALSO.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Span">
            <summary>
            The span element offers a generic way of adding structure to content.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Strong">
            <summary>
            The strong element is used to indicate stronger emphasis.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Var">
            <summary>
            The var element is used to indicate an instance of a 
            computer code variable or program argument.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.A">
            <summary>
            The a element is used to create a hyperlink. 
            The destination of the hyperlink is specified in the href attribute, 
            and the text or image for the hyperlink is specified between the opening 
            <a> and closing </a> tags.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Dl">
            <summary>
            The dl element is used to create a list where each item in the list 
            comprises two parts: a term and a description. A glossary of terms 
            is a typical example of a definition list, where each item consists 
            of the term being defined and a definition of the term.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Dt">
            <summary>
            The dt element is a definition term for an item in a definition list.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Dd">
            <summary>
            The dd element is a definition description for an item in a definition list.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Ol">
            <summary>
            The ol element is used to create ordered lists. An ordered list is a grouping 
            of items whose sequence in the list is important. For example, the sequence 
            of steps in a recipe is important if the result is to be the intended one.
            Every ol element must contain at least one li element.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Ul">
            <summary>
            The ul element is used to create unordered lists. An unordered list is a 
            grouping of items whose sequence in the list is not important. 
            For example, the order in which ingredients for a recipe are presented 
            will not affect the outcome of the recipe.
            Every ul element must contain at least one li element.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Li">
            <summary>
            The li element represents a list item in ordered lists and unordered lists.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Object">
            <summary>
            The object element provides a generic way of embedding objects such as images, 
            movies and applications (Java applets, browser plug-ins, etc.) into Web pages. 
            param elements contained inside the object element are used to configure the 
            embedded object. Besides param elements, the object element can contain 
            alternate content which can be text or another object element. Alternate content 
            serves as a fall-back mechanism for browsers that are unable to process the embedded object.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Param">
            <summary>
            The param element is used to customize embedded objects that are loaded into a 
            Web browser via the object element. The param element is a generic way of passing 
            data to embedded objects in the form of name/value pairs. The need for param 
            elements and the number of param elements depends on the embedded object.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.B">
            <summary>
            The b element renders text in bold style.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Big">
            <summary>
            The big element renders text in a large font.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Hr">
            <summary>
            The hr element is used to separate sections of content. 
            Though the name of the hr element is "horizontal rule", 
            most visual Web browsers render hr as a horizontal line.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.I">
            <summary>
            The i element renders text in italic style.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Small">
            <summary>
            The small element renders text in a small font.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Sub">
            <summary>
            The sub element indicates that its contents should be 
            regarded as a subscript.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Sup">
            <summary>
            The sup element indicates that its contents should regarded as superscript.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Tt">
            <summary>
            The tt element renders text in a teletype or a monospaced font.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Del">
            <summary>
            The del element is used to mark up modifications made to a document. 
            Specifically, the del element is used to indicate that a section 
            of content has changed and has therefore been removed.
            <br />
            Block Level Element.
            <br />
            Inline Element. ALSO
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Ins">
            <summary>
            The ins element is used to mark up content that has been inserted 
            into the current version of a document. The ins element indicates 
            that content in the previous version of the document has been changed, 
            and that the changes are found inside the ins element.
            <br />
            Block Level Element.
            <br />
            Inline Element. ALSO.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Bdo">
            <summary>
            Unlike English, which is written from left-to-right (LTR), some languages, 
            such as Arabic and Hebrew, are written from right-to-left (RTL). 
            When the same paragraph contains both RTL and LTR text, this is known as 
            bidirectional text or "bidi" text for short. 
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Button">
            <summary>
            The button element is used to create button controls for forms. 
            Buttons created using the button element are similar in functionality 
            to buttons created using the input element, but offer greater rendering options.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.FieldSet">
            <summary>
            The fieldset element adds structure to forms by grouping together 
            related controls and labels.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Form">
            <summary>
            The form element is used to create data entry forms. 
            Data collected in the form is sent to the server for 
            processing by server-side scripts such as PHP, ASP, etc.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Input">
            <summary>
            The input element is a multi-purpose form control. 
            The type attribute specifies the type of form control to be created.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Label">
            <summary>
            The label element associates a label with form controls such as input, 
            textarea, select and object. This association enhances the usability of forms. 
            For example, when users of visual Web browsers click in a label, 
            focus is automatically set in the associated form control. 
            For users of assistive technology, establishing associations between labels 
            and controls helps clarify the spatial relationships found in forms and makes 
            them easier to navigate.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Legend">
            <summary>
            The legend element is a caption to a fieldset element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Select">
            <summary>
            The select element is used to create an option selector 
            form control which most Web browsers render as a listbox control. 
            The list of values for this control is created using option elements. 
            These values can be grouped together using the optgroup element.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.OptGroup">
            <summary>
            The optgroup element is used to group the choices offered in select form controls. 
            Users find it easier to work with long lists if related sections are grouped together.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Option">
            <summary>
            The option element represents a choice offered by select form controls.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.TextArea">
            <summary>
            The textarea element is used to create a multi-line text input form control.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Caption">
            <summary>
            The caption element creates a caption for a table. If a caption is to be used, 
            it should be the first element after the opening table element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Col">
            <summary>
            In XHTML, tables are physically constructed from rows, rather than columns. 
            Table rows contain table cells. In visual Web browsers, when cells line up 
            beneath each other, they are perceived as columns.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.ColGroup">
            <summary>
            In XHTML, tables are physically constructed from rows, rather than columns. 
            Table rows contain table cells. In visual Web browsers, when cells line up 
            beneath each other, they are perceived as columns.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Table">
            <summary>
            The table element is used to define a table. A table is a construct where data 
            is organized into rows and columns of cells.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Tbody">
            <summary>
            The tbody element can be used to group table data rows. This can be useful 
            when a Web browser supports scrolling of table rows in longer tables. 
            Multiple tbody elements can be used for independent scrolling.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Td">
            <summary>
            The td element defines a data cell in a table (i.e. cells that are not header cells).
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Tfoot">
            <summary>
            The tfoot element can be used to group table rows that contain table footer information. 
            This may be useful when printing longer tables that span several printed pages, 
            since the data in tfoot is repeated on each page. The tfoot element should appear before 
            tbody elements.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Th">
            <summary>
            The th element defines a table header cell.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Thead">
            <summary>
            The thead element can be used to group table rows that contain table header information. 
            This can be useful when printing long tables that span several printed pages, 
            since the data in thead will be repeated on each page.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Tr">
            <summary>
            The tr element defines a table row.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Img">
            <summary>
            The img element is used to define an image.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Area">
            <summary>
            The area element identifies geometric regions of a client-side image map, 
            and provides a hyperlink for each region.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Map">
            <summary>
            The map element specifies a client-side image map that may be referenced 
            by elements such as img, select and object.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Meta">
            <summary>
            The meta element is a generic mechanism for specifying metadata for a Web page. 
            Some search engines use this information.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.NoScript">
            <summary>
            The noscript element allows authors to provide alternate content when a script 
            is not executed. This can be because the Web browser is configured not to 
            process scripts, or because the given script language is not supported.
            <br />
            Block Level Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Script">
            <summary>
            The script element places a client-side script, such as JavaScript, within a document. 
            This element may appear any number of times in the head or body of a Web page. 
            The script element may contain a script (called an embedded script) or point via 
            the src attribute to a file containing a script (an external script).
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Style">
            <summary>
            The style element can contain CSS rules (called embedded CSS) or a URL that leads 
            to a file containing CSS rules (called external CSS).
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Link">
            <summary>
            The link element conveys relationship information that can be used by Web browsers and 
            search engines. You can have multiple link elements that link to different resources 
            or describe different relationships. The link elements can be contained in the head element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Base">
            <summary>
            To resolve relative URLs, Web browsers will use the base URL from where the Web page 
            was downloaded. In some circumstances, it is necessary to instruct the Web browser to 
            use a different base URL, in which case the base element is used.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Iframe">
            <summary>
            The Iframe Module defines an element for the definition of inline frames
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Ruby">
            <summary>
            Ruby is mechanism for adding annotations to characters of East Asian languages such 
            as Chinese and Japanese. These annotations typically appear in smaller typeface 
            above or to the side of regular text, and are meant to help with pronunciation 
            of obscure characters or as a language learning aid.
            <br />
            Inline Element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Rbc">
            <summary>
            The rbc element is a base container for rb elements in cases of complex ruby markup. 
            Only one rbc element may appear inside a ruby element.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Rtc">
            <summary>
            The rtc element is a ruby text container for rt elements in cases of complex ruby markup.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Rb">
            <summary>
            The rb element contains base text.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Rt">
            <summary>
            The rt element contains ruby text annotations.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriterTag.Rp">
            <summary>
            The rp element can be used to specify characters that can denote the beginning and 
            end of ruby text. The rp element should only be used for simple ruby markup, 
            and when Web browsers do not support standard ruby notation.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.StateUtil">
            <summary>
            This little State Utility is used on statebags to get and set values. It will by default return
            generic default values for structs or you can provide custom default values. When the value is 
            set to a default value it will not be persisted in the statebag. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.StateUtil.Get``1(System.Web.UI.StateBag,System.String)">
            <summary>
            Get a value from the statebag
            </summary>
            <typeparam name="T">The type of the object in the statebag</typeparam>
            <param name="bag">The bag to look into</param>
            <param name="key">The key of the item</param>
            <returns>The object or the structs default value from the statebag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.StateUtil.Get``1(System.Web.UI.StateBag,System.String,``0)">
            <summary>
            Get a value from the statebag
            </summary>
            <typeparam name="T">The type of the object in the statebag</typeparam>
            <param name="bag">The bag to look into</param>
            <param name="key">The key of the item</param>
            <param name="defaultValue">Custom default value</param>
            <returns>The object or the structs default value from the statebag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.StateUtil.Set(System.Web.UI.StateBag,System.String,System.Object)">
            <summary>
            Set a value in the statebag
            </summary>
            <param name="bag">The statebag to use</param>
            <param name="key">Define the key for storage</param>
            <param name="value">Set the value for the item in the statebag</param>
        </member>
        <member name="M:Gaia.WebWidgets.StateUtil.Set``1(System.Web.UI.StateBag,System.String,``0,``0)">
            <summary>
            Set a value in the statebag
            </summary>
            <typeparam name="T">The type of the object</typeparam>
            <param name="bag">The statebag to use</param>
            <param name="key">Define the key for storage</param>
            <param name="value">Set the value for the item in the statebag</param>
            <param name="defaultValue">Provide a custom default value. DefaultValues are not persisted.</param>
        </member>
        <member name="T:Gaia.WebWidgets.CheckBoxHtmlWriter">
            <summary>
            Controls CheckBox/RadioButton markup generation 
            when base.RenderControl() is called
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.IExtensionDesignerAccessor">
            <summary>
            This interface is used by ExtensionControlDesigner to explicitely 
            ask the control implementing it, to set it pre render defaults when appropriate
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IExtensionDesignerAccessor.SetPreRenderDefaults">
            <summary>
            Called by the ExtensionControlDesigner, when default values should be set
            before actually rendering the control on the design surface
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.TextBox">
            <summary>
            The Gaia Ajax TextBox displays a text box control for user input. It inherits from the 
            <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.textbox.aspx">
            ASP.NET TextBox</a>, and has built-in Ajax behaviour.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.SelectAll">
            <summary>
            Selects all text in the textbox
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.ExecuteLoadPostData(Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate,System.String,System.Collections.Specialized.NameValueCollection,Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate)"/> method for documentation. This method only forwards to that method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="E:Gaia.WebWidgets.TextBox.Select">
            <summary>
            Event is triggered when text is selected
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.TextBox.Blur">
            <summary>
            Event is triggered when the control looses focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.TextBox.Focused">
            <summary>
            Event is triggered when the control gets focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.TextBox.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.TextBox.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.TextBox.Click">
            <summary>
            Event is fired when the control is clicked. Use the eventArgs to retrieve the mouse coordinates for the 
            click event
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.TextBox.DoubleClick">
            <summary>
            Event is fired when the control is double clicked. Use the eventArgs to retrieve the mouse coordinates for the 
            click event
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.TextBox.KeyChangeEvents">
            <summary>
            Gets or sets if key events on the <see cref="T:Gaia.WebWidgets.TextBox"/> should trigger a callback.
            </summary>
            <seealso cref="P:Gaia.WebWidgets.TextBox.KeyChangeEventsInterval"/>
        </member>
        <member name="P:Gaia.WebWidgets.TextBox.KeyChangeEventsInterval">
            <summary>
            Gets or sets the interval in milliseconds when a callback to the server will occur after key events.
            </summary>
            <remarks>
            The value of this property is used only when the <see cref="P:Gaia.WebWidgets.TextBox.KeyChangeEvents"/> property is set to True.
            </remarks>
            <seealso cref="P:Gaia.WebWidgets.TextBox.KeyChangeEventsInterval"/>
        </member>
        <member name="P:Gaia.WebWidgets.TextBox.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.TextBox.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.TextBox.PropertyStateManagerTextBox">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.TextBox"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.PropertyStateManagerTextBox.#ctor(Gaia.WebWidgets.TextBox)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.PropertyStateManagerTextBox.ClearDirtyText">
            <summary>
            Clears dirtyness of the <see cref="P:System.Web.UI.ITextControl.Text"/> property.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.PropertyStateManagerTextBox.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.PropertyStateManagerTextBox.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TextBox.PropertyStateManagerTextBox.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.TextBox.PropertyStateManagerTextBox.Gaia#WebWidgets#IMayRequireRerendering#RequiresRerendering">
            <summary>
            Returns true if the associated <see cref="T:Gaia.WebWidgets.TextBox"/> needs to be rerendered.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Reflection.Property``2(System.String)">
            <summary>
            Creates IGetter for the property on the type TTarget
            having the specified name
            </summary>
            <typeparam name="TTarget">Target object type</typeparam>
            <typeparam name="TValue">Property value type</typeparam>
            <param name="propertyName">Property name</param>
            <returns>IGetter for the property</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Reflection.Property``2(System.Reflection.PropertyInfo)">
            <summary>
            Creates IGetter for the property based on the specified PropertyInfo.
            Conversion from real object/value types to the specified TTarget/TValue types
            are made automatically. May throw if not assignable.
            </summary>
            <typeparam name="TTarget">Target object type</typeparam>
            <typeparam name="TValue">Property value</typeparam>
            <param name="propertyInfo">PropertyInfo to use for property access</param>
            <returns>IGetter for the property</returns>
        </member>
        <member name="T:Gaia.WebWidgets.Reflection.IGetter`2">
            <summary>
            Provides abstraction for property value access
            </summary>
            <typeparam name="TTarget">Target object type</typeparam>
            <typeparam name="TValue">Value type</typeparam>
        </member>
        <member name="T:Gaia.WebWidgets.Reflection.Cache`1">
            <summary>
            Cache of members (properties or methods) having specific custom attribute
            </summary>
            <typeparam name="TCustomAttribute">Custom attribute type for member filtering</typeparam>
        </member>
        <member name="M:Gaia.WebWidgets.Reflection.Cache`1.GetMethod(System.Object,System.String,System.Boolean)">
            <summary>
            Returns cached MethodInfo for the specified method
            </summary>
            <param name="obj">Object to find method on</param>
            <param name="methodName">Method name to search for</param>
            <param name="throwOnAbsence">Specifies if should throw exception if the method is absent</param>
            <returns>Cached MethodInfo</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Reflection.Cache`1.GetProperties(System.Object)">
            <summary>
            Returns list of cached properties having 
            specific attribute on the specified object
            </summary>
            <param name="obj">Object to search for properties</param>
            <returns>Cached lists of properties</returns>
        </member>
        <member name="T:Gaia.WebWidgets.PropertyStateManagerListControl">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for controls inheriting from <see cref="T:System.Web.UI.WebControls.ListControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerListControl.#ctor(System.Web.UI.WebControls.ListControl)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerListControl"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerListControl.#ctor(System.Web.UI.WebControls.ListControl,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerListControl"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerListControl.ClearDirtySelection">
            <summary>
            Marks the <see cref="P:System.Web.UI.WebControls.ListItem.Selected"/> property as clean
            for each item in <see cref="P:System.Web.UI.WebControls.ListControl.Items"/> collection in the state snapshot.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerListControl.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerListControl.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerListControl.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerListControl.RemoveDisabled">
            <summary>
            Returns true if the <see cref="T:System.Web.UI.WebControls.ListItem"/> in the <see cref="P:System.Web.UI.WebControls.ListControl.Items"/> collection
            should be removed from client if <see cref="P:System.Web.UI.WebControls.ListItem.Enabled"/> is false.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.EffectControl">
            <summary>
            Composite builder block for Ajax Effect Controls keeping track of the Effects collection. Don't forget to forward calls to the
            OnPreRender method() for script inclusion. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.EffectControl.#ctor(System.Web.UI.Control)">
            <summary>
            Constructor
            </summary>
            <param name="owner">Owner Control</param>
        </member>
        <member name="M:Gaia.WebWidgets.EffectControl.OnPreRender">
            <summary>
            Forward calls to this method from the OnPreRender() in your control. It will make sure that required scripts are
            added and that custom effects in callbacks are being executen properly. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.EffectControl.Effects">
            <summary>
            Effect Collection
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.GaiaAjaxConfiguration">
             <summary>
             The Gaia Ajax Configuration class 
             </summary>
             <example> 
                The configuration file should contain the following elements: 
                <code escaped="true"> 
                    <configSections>
                      <section name="GaiaAjaxSection"
                               type="Gaia.WebWidgets.GaiaAjaxConfigurationSection"
                               restartOnExternalChanges="true"></section>
                    </configSections>
            
                    <GaiaAjaxSection
                        EnableDefaultTheme="false"
                        EnableJavaScriptInclusion="true"
                        EnableNestedCssClasses="true">
                    </GaiaAjaxSection>
                    </code> 
             </example> 
        </member>
        <member name="P:Gaia.WebWidgets.GaiaAjaxConfiguration.Instance">
            <summary>
            Entrance to the Gaia Ajax Configuration Provider. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.GaiaAjaxConfiguration.EnableDefaultTheme">
            <summary>
            If you do not provide a CssClass property, Gaia will automatically enable some default
            styles for the widgets so they work out-of-the-box. If you don't want this behavior
            set this value to true
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.GaiaAjaxConfiguration.EnableNestedCssClasses">
            <summary>
            The DOM model that Gaia introduces presets a lot of different css classnames on elements
            and child elements. ie. Gaiax-window, Gaiax-window-bodywrapper, Gaiax-window-content, etc.
            If you want to only set your custom css class on the root element and stop propagation of the
            Gaia DOM structure, set this property to true. If you want to skin Gaia manually you must
            use Selectors manually like this. .gaiax-window div div span for example to find the proper element
            to set its styles on. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.GaiaAjaxConfiguration.EnableJavaScriptInclusion">
            <summary>
            Gaia automatically includes the required JavaScript files pr/widget. If you don't want
            this behavior and want to manually include the JavaScript files yourself, you can set
            this property to false and Gaia will stop sending the files. Set this value with caution
            as it will break your entire application if you don't include the files properly. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.GaiaAjaxConfiguration.EnableDynamicScriptLoading">
            <summary>
            Gaia automatically includes all JavaScript files in 1 file which is rendered from the WebResource 
            handler. If you set this value to true, Gaia will automatically only render the required JavaScript
            files needed pr/widget. Even in callbacks it will deliver .js files over the network and include them
            note: The dynamic loading of JavaScript has known issues and may break some applications. 
            This functionality is not supported by Gaiaware
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.GaiaAjaxConfiguration.ZIndexThreshold">
            <summary>
            Specifies the threshold that will be used in routines which compute z-index.
            All the stacking contexts with z-index greater then the specified threshold will be ignored.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.GaiaAjaxConfiguration.SingletonHelper">
            <summary>
            Helper class for creating thread-safe singletons.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ControlCollectionExcept`1">
            <summary>
            This collection serves similar purpose as <see cref="T:Gaia.WebWidgets.ControlCollectionExcept`1"/>, but offers higher performance by internally
            using Lists of valid controls instead of just creating a View over an existing collection. 
            </summary>
            <typeparam name="T">The type that cannot be part of this Controls Collection</typeparam>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionExcept`1.#ctor(System.Web.UI.Control,System.Collections.Generic.IList{System.Web.UI.Control})">
            <summary>
             Constructor. Initializes a new instance of <see cref="T:Gaia.WebWidgets.ControlCollectionWrapperCached`1"/>
            </summary>
            <param name="owner">The owner Control</param>
            <param name="thisCollection">The collection containing the controls that are part of this collection wrapper</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionExcept`1.IsValidControl(System.Web.UI.Control)">
            <summary>
            Abstract function used to Verify that a control matches the requirements for derived collections. 
            </summary>
            <param name="control">The control to verify</param>
        </member>
        <member name="T:Gaia.WebWidgets.Constants">
            <summary>
            Defines constants used in the assembly
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Constants.SetCausesValidationFunctionName">
            <summary>
            Function name which handles CausesValidation property.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Constants.SetValidationGroupFunctionName">
            <summary>
            Function name which handles ValidationGroup property.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Constants.SetPostBackUrlFunctionName">
            <summary>
            Function name which handles PostBackUrl and PostBackOptions.ActionUrl property.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.Constants.SetArgumentFunctionName">
            <summary>
            Function name which handles PostBackOptions.Argument property.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectDraggable">
            <summary>
            Aspect class for making elements draggable or movable.
            Element you attach this Aspect to can be dragged around on screen with mouse. See AspectDroppable
            for how to make it possible to track specific places they are dropped.
            </summary>
            <example>
            <code title="ASPX Markup for AspectDraggable Example" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectDraggable\Overview\Default.aspx" />
            </code> 
            <code title="Adding Draggable capabilities to ANY Gaia control" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectDraggable\Overview\Default.aspx.cs" region="Code" />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.#ctor">
            <summary>
            Default constructor, adds no Event Handler for the dropped method, uses all "default properties"
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.#ctor(System.EventHandler)">
            <summary>
            Constructor taking event handler for the Dropped event
            </summary>
            <param name="dropped">delegate called when item is dropped on page</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.#ctor(System.EventHandler,System.Drawing.Rectangle)">
            <summary>
            Constructor taking event handler for the Dropped event in addition to a Rectangle which defines
            the boundaries of where the user can drag the item.
            </summary>
            <param name="dropped">delegate called when item is dropped on page</param>
            <param name="boundingRect">Rectangle from which to constrain movements within. To make it only draggable
            in one axis set both other axis values to 0.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.#ctor(System.EventHandler,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Constructor taking event handler for the Dropped event in addition to a Rectangle which defines
            the boundaries of where the user can drag the item and a boolean value which says if the 
            dragging operation should be reverted when the user lets go of the widget.
            </summary>
            <param name="dropped">delegate called when item is dropped on page</param>
            <param name="boundingRect">Rectangle from which to constrain movements within</param>
            <param name="revert">If true Draggable will "animate" back to the former place after being dropped, default value is false</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.#ctor(System.EventHandler,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            Constructor taking event handler for the Dropped event in addition to a Rectangle which defines
            the boundaries of where the user can drag the item, a boolean value which says if the 
            dragging operation should be reverted when the user lets go of the widget and a boolean value which if
            true says that the logic shouldn't check for hits on AspectDroppable widgets. To set this value
            to true might seriously optimize the JavaScript on the client-side.
            </summary>
            <param name="dropped">delegate called when item is dropped on page</param>
            <param name="boundingRect">Rectangle from which to constrain movements within</param>
            <param name="revert">If true Draggable will "animate" back to the former place after being dropped</param>
            <param name="silent">If true Draggable "silent" meaning it will not look for droppables before dropped 
            (and thereby not give visual clues about which droppables it is actually over), the default value of this 
            parameter is false</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.#ctor(System.EventHandler,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Decimal)">
            <summary>
            Constructor taking event handler for the Dropped event in addition to a Rectangle which defines
            the boundaries of where the user can drag the item, a boolean value which says if the 
            dragging operation should be reverted when the user lets go of the widget, a boolean value which if
            true says that the logic shouldn't check for hits on AspectDroppable widgets and a decimal value
            which must be between 0.0 and 1.0 which defines the amount of transparency the widget will have
            while being dragged around on the client.
            </summary>
            <param name="dropped">delegate called when item is dropped on page</param>
            <param name="boundingRect">Rectangle from which to constrain movements within</param>
            <param name="revert">If true Draggable will "animate" back to the former place after being dropped</param>
            <param name="silent">If true Draggable "silent" meaning it will not look for droppables before dropped (and thereby not give visual clues about which droppables it is actually over)</param>
            <param name="effect">If not 1.0 then Widget will be semi transparent while being dragged according to the value 
            between 0.0 and 1.0 where 0.0 is 100% invisible and 1.0 is 100% visible. Default value of this property
            is 1.0M</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.#ctor(System.EventHandler,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Decimal,System.String)">
            <summary>
            Constructor taking event handler for the Dropped event in addition to a Rectangle which defines
            the boundaries of where the user can drag the item, a boolean value which says if the 
            dragging operation should be reverted when the user lets go of the widget, a boolean value which if
            true says that the logic shouldn't check for hits on AspectDroppable widgets, a decimal value
            which must be between 0.0 and 1.0 which defines the amount of transparency the widget will have
            while being dragged around on the client, a boolean value stating if the widget should "animate" when
            dropped on an accepting AspectDroppable and a "handle" which if non-null defines a DOM element ID by which 
            the widget will be draggable from.
            </summary>
            <param name="dropped">delegate called when item is dropped on page</param>
            <param name="boundingRect">Rectangle from which to constrain movements within</param>
            <param name="revert">If true Draggable will "animate" back to the former place after being dropped</param>
            <param name="silent">If true Draggable "silent" meaning it will not look for droppables before dropped (and thereby not give visual clues about which droppables it is actually over)</param>
            <param name="effect">If not 1.0 then Widget will be semi transparent while being dragged according to the value 
            between 0.0 and 1.0 where 0.0 is 100% invisible and 1.0 is 100% visible. Default value of this property
            is 1.0M</param>
            <param name="handle">Specifies the handle element id for dragging</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.#ctor(System.EventHandler,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Decimal,System.String,System.String)">
            <summary>
            Constructor taking event handler for the Dropped event in addition to a Rectangle which defines
            the boundaries of where the user can drag the item, a boolean value which says if the 
            dragging operation should be reverted when the user lets go of the widget, a boolean value which if
            true says that the logic shouldn't check for hits on AspectDroppable widgets, a decimal value
            which must be between 0.0 and 1.0 which defines the amount of transparency the widget will have
            while being dragged around on the client, a boolean value stating if the widget should "animate" when
            dropped on an accepting AspectDroppable, a "handle" which if non-null defines a DOM element ID by which 
            the widget will be draggable from and an "ID" to pass into the Dropped event handler when widget is dropped.
            </summary>
            <param name="dropped">delegate called when item is dropped on page</param>
            <param name="boundingRect">Rectangle from which to constrain movements within</param>
            <param name="revert">If true Draggable will "animate" back to the former place after being dropped</param>
            <param name="silent">If true Draggable "silent" meaning it will not look for droppables before dropped (and thereby not give visual clues about which droppables it is actually over)</param>
            <param name="effect">If not 1.0 then Widget will be semi transparent while being dragged according to the value 
            between 0.0 and 1.0 where 0.0 is 100% invisible and 1.0 is 100% visible. Default value of this property
            is 1.0M</param>
            <param name="handle">Specifies the handle element id for dragging</param>
            <param name="idToPass">Id which will be passed into the Dropped event handler if one is defined. This can be very useful
            for figuring out which item was being dropped when you pair the AspectDraggable together with an AspectDroppable.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.#ctor(System.EventHandler,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Web.UI.Control)">
            <summary>
            Constructor taking event handler for the Dropped event in addition to a Rectangle which defines
            the boundaries of where the user can drag the item, a boolean value which says if the 
            dragging operation should be reverted when the user lets go of the widget, a boolean value which if
            true says that the logic shouldn't check for hits on AspectDroppable widgets, a decimal value
            which must be between 0.0 and 1.0 which defines the amount of transparency the widget will have
            while being dragged around on the client, a boolean value stating if the widget should "animate" when
            dropped on an accepting AspectDroppable and a "handle" which if non-null defines a Control by which 
            the widget will be draggable from.
            </summary>
            <param name="dropped">delegate called when item is dropped on page</param>
            <param name="boundingRect">Rectangle from which to constrain movements within</param>
            <param name="revert">If true Draggable will "animate" back to the former place after being dropped</param>
            <param name="silent">If true Draggable "silent" meaning it will not look for droppables before dropped (and thereby not give visual clues about which droppables it is actually over)</param>
            <param name="effect">If not 1.0 then Widget will be semi transparent while being dragged according to the value 
            between 0.0 and 1.0 where 0.0 is 100% invisible and 1.0 is 100% visible. Default value of this property
            is 1.0M</param>
            <param name="hitEffect">If set to true will add up an effect on the target droppable</param>
            <param name="handleControl">Specifies the handle Control for dragging</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.UpdatePercentageStyles(System.Web.UI.CssStyleCollection,System.Double,System.Double)">
            <summary>
            Sets specified <paramref name="left"/> and <paramref name="top"/> into the specified <paramref name="styleCollection"/>.
            </summary>
            <remarks>
            The <see cref="T:System.Web.UI.CssStyleCollection"/> keys used may be either left/right or top/bottom depending of the parameter values.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.GetScript(Gaia.WebWidgets.RegisterAspect)">
            <summary>
            Returns aspect registration object required for registering aspect on the client.
            </summary>
            <param name="registerAspect">Suggested aspect registration object.</param>
            <returns>Modified or new aspect registration object.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.EffectEventStartDragging">
            <summary>
            Use this EffectEvent to wire up an effect at the start of the drag process. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.EffectEventEndDragging">
            <summary>
            Use this EffectEvent to wire up an effect at the end of the dragging
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.EffectEventReverting">
            <summary>
            Use this EffectEvent to wire up an effect when the element is reverted back to it's original location.
            Gaia.WebWidgets.EffectMove is parameterized to provide interessting effects when the item is reverted.
            </summary>
            <example>
            <code title="Use Top and Left in ClickedEventArgs through relative coordinates" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Effects\Aspects\Draggable\Default.aspx.cs" region="EffectEventReverting" /> 
            </code> 
            </example>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.HitEffect">
            <summary>
            Set HitEffect to true if you want to visualize the Element which this item is dropped onto.
            When HitEffect is set to true it also has the nice side effect of disabling reverts which 
            may be desireable in many dragdrop scenarios. You can specify the HitEffect
            with the <see cref="P:Gaia.WebWidgets.AspectDroppable.EffectEventDropped"/> EffectEvent. 
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectDraggable.BeginDrag">
            <summary>
            This event is fired immediately when the element is starting the drag operation. It can be useful 
            to subscribe to this event to "set the stage" for the draggable operation to take place. 
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectDraggable.Dropped">
            <summary>
            Event raised when element dropped after a dragging operation. If you have created
            a container with AspectDroppable, both the Dropped events will be fired in the 
            same callback, first this Event and then the Dropped event of AspectDroppable. 
            The Left and Top styles reflect the new position of the element after it was 
            dropped
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectDraggable.Dropping">
            <summary>
             Raised before the <see cref="P:System.Web.UI.WebControls.WebControl.Style"/> is updated.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.Rectangle">
            <summary>
            Rectangular constraints for how much and where the widget can be dragged around. To set it to 
            only draggable horizontally for instance set this value to; new Rectangle(-4000, 0, 4000, 0)
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.Revert">
            <summary>
            If true then when the widget is dropped the widget will be reverted back to its original position
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.Silent">
            <summary>
            If true then while dragged the dragging logic will avoid to check for intersections against 
            widgets with the AspectDroppable aspect. This is a big optimalization, so use it if you don't have
            an AspectDroppable attached which is listening in on Dropped events.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.Effect">
            <summary>
            Defines the amount of transparency the widget will have when being dragged on the surface. 
            0.0 means completely in-visible and 1.0 means completely visible (no transparency)
            You can also use the EffectEvents StartDragging + EndDragging to have a custom start effect
            and custom end effect which offers much more granularity on the draggable effect.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.DeepCopy">
            <summary>
            When set to true a deep copy of the element will be created to be dragged when used either with
            <see cref="P:Gaia.WebWidgets.AspectDraggable.UseDocumentBody"></see> or <see cref="P:Gaia.WebWidgets.AspectDraggable.MakeGhost"></see> properties. 
            Does not have an effect if standard drag and drop behavior is used. When set to false, will only 
            create a shallow copy of the draggable element and that means only the root element is copied. 
            Can be used together with <see cref="P:Gaia.WebWidgets.AspectDraggable.DragCssClass"></see> for interessting effect. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.MakeGhost">
            <summary>
            When set to true will create a ghost by cloning the draggable element. This creates the interessting
            effect of keeping the draggable control in it's place, while you drag around a proxy. Can be used 
            together with <see cref="P:Gaia.WebWidgets.AspectDraggable.UseDocumentBody"></see> and <see cref="P:Gaia.WebWidgets.AspectDraggable.DeepCopy"></see> for various effects. 
            </summary>
            <example>
            <code title="Ghosting" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectDraggable\Ghosting\Default.aspx.cs" region="Code"/>
            </code>
            </example>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.UseDocumentBody">
            <summary>
            When set to true, will add the element to the Body of the Document while dragging. This 
            fixes some browser issues and also makes it easier to drag and drop between different Gaia controls
            on the page since it doesn't care about different overflow settings, stacking contexts, etc.
            </summary>
            <value><c>true</c> if [use document body]; otherwise, <c>false</c>.</value>
            <example>
            <code title="Using the Document Body for Drag and Drop" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Extensions\TreeView\DragAndDrop\Default.aspx.cs" region="Make Draggable" />
            </code>
            </example>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.DragCssClass">
            <summary>
            Specify a CssClass to be applied while the Element is being dragged. The CssClass will be added
            regardless of Draggable configuration and removed immediately on drop. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.Handle">
            <summary>
            Specifies client ID of the element in the DOM tree which will serve as a handle for dragging
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.HandleControl">
            <summary>
            Specifies Control which will serve as an handle for dragging. The Handle control must 
            be a child of Draggable control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.IdToPass">
            <summary>
            Special ID to pass into AspectDroppable event handler if one is defined
            </summary>
            <example>
            <code title="Passing a custom ID when the Gaia control is dropped" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectDroppable\Overview\Default.aspx.cs" region="Code" />
            </code>
            </example>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.Snap">
            <summary>
            Specifies Snap configuration to use during dragging.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectDraggable.DroppingEventArgs">
            <summary>
            Provides data for <see cref="E:Gaia.WebWidgets.AspectDraggable.Dropping"/> event.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.DroppingEventArgs.#ctor(System.Drawing.Point,System.Boolean)">
            <summary>
            Initializes new instance of <see cref="E:Gaia.WebWidgets.AspectDraggable.Dropping"/> class.
            </summary>
            <param name="position">Drop position.</param>
            <param name="droppedOnTargetContainer">True if widgets was dropped on target container. Otherwise, false.</param>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.DroppingEventArgs.DroppedOnTargetContainer">
            <summary>
            If true, indicates that the element was dragged succesfully over an element which was constructed with
            AspectDroppable. This can be useful to know in certain circumstances.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectDraggable.SnapConfiguration">
            <summary>
            Snapping configuration for the <see cref="T:Gaia.WebWidgets.AspectDraggable"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDraggable.SnapConfiguration.ToRegistrationOption">
            <summary>
            Returns string representation of this configuration for registering as client-side option.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDraggable.SnapConfiguration.TargetSelector">
            <summary>
            Specifies CSS Selector for the DOM elements.
            The Control can be only snapped to the selected DOM elements.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectDraggable.RevertEffectEvent">
            <summary>
            Defines revert effect.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ListBox">
            <summary>
             The Gaia Ajax ListBox creates a single-selection or multiselection list box. It inherits from the 
            <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.listbox.aspx" target="_blank">ASP.NET ListBox</a>, 
            and has built-in Ajax behaviour.
            </summary>
            <example>
            <code title="ASPX Markup for ListBox" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\ListBox\Overview\Default.aspx" />
            </code> 
            <code title="Codebehind for ListBox" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\ListBox\Overview\Default.aspx.cs" region="Code" />
            </code> 
            <code title="Ordering Items in a ListBox (ASPX)" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\ListBox\OrderedListBox\Default.aspx" />
            </code> 
            <code title="Ordering Items in a ListBox (Code)" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\ListBox\OrderedListBox\Default.aspx.cs" region="Code" />
            </code> 
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.ExecuteLoadPostData(Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate,System.String,System.Collections.Specialized.NameValueCollection,Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate)"/> method for documentation. This method only forwards to that method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ListBox.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="E:Gaia.WebWidgets.ListBox.Blur">
            <summary>
            Event is triggered when the control looses focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.ListBox.Focused">
            <summary>
            Event is triggered when the control gets focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.ListBox.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.ListBox.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ListBox.Rows">
            <summary>
            Gets or sets the number of rows displayed in the <see cref="T:System.Web.UI.WebControls.ListBox"/> control.
            </summary>
            <returns>
            The number of rows displayed in the <see cref="T:System.Web.UI.WebControls.ListBox"/> control. The default value is 4.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified number of rows is less than one or greater than 2000.</exception>
        </member>
        <member name="P:Gaia.WebWidgets.ListBox.SelectionMode">
            <summary>
            Gets or sets the selection mode of the <see cref="T:System.Web.UI.WebControls.ListBox"/> control.
            </summary>
            <returns>
            One of the <see cref="T:System.Web.UI.WebControls.ListSelectionMode"/> values. The default value is Single.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The specified selection mode is not one of the <see cref="T:System.Web.UI.WebControls.ListSelectionMode"/> values. 
            </exception>
        </member>
        <member name="P:Gaia.WebWidgets.ListBox.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ListBox.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.HtmlFormatting.Tag">
            <summary>
            Class encapsulating an XHTML tag/element. Use in combination with XhtmlTextWriter class to easily create 
            XHTML valid markup. Implements the "using pattern" or the "IDisposable pattern" to make sure tag is 
            correctly closed. Makes it VERY easy to create XHTML valid markup "typed" in server-side code without 
            resorting to string.Format or other "non-best practices methods". In combination with XhtmlTextWriter,
            XhtmlTagFactory and ComposeXhtml it can virtually "walk on water" and make your code look AWESOME while
            still formatting beautiful XHTML syntax in C#.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AtomicInvoker">
            <summary>
            <para>Class that encapsulates initialization and destruction logic as a unit
            and deterministically executes them by exploiting the "using" or "IDisposable" pattern.</para>
            <para>This class is very useful for having code executes by guarantee at some specific point in
            your sequence. If you have two or three operations which are completely dependant upon
            the order of execution in addition to that you also need guarantees that all three things
            should execute then this class is just what you need.</para>
            </summary>
            <example>
            <code>
            int first = 0, second = 0, result = 0;
            using (new Gaia.WebWidgets.AtomicInvoker(
               delegate
                {
                   // Run initialization logic here
                   first = 5;
               },
               delegate
               {
                   // run destruction logic here
                   result = first + second;
               }))
            {
               // run body here...
               second = 3;
            }
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AtomicInvoker.#ctor(Gaia.WebWidgets.AtomicInvoker.Action,Gaia.WebWidgets.AtomicInvoker.Action)">
            <summary>
            Constructor
            </summary>
            <param name="initializer">Initialization delegate</param>
            <param name="destructor">Destructor delegate</param>
        </member>
        <member name="M:Gaia.WebWidgets.AtomicInvoker.#ctor">
            <summary>
            Constructor used only for inheritance.
            You don't need to provide initializer in that case,
            because you can do initialization in the constructor.
            Inheritors should only set the Deinitializer property.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AtomicInvoker.Dispose(System.Boolean)">
            <summary>
            Basic implementation of IDisposable pattern
            </summary>
            <param name="disposing">If true and not already disposed, disposing will be performed</param>
        </member>
        <member name="P:Gaia.WebWidgets.AtomicInvoker.Destructor">
            <summary>
            Deinitializer can be set in the derived classes
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AtomicInvoker.Action">
            <summary>
            Callback method type
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.Tag.SetId(System.String,System.String[])">
            <summary>
            Sets the "id" attribute for the tag.
            If more arguments are given the id parameter is expected to be
            a string formatting expression e.g. like; "{0}_SOMEVALUE", ClientID
            </summary>
            <param name="id"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.Tag.SetCssClass(System.String)">
            <summary>
            Sets the CssClass ("class" attribute) for the tag
            </summary>
            <param name="cssclass"></param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.Tag.SetStyle(System.String,System.Object[])">
            <summary>
            Sets the "style" atribute for the tag
            If more arguments are given the id parameter si expected to be
            a string formatting expression e.g. like; "{0}_SOMEVALUE", ClientID
            </summary>
            <param name="style"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.Tag.WriteContent(System.String)">
            <summary>
            Flushes the XhtmlTextWriter/Tag and writes "content" to it. Note that content will be escaped according 
            to w3c rules meaning that angle brackets will not be rendered as angle brackets.
            </summary>
            <param name="content">Content to write to XhtmlTextWriter</param>
            <returns>this Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.Tag.AddAttribute(Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute,System.String)">
            <summary>
            Overridden version of AddAttribute
            </summary>
            <param name="attribute">Tag attribute name</param>
            <param name="value">Attribute value</param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.Tag.AddAttribute(Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute,System.String,System.Object[])">
            <summary>
            Overridden version that can also do string.Format of extra parameters
            </summary>
            <param name="attribute">Attribute type</param>
            <param name="value">Attribute content</param>
            <param name="args">arguments which will be "formated" into the content parameter. 
            See String.Format for reference on this</param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.Tag.AddAttribute(System.String,System.String)">
            <summary>
            Overridden version ONLY usable if you have previously called; "DisableValidation" on the tag. Usable in 
            combination with Unmanaged class to make sure you're closing the scope where you do not want validation 
            of the unerlaying XhtmlTextWriter object.
            </summary>
            <param name="name">Name of attribute</param>
            <param name="value">Value of attribute</param>
            <returns>this Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.Tag.AddAttributes(System.Web.UI.AttributeCollection)">
            <summary>
            Overridden version ONLY usable if you have previously called; "DisableValidation" on the tag. 
            Usable in combination with Unmanaged class to make sure you're closing the scope where you do 
            not want validation of the unerlaying XhtmlTextWriter object.
            </summary>
            <param name="attributes">Collection of attributes to add</param>
            <returns>this Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.Tag.CloseTag">
            <summary>
            Just makes sure the "end element" string is written to the underlaying XhtmlTextWriter.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.Tag.WriteNonBreakingSpace">
            <summary>
            Writes a non-breaking-space (&amp;nbsp;) to the XhtmlTextWriter
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gaia.WebWidgets.HtmlFormatting.Tag.ElementTag">
            <summary>
            Returns the Tag enum for the type of element/tag this is
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.HtmlFormatting.Tag.Item(Gaia.WebWidgets.HtmlFormatting.XhtmlAttribute)">
            <summary>
            Indexer for adding attributes with some syntactic sugar.
            </summary>
            <param name="attribute">Attribute type</param>
            <returns></returns>
        </member>
        <member name="T:Gaia.WebWidgets.HtmlFormatting.Unmanaged">
            <summary>
            Helper class for encapsulating a section where you don't want validation on the XhtmlTextWriter. This
            is useful if you *must* break XHTML compliance or add up "unsafe attributes" to a Tag etc. Don't use
            this class unless you REALLY have to since it stops all validation towards XHTML compliance if you do.
            Implements the IDisposable pattern which makes it very easy by using the "using" statement to turn
            it "off" and "on" on a very specific scope.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.Unmanaged.#ctor(Gaia.WebWidgets.HtmlFormatting.Tag)">
            <summary>
            Constructor, will set the underlying XhtmlTextWriter (or tag) in "non-validating" mode.
            Will restore the initial mode after disposal
            </summary>
            <param name="tag">Tag or XhtmlTextWriter to set to "non-validating" mode</param>
        </member>
        <member name="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer">
            <summary>
            Implemented by controls which need to add custom change serialization to the <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.IExtraPropertyCallbackRenderer.InjectPropertyChangesToCallbackResponse(System.Text.StringBuilder)">
            <summary>
            Injects additional script code into the specified <paramref name="code"/> builder.
            </summary>
            <param name="code">An already built StringBuilder which you're supposed to render your data into</param>
            <remarks>
            The injected script code should have the following form: ".foo(bar)", where
            foo should be a method of the client-side Gaia Control object and must return the "this" argument for chaining.
            </remarks>
        </member>
        <member name="T:Gaia.WebWidgets.RequiredFieldValidator">
            <summary>
            Makes the associated input control a required field.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.LoadViewState(System.Object)">
            <summary>Loads the previously saved state for the control.</summary>
            <param name="savedState">An object that contains the saved view state values for the control. </param>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.SaveViewState">
            <summary>
            Saves any state that was modified after the <see cref="M:System.Web.UI.Control.TrackViewState"/> method was invoked.
            </summary>
            <returns>
            An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object and stores tracing information about the control if tracing is enabled.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the control content. </param>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.Gaia#WebWidgets#IAjaxControl#RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Calls base class RenderControl method
            </summary>
            <param name="create">XhtmlTagFactory to use to create XHTML</param>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.Gaia#WebWidgets#IAjaxValidator#DetermineRenderUplevel">
            <summary>
            Determines whether the validation control can perform client-side validation.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.Gaia#WebWidgets#IAjaxValidator#RegisterValidatorDeclaration">
            <summary>
            Registers an ECMAScript array declaration using the array name Page_Validators.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.Gaia#WebWidgets#IAjaxValidator#GetControlRenderId(System.String)">
            <summary>
            Gets the client ID of the control having specified id.
            </summary>
            <param name="controlToValidate">The name of the control to get the client ID from. </param>
            <returns>The client ID of the specified control.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.Gaia#WebWidgets#IAjaxValidator#RenderDesignTime(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the validator to the specified HTML <paramref name="writer"/> during design time.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RequiredFieldValidator.Gaia#WebWidgets#IAjaxValidator#PropertiesValid">
            <summary>
            Gets a value that indicates whether the control specified by the <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate"/> property is a valid control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RequiredFieldValidator.Gaia#WebWidgets#IAjaxValidator#IsEnabled">
            <summary>
            Gets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RequiredFieldValidator.Gaia#WebWidgets#IAjaxValidator#RenderUplevel">
            <summary>
            Gets a value denoting if the client browser supports "upward" rendering.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RequiredFieldValidator.BaseValidator">
            <summary>
            Returns implementation.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RequiredFieldValidator.PropertyStateManagerRequiredFieldValidator">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for <see cref="T:Gaia.WebWidgets.RequiredFieldValidator"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.PropertyStateManagerRequiredFieldValidator.#ctor(Gaia.WebWidgets.RequiredFieldValidator)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerBaseValidator"/> for specified <paramref name="validator"/>.
            </summary>
            <param name="validator">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="validator"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.PropertyStateManagerRequiredFieldValidator.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.RequiredFieldValidator.PropertyStateManagerRequiredFieldValidator.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RequiredFieldValidator.PropertyStateManagerRequiredFieldValidator.RequiresRerendering">
            <summary>
            Returns true if the associated validator needs to be rerendered.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.Manager">
            <summary>
            This is the "Manager" of Gaia Ajax Widgets.
            Basically contains lots of nice to have methods like IsAjaxCallback end so on.
            The Manager is also responsible for rendering the updates back to the HTTP Response
            Class is a Singleton which means you cannot instantiate object of it but you
            can access the only object in existence from the static Instance property of the class.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.ProcessPage(System.String)">
            <summary>
            Post processes <paramref name="pageContent"/> and returns the result to send to the client.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.ProcessNonAjaxCallback">
            <summary>
            Processes <see cref="T:System.Web.HttpResponse"/> when the <see cref="P:Gaia.WebWidgets.Manager.IsAjaxCallback"/> is false.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.ProcessAjaxCallback">
            <summary>
            Processes <see cref="T:System.Web.HttpResponse"/> when the <see cref="P:Gaia.WebWidgets.Manager.IsAjaxCallback"/> is true.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.ProcessScripts(System.Boolean)">
            <summary>
            Processes HTML script tags on the rendered page.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.ProcessScriptSource(System.String,System.Boolean)">
            <summary>
            Processes script tag with src attribute equal to the specified <paramref name="fileName"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.ProcessScriptBlock(System.Text.RegularExpressions.Capture,System.String,System.Boolean)">
            <summary>
            Processes specified <paramref name="blockCapture"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.ProcessArrayRegistrations(System.String,System.Boolean)">
            <summary>
            Processes array registrations inside specified <paramref name="scriptContent"/>.
            </summary>
            <returns>True if specified <paramref name="scriptContent"/> had array registrations and they were processed successfully.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.ProcessExpandoRegistrations(System.String,System.Boolean)">
            <summary>
            Processes expando attribute registrations inside specified <paramref name="scriptContent"/>.
            </summary>
            <returns>True if specified <paramref name="scriptContent"/> had expando attribute registrations and they were processed successfully.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.ProcessExpandoRegistration(System.String,System.Text.StringBuilder,System.Text.StringBuilder,System.Boolean)">
            <summary>
            Processes expando registration of a control having specified <paramref name="blockName"/>.
            </summary>
            <param name="blockName">Name of the control which has expando attributes.</param>
            <param name="blockBuilder">Builder containing expando attribute definitions.</param>
            <param name="builder">Builder containing all expando attribute registrations.</param>
            <param name="isCallback">Defines if the method is called during an ajax callback.</param>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.IsPreviouslyRegisteredKey(System.String)">
            <summary>
            Returns true if the <paramref name="key"/> is contained in the <see cref="P:Gaia.WebWidgets.Manager.PreviousInclusionHashCodes"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.IsUpdatableExpandoControlId(System.String)">
            <summary>
            Return true if the expando attribute registrations for the <paramref name="controlid"/> need to be updated.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.IsUpdatableScriptBlock(System.Text.RegularExpressions.Capture)">
            <summary>
            Return true if the specified <paramref name="blockCapture"/> needs to be updated.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.IsUpdatableArrayRegistrations(System.String)">
            <summary>
            Return true if the array registration with the specified <paramref name="arrayName"/> needs to be updated.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.ExecuteScript(System.String)">
            <summary>
            Executes specified <paramref name="scriptContent"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.CreateArrayDeclarationKey(System.String)">
            <summary>
            Returns key for identifying an array declaration.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.CreateScriptBlockIncludeKey(System.String)">
            <summary>
            Returns a key used for identifying a script block inclusion.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.GetFileInclusionHashCodes">
            <summary>
            Returns concatenated string representation of hash codes of included files.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.AddInclusionOfStyleSheet(System.String)">
            <summary>
            Programatically add a stylesheet to the page.
            </summary>
            <param name="styleSheet">The link to the stylesheet</param>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.AddInclusionOfStyleSheetFromResource(System.Type,System.String)">
            <summary>
            Use this function to include a Stylesheet from an embedded resource. Useful if you include your 
            css files as part of the assembly as an embedded resource. 
            </summary>
            <param name="type"></param>
            <param name="resourceName"></param>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.AddScriptForClientSideEval(System.String)">
            <summary>
            This one basically adds up extra script values you would want to run on the client after 
            the response returns. Note you should be VERY careful when including your own
            stuff into the response since if there's a Syntax Error on the client after returning the 
            Response the application will basically crash!
            </summary>
            <param name="script">JavaScript to execute when the response returns to the client. Note that
            you should NOT add up &lt;script...&gt; elements around it since that will be done
            automatically by the Framework</param>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.AddInclusionOfFile(System.String,System.Type,System.String,System.String)">
            <summary>
            Includes a JavaScript file for inclusion in the page. Works in both normal page 
            processing and Gaia Ajax Callbacks. Gaia can in asynchronous callback include ScriptFiles on the 
            client. This can be a useful construct for reducing the initial bandwidth usage 
            </summary>
            <param name="fileNamePath">Path and name of file to include</param>
            <param name="type">"Unique" type to ensure single inclusion of same file</param>
            <param name="fullName">Name of file to include, normally the same as the fileNamePath 
            unless this is a "resource file inclusion"</param>
            <param name="typeToWaitFor">This should be the LAST "type" or "function" in your JavaScript 
            file, this one is used to make the browser WAIT until that type is not "undefined" before 
            proceeding to ensure we don't get client side bugs due to JavaScript not being finished 
            loading before it's being referenced. Normally this would be a "dummy variable" appended at 
            the end of your JavaScript file</param>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.AddInclusionOfFileFromResource(System.String,System.Type,System.String)">
            <summary>
            Includes a file from a resource full name (complete namespace and name of file)
            </summary>
            <param name="fullName">Full name of the file (namespace and so on)</param>
            <param name="type">A type from the assembly to guard against multiple inclusions</param>
            <param name="typeToWaitFor">This should be the LAST "type" or "function" in your JavaScript 
            file, this one is used to make the browser WAIT until that type is not "undefined" before 
            proceeding to ensure we don't get client side bugs due to JavaScript not being finished 
            loading before it's being referenced. Normally this would be a "dummy variable" appended at 
            the end of your JavaScript file</param>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.AddInclusionOfFileFromResource(System.String,System.Type,System.String,System.Boolean)">
            <summary>
            </summary>
             <param name="fullName">Full name of the file (namespace and so on)</param>
             <param name="type">A type from the assembly to guard against multiple inclusions</param>
             <param name="typeToWaitFor">This should be the LAST "type" or "function" in your JavaScript</param>
             <param name="isPartOfCoreFiles">If the file to be included also exists in the core package of javascript files.
             file, this one is used to make the browser WAIT until that type is not "undefined" before 
             proceeding to ensure we don't get client side bugs due to JavaScript not being finished 
             loading before it's being referenced. Normally this would be a "dummy variable" appended at 
             the end of your JavaScript file</param>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.OnPageUnload(System.Object,System.EventArgs)">
            <summary>
            Called during Unload phase of <see cref="P:Gaia.WebWidgets.Manager.Page"/> lifecycle.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.DisableTracingIfRequired">
            <summary>
            Disables trace if it writes to page.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.RegisterErrorHandler">
            <summary>
            Registers <see cref="P:Gaia.WebWidgets.Manager.ErrorHandler"/>.
            </summary>
            <remarks>
            <see cref="P:Gaia.WebWidgets.Manager.ErrorHandler"/> is registered if it's not null and is not stored.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.RegisterGlobalUpdateControl">
            <summary>
            Registers <see cref="P:Gaia.WebWidgets.Manager.UpdateControl"/>.
            </summary>
            <remarks>
            <see cref="P:Gaia.WebWidgets.Manager.UpdateControl"/> is being registered during every callback and is not stored.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.AddInclusionOfCommonFiles">
            <summary>
            Include the script files required for Gaia to function. If dynamic script loading is enabled we
            include the minimum core set of javascript for Gaia to function. If not, we include a single 
            ScriptFile that includes all the javascript minified for this version. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Manager.AddInclusionOfFile(System.String,System.Type,System.String,System.String,System.Boolean)">
            <summary>
            Includes a JavaScript file for inclusion in the page. Works in both normal page 
            processing and Gaia Ajax Callbacks. Gaia can in asynchronous callback include ScriptFiles on the 
            client. This can be a useful construct for reducing the initial bandwidth usage. 
            If GaiaAjaxConfiguration.Instance.EnableDynamicScriptLoading is turned off most of the core files
            will be included in a single ScriptFile included. This is also quite useful. 
            </summary>
            <param name="fileNamePath">Path and name of file to include</param>
            <param name="type">"Unique" type to ensure single inclusion of same file</param>
            <param name="fullName">Name of file to include, normally the same as the fileNamePath 
            unless this is a "resource file inclusion"</param>
            <param name="typeToWaitFor">This should be the LAST "type" or "function" in your JavaScript</param>
            <param name="isPartOfCoreFiles">If the file to be included also exists in the core package of javascript files.
            file, this one is used to make the browser WAIT until that type is not "undefined" before 
            proceeding to ensure we don't get client side bugs due to JavaScript not being finished 
            loading before it's being referenced. Normally this would be a "dummy variable" appended at 
            the end of your JavaScript file</param>
            
        </member>
        <member name="M:Gaia.WebWidgets.Manager.AddInclusionOfExtensionsScriptFiles(System.Type)">
            <summary>
            Used by the Extensions project to include the Concatenated ScriptFiles for the Extensions. 
            </summary>
            <param name="type">The type</param>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.ClientScript">
            <summary>
            Returns <see cref="T:Gaia.WebWidgets.ClientScriptManager"/> object used for handling <see cref="T:System.Web.UI.ClientScriptManager"/> during Ajax callbacks.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.RegisteredScriptHashes">
            <summary>
            Returns list of hashes of registered scripts.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.Instance">
            <summary>
            Returns the "one and only" instance object of this type for this thread. Singleton accessor property.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.IsAjaxCallback">
            <summary>
            Returns true if the request is a Gaia Ajax Request
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.SkipJavaScriptFilesInclusion">
            <summary>
            See <see cref="P:Gaia.WebWidgets.GaiaAjaxConfiguration.EnableJavaScriptInclusion"/> for documentation on this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.Page">
            <summary>
            Returns the Page that the request was for
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.UpdateControl">
            <summary>
            The Update Control to use for all your Ajax Requests.
            The Update Control will only be visible while there's an active Ajax Callback in action, at 
            any other times the whole control will be IN-visible and will not interfeer with the page at all. 
            Normally you'd use only a Panel with some text or a couple of Labels as the Update Control to 
            your page. The Update Control MUST be a control which exists in the Page Controls collection.
            If you override the UpdateControl for specific widgets by e.g. using the AspectUpdateControl
            then for that control this logic will be overridden.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.ErrorHandler">
            <summary>
            The ErrorHandler is a JavaScript function you declare yourself on the page that will be called with
            3 parameters, the first being the STATUS from the server, e.g. 500 or 404 etc.
            The second one will be the string message from the server and the third one
            will be the complete response (HTTP "body") of the response.
            IF there is a connection problem (the server was unavailable) the second parameter will
            be; "CONNECTION_PROBLEM" and the first parameter will be; -1.
            If you throw an exception yourself the first will be 500 and the second will be the Exception Message, 
            the third will be the complete response from the server.
            If you return true from your error handler the execution of the page will HALT and the entire Ajax
            Engine will STOP and not continue raising events and requests to the server, if you return false, 
            null or nothing the execution of the Ajax Engine on the page will continue.
            If you want to silently catch all exceptions and errors you can define your own ErrorHandler that 
            does nothing and just returns nothing, null or false.
            </summary>
            <example>
            <code title="Defining a custom Error Handler (ASPX)" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Core\Manager\CustomErrors\Default.aspx" />
            </code> 
            <code title="Defining a custom Error Handler (Codebehind)" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Core\Manager\CustomErrors\Default.aspx.cs" region="Code" />
            </code> 
            </example>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.CallbackUrl">
            <summary>
            This can override the Callback URL which your page will call when Gaia Ajax Requests are being created.
            Often this might be useful due to HttpHandlers or Url Rewriting Modules or similar overrides the URL 
            of your page and it can sometimes stop working due to this. If this is the case you often have the 
            possibility of retrieving those "rewritten" URLs and explicitly set the URL to postback to here.
            This is often useful if using Gaia in combination with e.g. CMS systems or application systems like
            SharePoint, DotNetNuke or EPIServer.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.HasVisibleGaiaControl">
            <summary>
            Helper getter (and setter for extension control developers) to determine if there 
            are visible Gaia controls on the page.
            Should be change in or after PreRender event
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.Writer">
            <summary>
            This is the actual stream written out when the request is a Gaia Ajax Request and NOT the 
            Page.Response.Writer! If you need to add custom stuff into the response then THIS is the 
            TextWriter you should use! Note you'd probably want to use the AddScriptForClientSideEval 
            method instead of this one directly. Note also that no matter which one of those you use 
            you should be VERY careful when including your own stuff into the response since if 
            there's a Syntax Error on the client after returning the Response the application will 
            basically crash!
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Manager.ShouldApplyResponseFilter">
            <summary>
            Returns whether <see cref="P:System.Web.HttpResponse.Filter"/> should be chained.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectKey">
            <summary>
            Aspect class for making elements trap the key clicking events.
            Element you attach this Aspect will raise the KeyPressed Event when a key is clicked while widget
            have focus.
            <br />
            Making key shortcuts available for your end users can increase 
            the productivity typical of repeating operations. Currently the key events listen on any Gaia input control like TextBox, 
            DropDownList that currently have focus. 
            </summary>
            <example>
            <code title="ASPX Markup for AspectKey Example" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectKey\Overview\Default.aspx"  />
            </code> 
            <code title="Using AspectKey to trap individual keys" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectKey\Overview\Default.aspx.cs" />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.SetKeyListeners(Gaia.WebWidgets.AspectKey.KeyCode[])">
            <summary>
            If you only want AspectKey to dispatch events on specific keys, you can specift them as an array here. 
            </summary>
            <param name="keyCodes">The KeyCodes to listen to</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.SetKeyListeners(System.Char[])">
            <summary>
            If you only want AspectKey to dispatch events based on specific characters typed in. 
            </summary>
            <param name="chars">The Chars to listen to</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.SetKeyListeners(Gaia.WebWidgets.AspectKey.KeyCode[],System.Char[])">
            <summary>
            Here you can set a combination of KeyCodes and Chars to listen to. It will only trigger server events when
            a valid char or keycode is trapped. 
            </summary>
            <param name="keyCodes">The keycodes to listen to</param>
            <param name="chars">The chars to listen to</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.AddFilter(Gaia.WebWidgets.AspectKey.IFilter[])">
            <summary>
            Adds speficied <see cref="T:Gaia.WebWidgets.AspectKey.IFilter"/>
            </summary>
            <param name="filters"><see cref="T:Gaia.WebWidgets.AspectKey.IFilter"/> to add</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.#ctor(System.EventHandler{Gaia.WebWidgets.AspectKey.KeyPressedEventArgs})">
            <summary>
            Constructor taking event handler for the KeyPressed event
            </summary>
            <param name="keyPressed">delegate called when key is clicked</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectKey.SuppressEventPropagation">
            <summary>
            If it is set to True the event propagation will stop.
            Otherwise key event will propagate to the parent(s).
            Default value is False.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectKey.SuppressDefaultAction">
            <summary>
            If it is set to True the default actions
            will be stopped. Default value is False.
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectKey.KeyPressed">
            <summary>
            Listen to the actual keypress
            The events are done in the sequence: keydown, keypress, keyup
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectKey.KeyUp">
            <summary>
            Listen to the keyup event occuring after the key is released
            The events are done in the sequence: keydown, keypress, keyup
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectKey.KeyDown">
            <summary>
            Listen to the keydown event occuring immediately when a key is pushed.
            The events are done in the sequence: keydown, keypress, keyup
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectKey.KeyCode">
            <summary>
            Common KeyCodes. 
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.UNDEFINED">
            <summary>
            Undefined is an enum for a not defined KeyCode. Only the most common ones are included here
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.BACKSPACE">
            <summary>
            Backspace
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.TAB">
            <summary>
            Tab
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.RETURN">
            <summary>
            Return/Enter Key
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.ESC">
            <summary>
            Esc
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.SPACE">
            <summary>
            Space
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.LEFT">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.UP">
            <summary>
            Up
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.RIGHT">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.DOWN">
            <summary>
            Down
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.DELETE">
            <summary>
            Delete
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.HOME">
            <summary>
            Home
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.END">
            <summary>
            End
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.PAGEUP">
            <summary>
            Page Up
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.PAGEDOWN">
            <summary>
            Page Down
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.INSERT">
            <summary>
            Insert
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.SCROLL">
            <summary>
            Scroll
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.CAPSLOCK">
            <summary>
            Capslock
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.NUMLOCK">
            <summary>
            Numlock
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.PAUSE">
            <summary>
            Pause
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F1">
            <summary>
            F1
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F2">
            <summary>
            F2
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F3">
            <summary>
            F3
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F4">
            <summary>
            F4
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F5">
            <summary>
            F5
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F6">
            <summary>
            F6
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F7">
            <summary>
            F7
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F8">
            <summary>
            F8
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F9">
            <summary>
            F9
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F10">
            <summary>
            F10
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F11">
            <summary>
            F11
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F12">
            <summary>
            F12
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F13">
            <summary>
            F13
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F14">
            <summary>
            F14
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F15">
            <summary>
             F15
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F16">
            <summary>
             F16
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F17">
            <summary>
             F17
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F18">
            <summary>
             F18
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F19">
            <summary>
             F19
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F20">
            <summary>
             F20
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F21">
            <summary>
             F21
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F22">
            <summary>
             F22
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F23">
            <summary>
             F23
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F24">
            <summary>
            F24
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.SLASH">
            <summary>
            Slash /
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.HYPHEN">
            <summary>
            Hyhpen -
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.ADD">
            <summary>
            ADD (+)
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.CONTROL">
            <summary>
            CONTROL
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.ALT">
            <summary>
            ALT
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.SHIFT">
            <summary>
            SHIFT
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.PRINTSCREEN">
            <summary>
            PrintScreen
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.D0">
            <summary>
            0
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.D1">
            <summary>
            1
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.D2">
            <summary>
            2
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.D3">
            <summary>
            3
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.D4">
            <summary>
            4
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.D5">
            <summary>
            5
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.D6">
            <summary>
            6
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.D7">
            <summary>
            7
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.D8">
            <summary>
            8
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.D9">
            <summary>
            9
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.NUMPAD0">
            <summary>
            Numpad 0
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.NUMPAD1">
            <summary>
            Numpad 1
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.NUMPAD2">
            <summary>
            Numpad 2
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.NUMPAD3">
            <summary>
            Numpad 3
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.NUMPAD4">
            <summary>
            Numpad 4
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.NUMPAD5">
            <summary>
            Numpad 5
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.NUMPAD6">
            <summary>
            Numpad 6
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.NUMPAD7">
            <summary>
            Numpad 7
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.NUMPAD8">
            <summary>
            Numpad 8
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.NUMPAD9">
            <summary>
            Numpad 9
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.A">
            <summary>
            A
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.B">
            <summary>
            B
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.C">
            <summary>
            C
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.D">
            <summary>
            D
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.E">
            <summary>
            E
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.F">
            <summary>
            F
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.G">
            <summary>
            G
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.H">
            <summary>
            H
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.I">
            <summary>
            I
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.J">
            <summary>
            J
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.K">
            <summary>
            K
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.L">
            <summary>
            L
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.M">
            <summary>
            M
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.N">
            <summary>
            N
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.O">
            <summary>
            O
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.P">
            <summary>
            P
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.Q">
            <summary>
            Q
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.R">
            <summary>
            R
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.S">
            <summary>
            S
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.T">
            <summary>
            T
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.U">
            <summary>
            U
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.V">
            <summary>
            V
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.W">
            <summary>
            W
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectKey.KeyCode.Z">
            <summary>
             Z
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectKey.Key">
            <summary>
            Represents a Key with its modifiers (shift, control, etc...)
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectKey.Key.KeyValue">
            <summary>
            Key value
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectKey.Key.KeyCode">
            <summary>
            If a common Key was pressed ( Enter, Esc, UpArrow, etc ) you can retrieve the value as an enum here
            If any other character was pressed you can retrieve the character from the Key property. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectKey.Key.ShiftKey">
            <summary>
            True if Shift Key was pressed
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectKey.Key.CtrlKey">
            <summary>
            True if Control Key was pressed
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectKey.Key.AltKey">
            <summary>
            True if Alt Key was pressed
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectKey.IFilter">
            <summary>
            Key filter interface
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectKey.IFilter.RegistrationText">
            <summary>
            Filter registration javascript code
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectKey.KeySuppressionFilter">
            <summary>
            Base class for all filters which support key event suppression.
            Suppression may include default action and/or event propogation preventions.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectKey.KeyFilter">
            <summary>
            Key code filters used with KeyUp and/or KeyDown events.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.KeyFilter.#ctor(Gaia.WebWidgets.AspectKey.KeyCode)">
            <summary>
            Constructor for keycode filter.
            </summary>
            <param name="key">Allowed <see cref="T:Gaia.WebWidgets.AspectKey.KeyCode"/></param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.KeyFilter.#ctor(Gaia.WebWidgets.AspectKey.KeyCode,System.Boolean)">
            <summary>
            Constructor for keycode filter.
            </summary>
            <param name="key">Allowed <see cref="T:Gaia.WebWidgets.AspectKey.KeyCode"/></param>
            <param name="shiftKey">True if shift key should also be up/down; otherwise false.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.KeyFilter.#ctor(Gaia.WebWidgets.AspectKey.KeyCode,System.Boolean,System.Boolean)">
            <summary>
            Constructor for keycode filter.
            </summary>
            <param name="key">Allowed <see cref="T:Gaia.WebWidgets.AspectKey.KeyCode"/></param>
            <param name="shiftKey">True if shift key should also be up/down; otherwise false.</param>
            <param name="ctrlKey">True if control key should also be up/down; otherwise false.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.KeyFilter.#ctor(Gaia.WebWidgets.AspectKey.KeyCode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor for keycode filter.
            </summary>
            <param name="key">Allowed <see cref="T:Gaia.WebWidgets.AspectKey.KeyCode"/></param>
            <param name="shiftKey">True if shift key should also be up/down; otherwise false.</param>
            <param name="ctrlKey">True if control key should also be also up/down; otherwise false.</param>
            <param name="altKey">True if alt key should also be up/down; otherwise false.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.KeyFilter.#ctor(Gaia.WebWidgets.AspectKey.KeyCode,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor for keycode filter.
            </summary>
            <param name="key">Allowed <see cref="T:Gaia.WebWidgets.AspectKey.KeyCode"/></param>
            <param name="shiftKey">True if shift key should also be up/down; otherwise false.</param>
            <param name="ctrlKey">True if control key should also be also up/down; otherwise false.</param>
            <param name="altKey">True if alt key should also be up/down; otherwise false.</param>
            <param name="suppressDefaultAction">True if default action on key up/down should be prevented; otherwise, false.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.KeyFilter.#ctor(Gaia.WebWidgets.AspectKey.KeyCode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor for keycode filter.
            </summary>
            <param name="key">Allowed <see cref="T:Gaia.WebWidgets.AspectKey.KeyCode"/></param>
            <param name="shiftKey">True if shift key should also be up/down; otherwise false.</param>
            <param name="ctrlKey">True if control key should also be also up/down; otherwise false.</param>
            <param name="altKey">True if alt key should also be up/down; otherwise false.</param>
            <param name="suppressDefaultAction">True if default action on key up/down should be prevented; otherwise, false.</param>
            <param name="suppressEventPropagation">True if event propagaton on key up/down should be stopped; otherwise; false.</param>
        </member>
        <member name="T:Gaia.WebWidgets.AspectKey.KeyPressFilter">
            <summary>
            Character filter used with KeyPress event.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.KeyPressFilter.#ctor(System.Char)">
            <summary>
            Constructor for character filter.
            </summary>
            <param name="character">Allowed character.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.KeyPressFilter.#ctor(System.Char,System.Boolean)">
            <summary>
            Constructor for character filter.
            </summary>
            <param name="character">Allowed character.</param>
            <param name="suppressDefaultAction">True if default action on key up/down should be prevented; otherwise, false.</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectKey.KeyPressFilter.#ctor(System.Char,System.Boolean,System.Boolean)">
            <summary>
            Constructor for character filter.
            </summary>
            <param name="character">Allowed character.</param>
            <param name="suppressDefaultAction">True if default action on key up/down should be prevented; otherwise, false.</param>
            <param name="suppressEventPropagation">True if event propagaton on key up/down should be stopped; otherwise; false.</param>
        </member>
        <member name="T:Gaia.WebWidgets.AspectKey.KeyEventArgs">
            <summary>
            EventArgs for the KeyDown and KeyUp Events.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectKey.KeyEventArgs.Key">
            <summary>
            Key pressed
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectKey.KeyPressedEventArgs">
            <summary>
            EventArgs for the KeyPressed Event.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectKey.KeyPressedEventArgs.Key">
            <summary>
            Key pressed as char
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriter">
            <summary>
            Class wrapping a TextWriter (e.g. HtmlTextWriter which is given during Render method of 
            System.Web.UI.WebControl.Control) for helping creating XHTML valid markup. It uses the 
            "using pattern" or the "IDisposable pattern" to make sure the HTML tags are opened and 
            closed at the correct place. Very useful in combination with XhtmlTagFactory to very easily
            create markup yourself either for your own Gaia Extension Controls or for any other places 
            where you need XHTML valid HTML markup and you want to create it with as few lines of code 
            as possible.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Constructor, normally you would pass in your HtmlTextWriter here and then use the XhtmlTextWriter
            for easy creation of XHTML markup later.
            </summary>
            <param name="writer">Underlaying writer to write into</param>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriter.op_Implicit(Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriter)~System.IO.TextWriter">
            <summary>
            Casts the instance object to a TextWriter object, use when calling base and you need to "pass in" 
            the (Html)TextWriter object to base class implementation. It ensures that the writer is "flushed" 
            before casting which is neccessary due to otherwise the stream might be "in the middle" of a element 
            string (not added the ending > bracket)
            </summary>
            <param name="rhs">XhtmlTextWriter to cast</param>
            <returns>Underlaying TextWriter (or HtmlTextWriter in fact normally)</returns>
        </member>
        <member name="T:Gaia.WebWidgets.IAjaxRadioCheckListControl">
            <summary>
            Defines members common for <see cref="T:Gaia.WebWidgets.RadioButtonList"/> and <see cref="T:Gaia.WebWidgets.CheckBoxList"/> controls.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxRadioCheckListControl.RepeatDirection">
            <summary>
            Gets the direction in which the radio buttons within the group are displayed.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxRadioCheckListControl.RepeatLayout">
            <summary>
            Gets a value that specifies whether the list will be rendered by using a table element, a ul element, an ol element, or a span element.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxRadioCheckListControl.RepeatColumns">
            <summary>
            Gets the number of columns to display in the control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IAjaxRadioCheckListControl.TextAlign">
            <summary>
            Gets the text alignment for the items within the group.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.HttpResponseFilter">
            <summary>
            Specialized <see cref="T:System.IO.Stream"/> used in the <see cref="P:System.Web.HttpResponse.Filter"/> chain.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HttpResponseFilter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.HttpResponse"/> class. 
            </summary>
            <param name="sink">Chained <see cref="T:System.IO.Stream"/> to wrap.</param>
        </member>
        <member name="M:Gaia.WebWidgets.HttpResponseFilter.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gaia.WebWidgets.HttpResponseFilter.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <returns>The new position within the current stream.</returns>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support seeking, such as if the stream is constructed from a pipe or console output.
            </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception><filterpriority>1</filterpriority>
        </member>
        <member name="M:Gaia.WebWidgets.HttpResponseFilter.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. 
            </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gaia.WebWidgets.HttpResponseFilter.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <param name="buffer">
            An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source. 
            </param>
            <param name="offset">
            The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream. 
            </param><param name="count">The maximum number of bytes to be read from the current stream.</param>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is larger than the buffer length. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> or <paramref name="count"/> is negative.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support reading.</exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gaia.WebWidgets.HttpResponseFilter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ArgumentException">The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> or <paramref name="count"/> is negative.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing.</exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gaia.WebWidgets.HttpResponseFilter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">
            true to release both managed and unmanaged resources; false to release only unmanaged resources.
            </param>
        </member>
        <member name="P:Gaia.WebWidgets.HttpResponseFilter.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>
            true if the stream supports reading; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gaia.WebWidgets.HttpResponseFilter.CanSeek">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>
            true if the stream supports seeking; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gaia.WebWidgets.HttpResponseFilter.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>
            true if the stream supports writing; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gaia.WebWidgets.HttpResponseFilter.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <returns>
            A long value representing the length of the stream in bytes.
            </returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking.</exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gaia.WebWidgets.HttpResponseFilter.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <returns>
            The current position within the stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking.</exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Gaia.WebWidgets.ImageMap">
            <summary>
            The Gaia Ajax Image displays an image on a page. When a hot spot region defined within the ImageMap control is clicked,
            the control either generates an Ajax callback (postback) to the server or navigates to a specified URL. It inherits from
            the <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.imagemap.aspx"> ASP.NET ImageMap</a>, and has built-in Ajax behaviour.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="E:Gaia.WebWidgets.ImageMap.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.ImageMap.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ImageMap.ImageUrl">
            <summary>
            Gets or sets the image URL for the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ImageMap.AlternateText">
            <summary>
            Sets the ALT taxt for the image
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ImageMap.DescriptionUrl">
            <summary>Gets or sets the location to a detailed description for the image.</summary>
            <value>
            The URL for the file that contains a detailed description for the image.
            The default is an empty string ("").
            </value>   
        </member>
        <member name="P:Gaia.WebWidgets.ImageMap.ImageAlign">
            <summary>
             Gets or sets the alignment of the System.Web.UI.WebControls.Image control
             in relation to other elements on the Web page.
            </summary>
            <value>One of the System.Web.UI.WebControls.ImageAlign values. The default is NotSet.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The specified value is not one of the System.Web.UI.WebControls.ImageAlign values.
            </exception>
        </member>
        <member name="P:Gaia.WebWidgets.ImageMap.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ImageMap.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.ImageMap"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap.#ctor(Gaia.WebWidgets.ImageMap)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap.#ctor(Gaia.WebWidgets.ImageMap,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap.HotSpotState">
            <summary>
            Keeps state of the <see cref="T:System.Web.UI.WebControls.HotSpot"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap.HotSpotState.#ctor(System.String)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap.HotSpotState"/> with the specified <paramref name="coordinates"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap.HotSpotState.GetCoordinates">
            <summary>
            When overridden in a derived class, returns a string that represents the coordinates of the <see cref="T:System.Web.UI.WebControls.HotSpot"/> region.
            </summary>
            <returns>
            A string that represents the coordinates of the <see cref="T:System.Web.UI.WebControls.HotSpot"/> region.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap.HotSpotState.MarkupName">
            <summary>
            When overridden in a derived class, gets the string representation for the <see cref="T:System.Web.UI.WebControls.HotSpot"/> object's shape.
            </summary>
            <returns>
            A string that represents the name of the <see cref="T:System.Web.UI.WebControls.HotSpot"/> object's shape.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.ImageMap.PropertyStateManagerImageMap.HotSpotState.Shape">
            <summary>
            Gets or sets the shape of the <see cref="T:System.Web.UI.WebControls.HotSpot"/>.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.DropDownList">
            <summary>
            The Gaia Ajax DropDownlist represents a control that allows the user to select a single item from a drop-down list. It inherits
            from the ASP.NET Button, and has built-in Ajax behaviour. </summary>
            <example>
            <code title="ASPX Markup for DropDownList" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\DropDownList\Overview\Default.aspx" />
            </code> 
            <code title="Codebehind for DropDownList" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\DropDownList\Overview\Default.aspx.cs" region="Code" />
            </code> 
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.ExecuteLoadPostData(Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate,System.String,System.Collections.Specialized.NameValueCollection,Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate)"/> method for documentation. This method only forwards to that method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.OnPreRender(System.EventArgs)">
            <summary>
            See also <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DropDownList.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="E:Gaia.WebWidgets.DropDownList.Blur">
            <summary>
            Event is triggered when the control looses focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.DropDownList.Focused">
            <summary>
            Event is triggered when the control gets focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.DropDownList.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.DropDownList.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DropDownList.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DropDownList.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RegisterControl">
            <summary>
            Renders a clientside representation of the control with construction, options/parameters, event 
            observations and rendering of aspects. It has a nice syntax and allow you to do chaining of 
            function calls. Use this one if you create your own Ajax Extension Controls.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RegisterObject`1">
            <summary>
            Core Abstract Builder class for clientside object construction. Offers a nice 
            convenient syntax for initializing clientside objects like controls, aspects and effects
            </summary>
            <typeparam name="T">The Concrete Implementation of the Register class</typeparam>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.#ctor(System.String,System.String)">
            <summary>
            Constructor. Takes the objecttype to construct based on it's objectid
            </summary>
            <param name="objectType">ObjectType (ie. Gaia.Window, Effect.Show)</param>
            <param name="objectId">ObjectID for the client-side construction</param>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddProperty(System.String,System.String,System.Boolean)">
            <summary>
            Add a property to the RegisterObject script. This will render key/value pairs with or withour quotes
            around the value depending on wheter you set the third parameter to true.
            </summary>
            <param name="key">Property Key</param>
            <param name="value">Property Value</param>
            <param name="addQuotes">If true adds quotes '' around the value</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddProperty(System.String)">
            <summary>
            Add a property with value representation only. This will be rendered as {value here} in the script
            </summary>
            <param name="value">Property Value</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddProperty(System.String,System.String)">
            <summary>
            Add a property to the RegisterObject script. This will be rendered as key:'value' in the script.
            If you want to remove the quotes '' around the value, please use the overload and set addQuotes to false
            </summary>
            <param name="key">Property Key</param>
            <param name="value">Property Value</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddProperty(System.String,System.Boolean)">
            <summary>
            Add a property to the RegisterObject and convert bool true to the string representation of "true" or "false"
            </summary>
            <param name="key">Property Key</param>
            <param name="value">Property Value</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddProperty(System.String,System.Int32,System.Boolean)">
            <summary>
            Add a property to the RegisterObject script and append quotes '' around the value parameter being an integer
            if specified through the addQuotes parameter
            </summary>
            <param name="key">Property key</param>
            <param name="value">Property value</param>
            <param name="addQuotes">Wheter to add quotes '' around the value</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddProperty(System.String,System.Int32)">
            <summary>
            Add a property to the RegisterObject script and append quotes '' around the value parameter being an integer
            </summary>
            <param name="key">Property key</param>
            <param name="value">Property value</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddProperty(System.String,System.Decimal)">
            <summary>
            Add a property to the RegisterObject and converts decimal into a format that can be interpreted on the client
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddPropertyIfTrue(System.Boolean,System.String,System.String)">
            <summary>
            Add a property to the RegisterObject script if the first parameter evaluates to true. 
            If not the property is omitted alltogheter. 
            </summary>
            <param name="eval">The evaluation</param>
            <param name="key">Property key</param>
            <param name="value">Property Value</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddPropertyIfTrue(System.Boolean,System.String,System.Boolean)">
            <summary>
            Add a property to the RegisterObject script if the first parameter evaluates to true. 
            If not the property is omitted alltogheter. The bool value parameter is translated
            into "true" or "false"
            </summary>
            <param name="eval">The evaluation</param>
            <param name="key">Property key</param>
            <param name="value">Property Value</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddPropertyIfTrue(System.Boolean,System.String,System.Int32)">
            <summary>
            Add a property to the RegisterObject script if the first parameter evaluates to true. 
            If not the property is omitted alltogheter.
            </summary>
            <param name="eval">The evaluation</param>
            <param name="key">Property key</param>
            <param name="value">Property Value</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddPropertyIfTrue(System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Add a property to the RegisterObject script if the first parameter evaluates to true. 
            If not the property is omitted alltogheter.
            </summary>
            <param name="eval">The evaluation</param>
            <param name="key">Property key</param>
            <param name="value">Property Value</param>
            <param name="addQuotes">Specify if you want to append quotes to the value</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterObject`1.AddPropertyIfTrue(System.Boolean,System.String,System.Decimal)">
            <summary>
            Add a property to the RegisterObject script if the first parameter evaluates to true. 
            If not the property is omitted alltogheter.
            </summary>
            <param name="eval">The evaluation</param>
            <param name="key">Property key</param>
            <param name="value">Property Value</param>
            <returns>itself</returns>
        </member>
        <member name="P:Gaia.WebWidgets.RegisterObject`1.ObjectID">
            <summary>
            Used in derived classes to get or set object id.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegisterObject`1.ObjectType">
            <summary>
            Used in derived classes to get or set object type.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegisterObject`1.Properties">
            <summary>
            Used in derived classes to get object properties.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.#ctor(System.String,System.String)">
            <summary>
            Constructor. Takes the control-type to construct and it's clientside id. 
            </summary>
            <param name="controltype">controltype (ie. Gaia.Window, Gaia.Button)</param>
            <param name="clientid">ClientID for the client-side construction</param>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.#ctor">
            <summary>
            Constructor. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.Observe(System.String,System.Object[])">
            <summary>
            Add .observe() function call to the RegisterControl script. 
            </summary>
            <param name="observeEvent">The event to be observed</param>
            <param name="args">optional parameteres to the observe function call</param>
            <returns>this</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.Invoke(System.String,System.Boolean,System.Object[])">
            <summary>
            Generates a function call invokation like ie ( .setAutoPostBack('true') );
            If you specify addQuotes = false, then the invokation will look like ( .setAutoPostBack(true) );
            </summary>
            <param name="function">Function name to invoke</param>
            <param name="args">the arguments passed to the function</param>
            <param name="addQuotes">If you want to remove the quotes around the parameter </param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.Invoke(System.String,System.Object[])">
            <summary>
            Generates a function call invokation like ie ( .setAutoPostBack('true') );
            If you want to remove the quotes, please use the overload with addQuotes to false instead
            </summary>
            <param name="function">Function name to invoke</param>
            <param name="args">the arguments passed to the function</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.InvokeIf(System.Boolean,System.String,System.Boolean,System.Object[])">
            <summary>
            Generates a function call invokation like ie ( .setAutoPostBack('true') );
            You can ommit the quotes by specifying addquotes = false. Also the function argument
            is only returned if the first eval parameter evaluates to true. 
            </summary>
            <param name="eval">Boolean Evaluation</param>
            <param name="function">Function name to invoke</param>
            <param name="addQuotes">Wheter to add quotes around the parameters</param>
            <param name="args">the arguments passed to the function</param>
            <returns>itself</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.Observe(Gaia.WebWidgets.RegisterControl.ObserveEvent,System.Object[])">
            <summary>
            Add .observe() function call to the RegisterControl script. 
            </summary>
            <param name="evt">The event to be observed</param>
            <param name="args">optional parameteres to the observe function call</param>
            <returns>this</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.AddAspects(Gaia.WebWidgets.AspectCollection)">
            <summary>
            Add Aspect Collection to the RegisterControl script
            </summary>
            <param name="aspects">List of Aspects</param>
            <returns>this</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.AddEffects(Gaia.WebWidgets.EffectCollection)">
            <summary>
            Will add effects that will be rendered as properties to the control. 
            </summary>
            <param name="effects"></param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.ToString">
            <summary>
            Render the RegisterControl script that is to be sent to the client 
            </summary>
            <returns>RegisterControl script</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.AddFocus(Gaia.WebWidgets.AjaxControl)">
            <summary>
            Adds focus registration script and returns registration object.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.AddValidation(System.Boolean,System.String)">
            <summary>
            Adds validation registration script and returns registration object.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.AddPostBackOptions(System.Web.UI.Control,System.Web.UI.PostBackOptions)">
            <summary>
            Adds validation registration script and returns registration object.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterControl.ObserveClick(System.Boolean)">
            <summary>
            Observe the "click" event and enables or stops bubbling based on the <paramref name="enableBubbling"/> parameter.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegisterControl.ClientId">
            <summary>
            ClientID of the control to construct
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegisterControl.ControlType">
            <summary>
            Type of Control to construct
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RegisterControl.ObserveEvent">
            <summary>
            Event Enumerations for the Observe function. 
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.RegisterControl.ObserveEvent.Click">
            <summary>
            Click Event
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.RegisterControl.ObserveEvent.Change">
            <summary>
            Change Event
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ButtonControlWriter`1">
            <summary>
            Specialized <see cref="T:System.Web.UI.HtmlTextWriter"/> for Button controls
            which removes postback references from the onclick attribute.
            </summary>
            <typeparam name="T">Button control type.</typeparam>
        </member>
        <member name="M:Gaia.WebWidgets.ButtonControlWriter`1.#ctor(System.IO.TextWriter,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.ButtonControlWriter`1"/> class that uses a default tab string.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> instance that renders the markup content.</param>
            <param name="owner">Owner button control.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ButtonControlWriter`1.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
            <summary>
            Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter"/> object 
            creates with a subsequent call to the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)"/> method.
            </summary>
            <param name="key">
            An <see cref="T:System.Web.UI.HtmlTextWriterAttribute"/> that represents the markup attribute to add to the output stream. 
            </param>
            <param name="value">A string containing the value to assign to the attribute.</param>
        </member>
        <member name="T:Gaia.WebWidgets.AjaxSerializableUrlAttribute">
            <summary>
            Apply attribute to the property the value of which needs to be formatted as an Url.
            The value will be formatted using Control.ResolveClientUrl method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxSerializableUrlAttribute.#ctor(System.String)">
            <summary>
            The constructor for the AjaxSerializableUrlAttribute.
            Uses Control.ResolveClientUrl method to process the value.
            </summary>
            <param name="jsMethodName">The name of the JS client-side method that implements the property setter</param>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxSerializableUrlAttribute.FormatValue(System.Web.UI.Control,System.Object)">
            <summary>
            Called by the Gaia framework to format the provided value of the property of the provided control.
            </summary>
            <param name="control">Property owner</param>
            <param name="value">Value of the property to format.</param>
            <returns>The formatted value of the control's property.</returns>
        </member>
        <member name="P:Gaia.WebWidgets.AjaxSerializableUrlAttribute.OptimizeValue">
            <summary>
            Returns true if the property value should be optimized.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AjaxEffectEventFactory">
            <summary>
            The AjaxEffectEvent factory is used to create common Effect events where mostly
            the functionName and the afterFinish parameter is in use. This allows you to 
            more easily create required Effect Events. 
            </summary>
            <example>
            <code title="Using AjaxEffectEventFactory" lang="C#">
            <code source="..\Gaia.WebWidgets.Extensions\Widgets\TreeViewItem.cs" region="[ -- Effect Events -- ]" />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxEffectEventFactory.Create(System.String)">
            <summary>
             Creates a simple EffectEvent with only a function name for the event. For example "gaiaminimizing"
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AjaxEffectEventFactory.CreateWithAfterFinishParameter(System.String)">
            <summary>
            Creates an EffectEvent handler with automatic afterFinish as parameter to the 
            event arguments. Useful for some Events which require custom code after the
            effect is finished. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RadioButtonList">
            <summary>
            Represents an Ajax enabled list control that encapsulates a group of radio button controls.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.ExecuteLoadPostData(Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate,System.String,System.Collections.Specialized.NameValueCollection,Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate)"/> method for documentation. This method only forwards to that method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="E:Gaia.WebWidgets.RadioButtonList.Blur">
            <summary>
            Event is triggered when the control looses focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.RadioButtonList.Focused">
            <summary>
            Event is triggered when the control gets focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.RadioButtonList.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.RadioButtonList.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RadioButtonList.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RadioButtonList.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RadioButtonList.PropertyStateManagerRadioButtonList">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.RadioButtonList"/> control.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.PropertyStateManagerRadioCheckList`1">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerListControl"/> for the <see cref="T:Gaia.WebWidgets.RadioButtonList"/> and <see cref="T:Gaia.WebWidgets.CheckBoxList"/> controls.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerRadioCheckList`1.#ctor(`0)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerRadioCheckList`1"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerRadioCheckList`1.#ctor(`0,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerRadioCheckList`1"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerRadioCheckList`1.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerRadioCheckList`1.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.PropertyStateManagerRadioCheckList`1.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerRadioCheckList`1.RemoveDisabled">
            <summary>
            Returns true if the <see cref="T:System.Web.UI.WebControls.ListItem"/> in the <see cref="P:System.Web.UI.WebControls.ListControl.Items"/> collection
            should be removed from client if <see cref="P:System.Web.UI.WebControls.ListItem.Enabled"/> is false.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.PropertyStateManagerRadioCheckList`1.Gaia#WebWidgets#IMayRequireRerendering#RequiresRerendering">
            <summary>
            Returns true if associated <see cref="T:System.Web.UI.Control"/> needs to be rerendered.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.PropertyStateManagerRadioButtonList.#ctor(Gaia.WebWidgets.RadioButtonList)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.RadioButtonList.PropertyStateManagerRadioButtonList"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButtonList.PropertyStateManagerRadioButtonList.#ctor(Gaia.WebWidgets.RadioButtonList,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.RadioButtonList.PropertyStateManagerRadioButtonList"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="T:Gaia.WebWidgets.HybridPanelBase">
            <summary>
            Base class for hybrid controls, ie. composite container controls.
            </summary>
            <remarks>
            Base class for controls which are <see cref="T:Gaia.WebWidgets.IAjaxContainerControl"/> and also support composition pattern.
            </remarks>
            <example>
            A typical example is the ExtendedPanel, which is a container like a <see cref="T:Gaia.WebWidgets.Panel"/>, but has additional
            child controls, such as minimize and restore buttons, which are added using composition pattern.
            </example>
        </member>
        <member name="T:Gaia.WebWidgets.Panel">
            <summary>
            The Gaia Ajax Panel represents a control that acts as a container for other controls. It inherits from the 
            <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.panel.aspx"> ASP.NET Panel</a>, 
            and has built-in Ajax behaviour.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.ForceAnUpdate">
            <summary>
            Forces the control to redraw and re-instantiate all of it child controls
            See <see cref="M:Gaia.WebWidgets.IAjaxContainerControl.ForceAnUpdate"/> For documentation on this method
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.ForceAnUpdateWithAppending">
            <summary>
            Forces the control to redraw and append new chlid controls to existing ones
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.TrackControlAdditions">
            <summary>
            TrackControlAdditions is used in combination with ForceAnUpdate() or ForceAnUpdateWithAppending()
            It basically signals that all controls added after calling this method will be appended to the container
            control. Useful for minimizing network traffic when you only need to append one new control at the bottom
            of the control, for example TreeViewItems, Panels and similar. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.OnPreRender(System.EventArgs)">
            <summary>
            See also <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.RenderControl(System.Web.UI.HtmlTextWriter)"/> method for documentation. This method only forwards to that method.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> to write the control into.</param>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Renders HTML markup for the control into the specified <see cref="T:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory"/> instance.
            </summary>
            <param name="create">Used to create HTML markup for the control.</param>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.RenderControlContents(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Render the content (ie. Children) of the Panel
            </summary>
            <param name="create">XhtmlTagFactory</param>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.RegisterDefaultButton(Gaia.WebWidgets.RegisterControl)">
            <summary>
            Used by derived classes to register default button in <see cref="M:Gaia.WebWidgets.Panel.GetScript(Gaia.WebWidgets.RegisterControl)"/>.
            </summary>
            <param name="registerControl">Control registration object.</param>
            <returns>Control registeration object with possibly modified attributes for chaining.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.Panel.GetScript(Gaia.WebWidgets.RegisterControl)">
            <summary>
            Returns control registration object required for registering control on the client.
            </summary>
            <param name="registerControl">Suggested control registration object.</param>
            <returns>Modified or new control registration object.</returns>
        </member>
        <member name="E:Gaia.WebWidgets.Panel.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.Panel.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Panel.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Panel.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.Panel.Direction">
            <summary>
            Gets or sets the direction in which to display controls that include text
            in a System.Web.UI.WebControls.Panel control.
            </summary>
            <value>
            One of the System.Web.UI.WebControls.ContentDirection enumeration values.
            The default is NonSet.
            </value>
        </member>
        <member name="P:Gaia.WebWidgets.Panel.GroupingText">
            <summary>
            Gets or sets the caption for the group of controls that is contained in the panel control.
            </summary>
            <value>
            The caption text for the child controls contained in the panel control.
            The default is empty string.
            </value>
        </member>
        <member name="P:Gaia.WebWidgets.Panel.ScrollBars">
            <summary>
            Gets or sets the visibility and position of scroll bars in a <see cref="T:Gaia.WebWidgets.Panel"/> control.
            </summary>
            <returns>
            One of the <see cref="T:System.Web.UI.WebControls.ScrollBars"/> enumeration values. The default is None.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.HybridPanelBase.CreateCompositionControls">
            <summary>
            Called by the framework to notify server controls that use composition-based implementation 
            to create any child composition controls they contain in preparation for posting back or rendering.
            </summary>
            <remarks>
            Override in derived classes to add composition controls to the <see cref="P:Gaia.WebWidgets.HybridPanelBase.CompositionControls"/> collection.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.HybridPanelBase.EnsureCompositionControls">
            <summary>
            Used by inheritors to ensure that composite controls are ready for usage
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HybridPanelBase.ClearCompositionControls">
            <summary>
            Clears composition controls collection
            and removes composition controls from the controls collection.
            To be used by inheritors in pair with EnsureCompositionControl()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HybridPanelBase.EnsureChildControls">
            <summary>
            Determines whether the server control contains child controls. If it does not, it creates child controls.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HybridPanelBase.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Gaia.WebWidgets.HybridPanelBase.DataBind">
            <summary>
            Binds a data source to the invoked server control and all its child controls.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HybridPanelBase.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HybridPanelBase.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.RenderControl(System.Web.UI.HtmlTextWriter)"/> method for documentation. This method only forwards to that method.
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.HybridPanelBase.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs the content of a server control's children to a provided <paramref name="writer"/> object, 
            which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object which receives the rendered content.</param>
        </member>
        <member name="P:Gaia.WebWidgets.HybridPanelBase.Controls">
            <summary>
            Gets a <see cref="T:System.Web.UI.ControlCollection"/> object that represents the child controls for a specified server control in the UI hierarchy.
            </summary>
            <returns>
            The collection of child controls for the specified server control.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.HybridPanelBase.CompositionControlsCreated">
            <summary>
            Returns true if the hybrid control's composition controls have been created. Otherwise, false.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.HybridPanelBase.BodyID">
            <summary>
            Gets the ID of the DOM element into which <see cref="P:Gaia.WebWidgets.HybridPanelBase.ChildControls"/> are rendered.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.HybridPanelBase.CompositionControls">
            <summary>
            Returns the <see cref="T:System.Collections.Generic.ICollection`1"/> into which composition controls are added.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.HybridPanelBase.ChildControls">
            <summary>
            Returns <see cref="T:System.Web.UI.ControlCollection"/> for contained child controls, except composition controls.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.DynamicImage">
             <summary>
             A Gaia Ajax DynamicImage can be thought of like a "normal" image except that it has no src attribute. Instead
             it has the capability of "dynamically render" its image through a publically available event.
             The DynamicImage has an event called RetrieveImage which will be called when it's time
             to "update" the image control with new "image data". From this event you can construct a System.Drawing.Bitmap object
             which will be rendered onto the surface of your DynamicImage. This makes it very easy to e.g. create a
             <a href="http://en.wikipedia.org/wiki/Captcha">Captcha Control</a> or render images which only exist 
             in your database etc.
             </summary>
            <remarks>
             In order to raise the RetrieveImage to re-render the Image you need to set its ImageId property to a new unique
             value. Unique to make sure the browser doesn't reuse a previously fetched Image from its cache. This is easy to achieve by
             using e.g. "Guid.NewGuid().ToString();".
             </remarks>
             <example>
             <code title="ASPX Markup for DynamicImage" lang="C#"> 
             <code source="..\Gaia.WebWidgets.Samples\BasicControls\DynamicImage\Overview\Default.aspx" />
             </code> 
             <code title="Codebehind for DynamicImage Retrieve Event" lang="C#"> 
             <code source="..\Gaia.WebWidgets.Samples\BasicControls\DynamicImage\Overview\Default.aspx.cs" region="DynamicImageRetrieveEvent" />
             </code> 
             </example>
        </member>
        <member name="M:Gaia.WebWidgets.DynamicImage.OnInit(System.EventArgs)">
            <summary>
            Retreiving the image data for the control.
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.DynamicImage.IncludeScriptFiles">
            <summary>
            Include dynamic image javascript files
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DynamicImage.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Render xhtml compliant markup for the dynamic image
            </summary>
            <param name="create">XhtmlTagFactory to use for xhtml compliant markup generation</param>
        </member>
        <member name="E:Gaia.WebWidgets.DynamicImage.Click">
            <summary>
            Event is fired when the control is clicked. Use the eventArgs to retrieve the mouse coordinates for the 
            click event
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.DynamicImage.DoubleClick">
            <summary>
            Event is fired when the control is double clicked. Use the eventArgs to retrieve the mouse coordinates for the 
            click event
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.DynamicImage.RetrieveImage">
            <summary>
            Handle this event to populate the image with actual data.
            The most important member is the Image property which contains the actual image that
            will be rendered
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DynamicImage.ImageId">
            <summary>
            The Id of the Image.
            Use this one to be able to reuse the same RetrieveImage event handler for multiple objects
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DynamicImage.AltText">
            <summary>
            The ALT text of the Image.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DynamicImage.TagKey">
            <summary>
            Returns the IMG HTML tag key to the system
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.DynamicImage.RetrieveImageEventArgs">
            <summary>
            Passed to RetrieveImage event when an Image is needed for you DynamicImage object
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DynamicImage.RetrieveImageEventArgs.RenderType">
            <summary>
            How to render image, JPEG, GIF or PNG
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DynamicImage.RetrieveImageEventArgs.MinutesCached">
            <summary>
            How many minutes the browser should cache this image. Set this to a very high
            value if the images you're using with the same ImageId always will be the same.
            If you set it to -1 the browser will not cache this at all.
            Defaults to three years.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DynamicImage.RetrieveImageEventArgs.Image">
            <summary>
            This is the actually image to display into the Control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DynamicImage.RetrieveImageEventArgs.IdOfImage">
            <summary>
            This is the Id of the Image, use this one to be able to reuse the same event handler for more than one DynamicImage control
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.DynamicImage.RetrieveImageEventArgs.ImageType">
            <summary>
            How to flush image back to Client
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.DynamicImage.RetrieveImageEventArgs.ImageType.Jpeg">
            <summary>
            JPEG
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.DynamicImage.RetrieveImageEventArgs.ImageType.Png">
            <summary>
            PNG (use this is you can)
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.DynamicImage.RetrieveImageEventArgs.ImageType.Gif">
            <summary>
            GIF
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.DataControlFieldImpl`1">
            <summary>
            Implementation details for ajaxified <see cref="T:System.Web.UI.WebControls.DataControlField"/> derived classes.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldImpl`1.#ctor(`0)">
            <summary>
            Initializes new instace of the <see cref="T:Gaia.WebWidgets.DataControlFieldImpl`1"/> class.
            </summary>
            <param name="field">Owner field.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="field"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldImpl`1.Initialize(System.Boolean)">
            <summary>
            Initializes the associated <see cref="T:System.Web.UI.WebControls.DataControlField"/> object.
            </summary>
            <param name="enableSorting">True if sorting is supported; otherwise, false.</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldImpl`1.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> object to the specified row state. 
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> to initialize.</param>
            <param name="cellType">One of the <see cref="T:System.Web.UI.WebControls.DataControlCellType"/> values.</param>
            <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState"/> values.</param>
            <param name="rowIndex">The zero-based index of the row.</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldImpl`1.InitializeHeaderCell(System.Web.UI.WebControls.TableCell)">
            <summary>
            Initializes specified <paramref name="cell"/> as a header cell.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.DataControlFieldCell">
            <summary>
            Represents a cell in the rendered table of a tabular ASP.NET data-bound control, such as <see cref="T:Gaia.WebWidgets.GridView"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.#ctor(System.Web.UI.WebControls.DataControlField)">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.DataControlFieldCell"/> class, setting the specified <see cref="T:System.Web.UI.WebControls.DataControlField"/> object as the cell's container.
            </summary>
            <param name="containingField">The <see cref="T:System.Web.UI.WebControls.DataControlField"/> that contains the current cell.</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.#ctor(System.Web.UI.HtmlTextWriterTag,System.Web.UI.WebControls.DataControlField)">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.DataControlFieldCell"/> class, setting the specified <see cref="T:System.Web.UI.WebControls.DataControlField"/> object as the cell's container.
            </summary>
            <param name="tagKey">
            An <see cref="T:System.Web.UI.HtmlTextWriterTag"/> that specifies the HTML tag to render for the cell. The default tag used by the <see cref="T:System.Web.UI.WebControls.TableCell"/> class is <see cref="F:System.Web.UI.HtmlTextWriterTag.Td"/>.
            </param>
            <param name="containingField">The <see cref="T:System.Web.UI.WebControls.DataControlField"/> that contains the current cell.</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.OnPreRender(System.EventArgs)">
            <summary>
            See also <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldCell.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DataControlFieldCell.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <returns>
            True if the control is visible on the page; otherwise false.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.DataControlFieldCell.System#Web#UI#IDataItemContainer#DataItem">
            <summary>
            Delegating <see cref="T:System.Web.UI.IDataItemContainer"/> interface members to Parent.
            Assuming Parent implements <see cref="T:System.Web.UI.IDataItemContainer"/> interface.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DataControlFieldCell.System#Web#UI#IDataItemContainer#DataItemIndex">
            <summary>
            Delegating <see cref="T:System.Web.UI.IDataItemContainer"/> interface members to Parent.
            Assuming Parent implements <see cref="T:System.Web.UI.IDataItemContainer"/> interface.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DataControlFieldCell.System#Web#UI#IDataItemContainer#DisplayIndex">
            <summary>
            Delegating <see cref="T:System.Web.UI.IDataItemContainer"/> interface members to Parent.
            Assuming Parent implements <see cref="T:System.Web.UI.IDataItemContainer"/> interface.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.DataControlFieldHeaderCell">
            <summary>
            In accessibility scenarios, represents a header cell in the rendered table of a tabular ASP.NET data-bound control, such as <see cref="T:Gaia.WebWidgets.GridView"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.#ctor(System.Web.UI.WebControls.DataControlField)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataControlFieldHeaderCell"/> class, setting the specified <see cref="T:System.Web.UI.WebControls.DataControlField"/> object as the cell's container.
            </summary>
            <param name="containingField">The <see cref="T:System.Web.UI.WebControls.DataControlField"/> that contains the current cell.</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.OnPreRender(System.EventArgs)">
            <summary>
            See also <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create"><see cref="T:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory"/> to use for creating Xhtml compliant markup</param>
        </member>
        <member name="P:Gaia.WebWidgets.DataControlFieldHeaderCell.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <returns>
            True if the control is visible on the page; otherwise false.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.DataControlFieldHeaderCell.System#Web#UI#IDataItemContainer#DataItem">
            <summary>
            Delegating <see cref="T:System.Web.UI.IDataItemContainer"/> interface members to Parent.
            Assuming Parent implements <see cref="T:System.Web.UI.IDataItemContainer"/> interface.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DataControlFieldHeaderCell.System#Web#UI#IDataItemContainer#DataItemIndex">
            <summary>
            Delegating <see cref="T:System.Web.UI.IDataItemContainer"/> interface members to Parent.
            Assuming Parent implements <see cref="T:System.Web.UI.IDataItemContainer"/> interface.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DataControlFieldHeaderCell.System#Web#UI#IDataItemContainer#DisplayIndex">
            <summary>
            Delegating <see cref="T:System.Web.UI.IDataItemContainer"/> interface members to Parent.
            Assuming Parent implements <see cref="T:System.Web.UI.IDataItemContainer"/> interface.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.DataControlFieldHeaderCell.PropertyStateManagerDataControlFieldHeaderCell">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.DataControlFieldHeaderCell"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.PropertyStateManagerDataControlFieldHeaderCell.#ctor(Gaia.WebWidgets.DataControlFieldHeaderCell)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.DataControlFieldHeaderCell.PropertyStateManagerDataControlFieldHeaderCell"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.PropertyStateManagerDataControlFieldHeaderCell.#ctor(Gaia.WebWidgets.DataControlFieldHeaderCell,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.DataControlFieldHeaderCell.PropertyStateManagerDataControlFieldHeaderCell"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.PropertyStateManagerDataControlFieldHeaderCell.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.PropertyStateManagerDataControlFieldHeaderCell.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DataControlFieldHeaderCell.PropertyStateManagerDataControlFieldHeaderCell.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.EffectCollection">
            <summary>
            Collection of Effects. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.EffectCollection.Add(Gaia.WebWidgets.Effect)">
            <summary>
            Add an Effect to the collection of effects
            </summary>
            <param name="effect"></param>
        </member>
        <member name="M:Gaia.WebWidgets.EffectCollection.Add(Gaia.WebWidgets.AjaxEffectEvent,Gaia.WebWidgets.Effect)">
            <summary>
            Use this function when you want to Add a function to a specific event on the widget. The Event blocks can typically be
            found on each widget as static getters for each event. 
            </summary>
            <param name="effectEvent">The event to attach the effect to </param>
            <param name="effect">The effect to attach</param>
        </member>
        <member name="M:Gaia.WebWidgets.EffectCollection.IsDefined(Gaia.WebWidgets.AjaxEffectEvent)">
            <summary>
            Returns true if the EffectEvent is defined in the Effect collection. 
            </summary>
            <param name="effectEvent">the Effectevent to use</param>
            <returns>True if defined in the collection</returns>
        </member>
        <member name="M:Gaia.WebWidgets.EffectCollection.Clear">
            <summary>
            Clear all the effects (including EffectEvents) for this collection
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.EffectCollection.Contains(Gaia.WebWidgets.Effect)">
            <summary>
            Determine if the given Effect exists in the collection, either as a direct
            effect or as an EffectEvent. 
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.EffectCollection.Remove(Gaia.WebWidgets.Effect)">
            <summary>
            Removes a given Effect from the collection
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.EffectCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gaia.WebWidgets.EffectCollection.Count">
            <summary>
            Returns the number of effects in the collection, including EffectEvents
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.IAjaxControlNoRoot">
            <summary>
            Interface for all ajax controls, which do not render a root element
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ControlCollectionContainerAware`1">
            <summary>
             This specialized ControlCollection serves the same purpose as <see cref="T:Gaia.WebWidgets.ControlCollectionOf`1"/> 
             and <see cref="T:Gaia.WebWidgets.ControlCollectionExcept`1"/> combined but also will internally use Lists as a "cache" to avoid
             enumerating again and again over large lists. This is especially important in DRIMR scenarios.
            </summary>
            <typeparam name="T">The Container Type</typeparam>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionContainerAware`1.#ctor(`0)">
            <summary>
             Constructor. Initializes a new instance of <see cref="T:Gaia.WebWidgets.ControlCollectionContainerAware`1"/>
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionContainerAware`1.Add(System.Web.UI.Control)">
            <summary>
            Adds the specified <see cref="T:System.Web.UI.Control"/> object to the collection.
            </summary>
            <param name="child">The <see cref="T:System.Web.UI.Control"/> to add to the collection. 
                            </param><exception cref="T:System.ArgumentNullException">Thrown if the <paramref name="child"/> parameter does not specify a control. 
                            </exception><exception cref="T:System.Web.HttpException">Thrown if the <see cref="T:System.Web.UI.ControlCollection"/> is read-only. 
                            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionContainerAware`1.Clear">
            <summary>
            Removes all controls from the current server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionContainerAware`1.Remove(System.Web.UI.Control)">
            <summary>
            Removes the specified server control from the parent server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <param name="child">The server control to be removed. 
                            </param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionContainerAware`1.Contains(System.Web.UI.Control)">
            <summary>
            Determines whether the specified server control is in the parent server control's <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <returns>
            true if the specified server control exists in the collection; otherwise, false.
            </returns>
            <param name="c">The server control to search for in the collection. 
                            </param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionContainerAware`1.AddAt(System.Int32,System.Web.UI.Control)">
            <summary>
            Adds the specified <see cref="T:System.Web.UI.Control"/> object to the collection at the specified index location.
            </summary>
            <param name="index">The location in the array at which to add the child control. 
                            </param><param name="child">The <see cref="T:System.Web.UI.Control"/> to add to the collection. 
                            </param><exception cref="T:System.ArgumentNullException">The <paramref name="child"/> parameter does not specify a control. 
                            </exception><exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than the <see cref="P:System.Web.UI.ControlCollection.Count"/> property. 
                            </exception><exception cref="T:System.Web.HttpException">The <see cref="T:System.Web.UI.ControlCollection"/> is read-only. 
                            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionContainerAware`1.RemoveAt(System.Int32)">
            <summary>
            Removes a child control, at the specified index location, from the <see cref="T:System.Web.UI.ControlCollection"/> object.
            </summary>
            <param name="index">The ordinal index of the server control to be removed from the collection. 
                            </param><exception cref="T:System.Web.HttpException">Thrown if the <see cref="T:System.Web.UI.ControlCollection"/> is read-only. 
                            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionContainerAware`1.ResolveList(System.Web.UI.Control)">
            <summary>
            Helper function to resolve the correct underlying list of controls based on the <paramref name="control"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionContainerAware`1.ResolveIndexInCollectionWrapper(System.Collections.IList,System.Int32,System.Boolean)">
            <summary>
            Helper function to find the correct index in the correct collectionwrapper list. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionContainerAware`1.Containers">
            <summary>
            In this Collection you will find all Controls of type <typeparamref name="T"></typeparamref>. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollectionContainerAware`1.ChildControls">
            <summary>
            In this Collection you will all other Controls except of type <typeparamref name="T"></typeparamref>
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.GridViewRow">
            <summary>
            Represents an individual row in a <see cref="T:Gaia.WebWidgets.GridView"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.#ctor(Gaia.WebWidgets.GridView,System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.OnPreRender(System.EventArgs)">
            <summary>
            See also <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridViewRow.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="P:Gaia.WebWidgets.GridViewRow.Aspects">
            <summary>
            Returns collection of <see cref="T:Gaia.WebWidgets.IAspect"/> for the <see cref="T:Gaia.WebWidgets.GridViewRow"/>.
            </summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"/>
        </member>
        <member name="P:Gaia.WebWidgets.GridViewRow.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.GridViewRow.Visible">
            <summary>
            Gets or sets a value that indicates whether a server control is rendered as UI on the page.
            </summary>
            <returns>
            true if the control is visible on the page; otherwise false.
            </returns>
        </member>
        <member name="T:Gaia.WebWidgets.GaiaAjaxConfigurationSection">
             <example> 
                The configuration file should contain the following elements: 
                <code escaped="true"> 
                    <configSections>
                      <section name="GaiaAjaxSection"
                               type="Gaia.WebWidgets.GaiaAjaxConfigurationSection"
                               restartOnExternalChanges="true"
                               ></section>
                    
                    </configSections>
            
                    <GaiaAjaxSection
                        EnableDefaultTheme="false"
                        EnableJavaScriptInclusion="true"
                        EnableNestedCssClasses="true">
                    </GaiaAjaxSection>
                    </code> 
             </example> 
        </member>
        <member name="T:Gaia.WebWidgets.ControlCollectionOf`1">
            <summary>
            This <see cref="T:System.Web.UI.ControlCollection"/> serves similar purpose as <see cref="T:Gaia.WebWidgets.ControlCollectionOf`1"/> but offers higher
            performance by using Lists to keep track of which controls are part of this Collection instead of just creating a View
            over the Collection. 
            </summary>
            <typeparam name="T">The Type which is allowed in this collection</typeparam>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionOf`1.#ctor(`0,System.Collections.Generic.IList{`0})">
            <summary>
             Constructor. Initializes a new instance of <see cref="T:Gaia.WebWidgets.ControlCollectionWrapperCached`1"/>
            </summary>
            <param name="owner">The owner Control</param>
            <param name="thisCollection">The collection containing the controls that are part of this collection wrapper</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollectionOf`1.IsValidControl(System.Web.UI.Control)">
            <summary>
            Abstract function used to Verify that a control matches the requirements for derived collections. 
            </summary>
            <param name="control">The control to verify</param>
        </member>
        <member name="T:Gaia.WebWidgets.AspectClickable">
            <summary>
            Aspect class for making elements clickable.
            Element you attach this Aspect to can be clicked with the mouse even though they're not 
            "natively" clickable elements. When clicked you will be able to trap that event on the server through the 
            Clicked of the DblClicked event. Both single clicks and double clicks are supported, you can choose which
            of the two (or both) you wish to trap for the widget you attach this aspect to.
            </summary>
            <example>
            <code title="ASPX Markup for AspectClickable Example" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectClickable\DoubleClick\Default.aspx" />
            </code> 
            <code title="Double Click Panel to Fade it Away" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectClickable\DoubleClick\Default.aspx.cs" region="Code" /> 
            </code>
            <code title="Click Panel to Toggle CssClass" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectClickable\ToggleCssClass\Default.aspx.cs" region="Code" /> 
            </code> 
            <code title="One Line Construction Of AspectClickable" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectClickable\ShortHandSyntax\Default.aspx.cs" region="Code" /> 
            </code> 
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AspectClickable.#ctor">
            <summary>
            Default constructor, doesn't set event handlers for any of the events (Clicked and DblClicked)
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectClickable.#ctor(System.EventHandler{Gaia.WebWidgets.AspectClickable.ClickEventArgs})">
            <summary>
            Constructor taking event handler for the Clicked event.
            </summary>
            <param name="clicked">delegate called when item is clicked</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectClickable.#ctor(System.EventHandler{Gaia.WebWidgets.AspectClickable.ClickEventArgs},System.EventHandler{Gaia.WebWidgets.AspectClickable.ClickEventArgs})">
            <summary>
            Constructor taking event handler for the Clicked and the DblClicked event
            </summary>
            <param name="clicked">delegate called when item is clicked</param>
            <param name="dblClicked">delegate called when item is DOUBLE clicked</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectClickable.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectClickable.EffectEventClick">
            <summary>
            Use this EffectEvent to capture the click event and wire an effect to it. Doesn't require that you 
            add AspectClickable itself since it relies on the native click event. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectClickable.EffectEventDoubleClick">
            <summary>
            Use this EffectEvent to capture the doubleclick event and wire an effect to it. Doesn't require that you 
            add AspectClickable itself since it relies on the native click event. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectClickable.UseRelativeCoordinates">
            <summary>
            When you click the element which this aspect is attached to, you will retrieve the coordinates on the server
            By default it will capture the absolute x,y position on the entire viewport, but if you want to only capture
            x,y relative to the aspects parent container you can set this value to true. 
            </summary>
            <example>
            <code title="Use Top and Left in ClickedEventArgs through relative coordinates" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectClickable\RelativeCoordinates\Default.aspx.cs" region="Code" /> 
            </code> 
            </example>
        </member>
        <member name="E:Gaia.WebWidgets.AspectClickable.Clicked">
            <summary>
            Event raised when element is single clicked. In the event handler for this event you will have
            access to the x and y coordinates of the mouse when the event was raised.
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectClickable.DblClicked">
            <summary>
            Event raised when element is DOUBLE clicked. In the event handler for this event you will have
            access to the x and y coordinates of the mouse when the event was raised.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectClickable.ClickEventArgs">
            <summary>
            EventArgs for Clicked and the DblClicked events. Notice here that you do have access to the x and y 
            coordinate of the place the mouse cursor was at when the event was raised.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.HiddenField">
            <summary>
            The Gaia Ajax HiddenField depresents a hidden field used to store a non-displayed value. It inherits from the ASP.NET Button,
            and has built-in Ajax behaviour.
            </summary>
            <example>
            <code title="ASPX Markup for HiddenField" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\HiddenField\Overview\Default.aspx" />
            </code> 
            <code title="Codebehind for HiddenField" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\HiddenField\Overview\Default.aspx.cs" region="Code" />
            </code> 
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.ExecuteLoadPostData(Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate,System.String,System.Collections.Specialized.NameValueCollection,Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate)"/> method for documentation. This method only forwards to that method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HiddenField.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="P:Gaia.WebWidgets.HiddenField.Value">
            <summary>
            The value of the hidden field in string representation.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.GridView">
            <summary>
            The Gaia Ajax GridView displays the values of a data source
            in a table where each column represents a field and each 
            row represents a record. It inherits from the
            <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.gridview.aspx">
            ASP.NET GridView</a>, and has built-in Ajax behaviour.
            </summary>
            <example>
            <code title="ASPX Markup for GridView" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\GridView\Overview\Default.aspx" />
            </code> 
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.CreateChildTable">
            <summary>Creates a new child table.</summary>
            <returns>Always returns a new <see cref="T:System.Web.UI.WebControls.Table"/> that represents the child table.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            Creates the control hierarchy used to render the <see cref="T:Gaia.WebWidgets.GridView"/> control using the specified data source.
            </summary>
            <returns>The number of rows created.</returns>
            <param name="dataSource">An <see cref="T:System.Collections.IEnumerable"/> that contains the data source for the <see cref="T:Gaia.WebWidgets.GridView"/> control.</param>
            <param name="dataBinding">true to indicate that the child controls are bound to data; otherwise, false.</param>
            <exception cref="T:System.Web.HttpException">
            <paramref name="dataSource"/> returns a null <see cref="T:System.Web.UI.DataSourceView"/>.
            -or-
            <paramref name="dataSource"/> does not implement the <see cref="T:System.Collections.ICollection"/> interface and cannot return a <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount"/>. 
            -or-
            <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging"/> is true and <paramref name="dataSource"/> does not implement the <see cref="T:System.Collections.ICollection"/> interface and cannot perform data source paging.
            -or-
            <paramref name="dataSource"/> does not implement the <see cref="T:System.Collections.ICollection"/> interface and <paramref name="dataBinding"/> is set to false.
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.CreateChildControls">
            <summary>
            Creates the control hierarchy that is used to render a composite data-bound control based on the values that are stored in view state.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)">
            <summary>
            Creates a row in the GridView control.
            </summary>
            <param name="rowIndex">The index of the row to create.</param>
            <param name="dataSourceIndex">The index of the data source item to bind to the row.</param>
            <param name="rowType">One of the DataControlRowType values.</param>
            <param name="rowState">One of the DataControlRowState values.</param>
            <returns>A ICollection that contains the fields used to build the control hierarchy.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)">
            <summary>
            Creates the set of column fields used to build the control hierarchy.
            </summary>
            <param name="dataSource">A PagedDataSource that represents the data source.</param>
            <param name="useDataSource">True to use the data source specified by the dataSource parameter; Otherwise, false.</param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])">
            <summary>
            Initializes a row in the GridView control.
            </summary>
            <param name="row">A GridViewRow that represents the row to initialize.</param>
            <param name="fields">An array of DataControlField objects that represent the column fields in the GridView control.</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)">
            <summary>
            Initializes the pager row displayed when the paging feature is enabled.
            </summary>
            <param name="row">A GridViewRow that represents the pager row to initialize.</param>
            <param name="columnSpan">The number of columns the pager row should span.</param>
            <param name="pagedDataSource">A PagedDataSource that represents the data source.</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.InitializeTemplateRow(System.Web.UI.WebControls.GridViewRow,System.Int32)">
            <summary>
            Initializes Template Row in the %GridView.
            </summary>
            <param name="row">GridViewRow to initialize the template in.</param>
            <param name="columnSpan">ColumnSpan of the Template Row.</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.OnPreRender(System.EventArgs)">
            <summary>
            See also <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="P:Gaia.WebWidgets.GridView.EnableSortingAndPagingCallbacks">
            <summary>
            Gets or sets a value indicating whether client-side callbacks are used for sorting and paging operations.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.GridView.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.GridView.PropertyStateManagerGridView">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.GridView"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.#ctor(Gaia.WebWidgets.GridView)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.#ctor(Gaia.WebWidgets.GridView,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.DiffSnapshot">
            <summary>
            Detects changes between current state and saved state snapshot for the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.OnSnapshotTakenEvent(System.Object,System.EventArgs)">
            <summary>
            Raised after the state snapshot for the associated <see cref="T:System.Web.UI.Control"/> is taken.
            </summary>
            <returns>
            True if event was consumed and the bubbling is cancelled. Otherwise, false.
            Default value is false.
            </returns>
            <remarks>
            Bubbles up until stopped by return value of true.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.HandleGridViewRow(System.Object)">
            <summary>
            Tries handling the specified object as a <see cref="T:Gaia.WebWidgets.GridViewRow"/> and
            applying correct state information.
            </summary>
            <param name="sender">The object the state snapshot of which is being taken.</param>
            <returns>
            True if the provided sender is a <see cref="T:Gaia.WebWidgets.GridViewRow"/> and further event bubbling should be stopped; otherwise, false.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.HandleGridViewCell(System.Object)">
            <summary>
            Tries handling the specified object as a <see cref="T:Gaia.WebWidgets.DataControlFieldCell"/> and
            applying correct state information.
            </summary>
            <param name="sender">The object the state snapshot of which is being taken.</param>
            <returns>
            True if the provided sender is a <see cref="T:Gaia.WebWidgets.DataControlFieldCell"/> and further event bubbling should be stopped; otherwise, false.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.HandleGridViewCellControl(System.Object)">
            <summary>
            Tries handling the specified object as a <see cref="T:System.Web.UI.WebControls.WebControl"/> and
            applying correct state information.
            </summary>
            <param name="sender">The object the state snapshot of which is being taken.</param>
            <returns>
            True if the provided sender is a <see cref="T:System.Web.UI.WebControls.WebControl"/> and further event bubbling should be stopped; otherwise, false.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.GetRowStyle(System.Web.UI.WebControls.GridViewRow)">
            <summary>
            Returns <see cref="T:System.Web.UI.WebControls.Style"/> with which the <see cref="T:Gaia.WebWidgets.GridViewRow"/> was rendered.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.CheckState(System.Web.UI.WebControls.DataControlRowState,System.Web.UI.WebControls.DataControlRowState)">
            <summary>
            Checks if the specified state satisfies expected state.
            </summary>
            <param name="state">State to check.</param>
            <param name="expectedState">Expected state.</param>
            <returns>True if state satisifies expected state; otherwise, false.</returns>
        </member>
        <member name="P:Gaia.WebWidgets.GridView.PropertyStateManagerGridView.ControlStyle">
            <summary>
            Gets or sets <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle"/> property in the state snapshot.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.GridView.GridViewChildTable">
            <summary>
            Specialized child <see cref="T:System.Web.UI.WebControls.Table"/> for the <see cref="T:Gaia.WebWidgets.GridView"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.GridViewChildTable.#ctor(Gaia.WebWidgets.GridView)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.GridView.GridViewChildTable"/>.
            </summary>
            <param name="owner">Owner control</param>
        </member>
        <member name="M:Gaia.WebWidgets.GridView.GridViewChildTable.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
            <param name="writer">The output stream that renders HTML content to the client. </param>
        </member>
        <member name="T:Gaia.WebWidgets.CommandField">
            <summary>
            Represents a special field that displays command buttons to perform 
            selecting, editing, inserting, or deleting operations in a data-bound control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CommandField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.CommandField"/> class.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CommandField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>
            Performs basic instance initialization for a data control field.
            </summary>
            <param name="sortingEnabled">A value that indicates whether the control supports the sorting of columns of data.</param>
            <param name="control">The data control that owns the <see cref="T:System.Web.UI.WebControls.DataControlField"/>.</param>
            <returns>Always returns false.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.CommandField.CreateField">
            <summary>
            Creates an empty <see cref="T:System.Web.UI.WebControls.CommandField"/> object.
            </summary>
            <returns>
            An empty <see cref="T:System.Web.UI.WebControls.CommandField"/>.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.CommandField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> object to the specified row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> to initialize.</param>
            <param name="cellType">One of the <see cref="T:System.Web.UI.WebControls.DataControlCellType"/> values.</param>
            <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState"/> values.</param>
            <param name="rowIndex">The zero-based index of the row that contains the cell.</param>
        </member>
        <member name="M:Gaia.WebWidgets.CommandField.AddButtonToCell(System.Web.UI.WebControls.DataControlFieldCell,System.String,System.String,System.Boolean,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Adds the button to cell.
            </summary>
            <param name="cell">The cell.</param>
            <param name="commandName">Name of the command.</param>
            <param name="buttonText">The button text.</param>
            <param name="causesValidation">if set to <c>true</c> [causes validation].</param>
            <param name="validationGroup">The validation group.</param>
            <param name="rowIndex">Index of the row.</param>
            <param name="imageUrl">The image URL.</param>
            <param name="hasPreSpace">if set to <c>true</c> [has pre space].</param>
        </member>
        <member name="P:Gaia.WebWidgets.CommandField.Gaia#WebWidgets#IAjaxDataControlField#Control">
            <summary>
            Gets a reference to the data control that the <see cref="T:System.Web.UI.WebControls.DataControlField"/> object is associated with.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ClientUtils">
            <summary>
            Various ClientSide utilities to modify DOM from the server.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ClientUtils.ClonePosition(System.Web.UI.Control,System.Web.UI.Control)">
            <summary>
            This function will take two controls and position the target directly beneath the
            source control. It doesn't copy width or height properties ...
            </summary>
            <param name="source"></param>
            <param name="target"></param>
        </member>
        <member name="M:Gaia.WebWidgets.ClientUtils.IncludeScriptFiles">
            <summary>
            Include javascript files.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ClientUtils.Gaia#WebWidgets#IAjaxControl#CreateControlStateManager">
            <summary>
            Called by the Gaia framework when the StateManager of the Control needs to be initialized
            </summary>
            <returns>StateManager for the Control</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ClientUtils.Gaia#WebWidgets#IAjaxControl#GetScript">
            <summary>
            Returns the Javascript used to register the control on the client. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.ClientUtils.InjectPropertyChangesToCallbackResponse(System.Text.StringBuilder)">
            <summary>
            Implementation of your custom rendering. This expects to be in the form of; 
            ".foo(x)" where the foo method on the client MUST return the this argument.
            If this method returns nothing, nothing will be rendered unless other things 
            are having rendering output.
            </summary>
            <param name="code">An already built StringBuilder which you're supposed to render your data into</param>
        </member>
        <member name="T:Gaia.WebWidgets.CheckBoxList">
            <summary>
            Creates a multi selection ajax enabled check box group that can be dynamically created by binding the control to a data source.
            </summary>
            <example>
            <code title="ASPX Markup for CheckBoxList" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\CheckBoxList\Overview\Default.aspx" />
            </code> 
            <code title="Codebehind for CheckBoxList" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\BasicControls\CheckBoxList\Overview\Default.aspx.cs" region="Code" />
            </code> 
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.ExecuteLoadPostData(Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate,System.String,System.Collections.Specialized.NameValueCollection,Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate)"/> method for documentation. This method only forwards to that method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.OnPreRender(System.EventArgs)">
            <summary>
            See also <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>The return value from the base class' SaveViewState method</returns>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.RenderControl(System.Web.UI.HtmlTextWriter)"/> method for documentation. This method only forwards to that method.
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="E:Gaia.WebWidgets.CheckBoxList.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.CheckBoxList.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBoxList.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBoxList.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.CheckBoxList.PropertyStateManagerCheckBoxList">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for the <see cref="T:Gaia.WebWidgets.CheckBoxList"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.PropertyStateManagerCheckBoxList.#ctor(Gaia.WebWidgets.CheckBoxList)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.CheckBoxList.PropertyStateManagerCheckBoxList"/> for specified <paramref name="control"/>.
            </summary>
            <param name="control">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxList.PropertyStateManagerCheckBoxList.#ctor(Gaia.WebWidgets.CheckBoxList,System.String,Gaia.WebWidgets.IExtraPropertyCallbackRenderer)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.CheckBoxList.PropertyStateManagerCheckBoxList"/> for specified <paramref name="control"/>
            using specified <paramref name="clientId"/> for reference and specified <see cref="T:Gaia.WebWidgets.IExtraPropertyCallbackRenderer"/>
            for additional state change serialization.
            </summary>
            <param name="control">Control to track changes for.</param>
            <param name="clientId">The client-side ID of the <paramref name="control"/> to use.</param>
            <param name="extra">Provides additional state change rendering during callbacks.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="control"/> is null.</exception>
        </member>
        <member name="T:Gaia.WebWidgets.ControlCollector">
            <summary>
            This control can be used to select several controls on the client.
            The list of controls to enumerate can be filtered using corresponding property.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollector.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup.</param>
        </member>
        <member name="E:Gaia.WebWidgets.ControlCollector.Collected">
            <summary>
            The event is raised when at least one control is collected.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollector.FilterEventSource">
            <summary>
            Specifies CSS Selector, which will be used to filter the elements, which can be the source of the bubbling event.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollector.Filter">
            <summary>
            Specifies CSS Selector, which will be used to filter the elements to be collected.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollector.CssClassCollected">
            <summary>
            CssClass for the collected controls. This will be applied to each collected control.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ControlCollector.CollectedEventArgs">
            <summary>
            Event argument for the Collected event.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ControlCollector.CollectedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.Web.UI.Control})">
            <summary>
            Constructor taking the set of the collected controls.
            </summary>
            <param name="controls">Collected controls enumeration</param>
        </member>
        <member name="P:Gaia.WebWidgets.ControlCollector.CollectedEventArgs.Controls">
            <summary>
            Set of the collected controls
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.DesignTimeHtmlTextWriter">
            <summary>
            Specialized <see cref="T:System.Web.UI.HtmlTextWriter"/> for desing-time rendering.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DesignTimeHtmlTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.DesignTimeHtmlTextWriter"/> class that uses a default tab string.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> instance that renders the markup content.</param>
        </member>
        <member name="M:Gaia.WebWidgets.DesignTimeHtmlTextWriter.IsStyleSheetRendered(System.Type,System.String)">
            <summary>
            Returns true if the embedded stylesheet defined by the specified <paramref name="type"/> 
            and <paramref name="resourceName"/> is rendered using this <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DesignTimeHtmlTextWriter.RenderStyleSheetResource(System.Web.UI.ClientScriptManager,System.Type,System.String)">
            <summary>
            Renders embedded stylesheet defined by the specified <paramref name="type"/> and <paramref name="resourceName"/>
            using the specified <paramref name="clientScriptManager"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.DesignTimeHtmlTextWriter.PerformWebResourceSubstitution(System.Text.RegularExpressions.Match,System.Web.UI.ClientScriptManager,System.Type)">
            <summary>
            Performs substitution for the WebResource path during desing-time rendering.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.DesignTimeHtmlTextWriter.WebResourceRegEx">
            <summary>
            Regular expression to use for matching WebResource references inside embedded stylesheets.
            </summary>
            <remarks>
            Used during design-time rendering for replacing with design-time web resource reference uri.
            </remarks>
        </member>
        <member name="T:Gaia.WebWidgets.GaiaLicenseProvider">
            <summary>
            The Gaia Licensing Provider validates if Gaia is running under a valid license. It follows a simple factory 
            pattern where we use different implementations based on file. Currently Gaia supports three modes. 
            1) Commercial 
            2) Trial
            3) GPL
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ClientScriptManager">
            <summary>
            Defines methods for managing <see cref="T:System.Web.UI.ClientScriptManager"/> registrations during Ajax callbacks.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.#ctor(Gaia.WebWidgets.Manager)">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.ClientScriptManager"/> class.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.UpdateArrayDeclaration(System.String)">
            <summary>
            Updates declaration of an array having <paramref name="arrayName"/>,
            </summary>
            <remarks>
            The array should have been declared using <see cref="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)"/> method.
            </remarks>
            <param name="arrayName">Name of the array which was previously declared and needs update.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.UpdateExpandoAttributes(System.String)">
            <summary>
            Updates registration of expando attributes for a control having specified <paramref name="controlid"/>.
            </summary>
            <remarks>
            The array should have been registered using <see cref="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)"/> method.
            </remarks>
            <param name="controlid">Id of the control which had expando attributes which need to be updated.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.UpdateScriptRegistrations(System.Type,System.String)">
            <summary>
            Updates registrations of client script and startup blocks.
            </summary>
            <remarks>
            The array should have been tracked using <see cref="M:Gaia.WebWidgets.ClientScriptManager.TrackScriptRegistrations(System.Type,System.String)"/> method.
            </remarks>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.TrackScriptRegistrations(System.Type,System.String)">
            <summary>
            Tracks registrations of client script and startup blocks.
            </summary>
            <remarks>
            Client script blocks should be registered using <see cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)"/> and
            <see cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)"/> methods.
            Only client script blocks which are wrapped inside script tags are supported.
            </remarks>
            <example>
            using( Manager.Instance.TrackScriptRegistrations(typeof(MyControl), "wrapperKey") )
            {
              Page.ClientScript.RegisterClientScriptBlock(typeof(MyControl), "scriptKey", "alert('hello world');", true);
            }
            </example>
            <returns>An <see cref="T:System.IDisposable"/> object which should be used with using statement.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.TrackArrayAndExpandoRegistrations">
            <summary>
            Marks the script sections which are used for rendering array registrations and expando attributes.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.IsUpdatableArrayName(System.String)">
            <summary>
            Return true if the array registrations with the specified <paramref name="arrayName"/> need to be updated.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.IsUpdatableExpandoControlId(System.String)">
            <summary>
            Return true if the expando attribute registrations for the <paramref name="controlid"/> need to be updated.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.IsInsideUpdatableScriptBlock(System.String,System.Text.RegularExpressions.Capture)">
            <summary>
            Returns true if the specified <paramref name="scriptCapture"/> is inside a script block,
            which was marked for update using <see cref="M:Gaia.WebWidgets.ClientScriptManager.UpdateScriptRegistrations(System.Type,System.String)"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.AddToList(System.Collections.Generic.List{System.String}@,System.String)">
            <summary>
            Adds the specified <paramref name="value"/> to the specified <paramref name="list"/>.
            Makes sure the <paramref name="list"/> is initialized and the <paramref name="value"/> is unique.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.RegisterClientScriptBlockMarker(System.Web.UI.ClientScriptManager,System.Type,System.String,System.Boolean)">
            <summary>
            Registers begin or end marker with the specified <paramref name="clientScript"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.GetMarkerText(System.String,System.String,System.Boolean)">
            <summary>
            Returns text for marker registrations
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ClientScriptManager.CreateScriptBlockKey(System.Type,System.String)">
            <summary>
            Creates a string which acts as a key for a script block.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectUpdateControl">
            <summary>
            Aspect for specializing UpdateControls for specific widgets. If some widget needs special UpdateControl 
            capabilities then use this one. The existance of this aspect will override the 
            Manager.Instance.UpdateControl property but only for the specific widget owning this Aspect. 
            <br />
            This is a useful feature when you only have a few time consuming functions and/or you want to display a local update control 
            near that particular control.
            </summary>
            <example>
            <code title="ASPX Markup for AspectUpdateControl" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectUpdateControl\Overview\Default.aspx" />
            </code> 
            <code title="Codebehind for AspectUpdateControl" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectUpdateControl\Overview\Default.aspx.cs" region="Code" />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AspectUpdateControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectUpdateControl.#ctor(System.String)">
            <summary>
            Constructor taking id of HTML element to use as UpdateControl
            </summary>
            <param name="updateControlId">Id of control to use as UpdateControl for widget</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectUpdateControl.#ctor(System.Web.UI.Control)">
            <summary>
            Constructor taking Control to use as UpdateControl
            </summary>
            <param name="updateControl">UpdateControl for widget</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectUpdateControl.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectUpdateControl.UpdateControlId">
            <summary>
            ID of HTML DOM element to use as the UpdateControl
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectUpdateControl.UpdateControl">
            <summary>
            Control to use as the UpdateControl
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectGeneric">
            <summary>
            Generic Aspect with Generic Events. This aspect is used to handle some scenarios
            the other aspects where not designed to handle but which we didn't feel justified creating
            explicit aspect for. E.g. "blur" and "focus" on widgets can be handled with this Aspect.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectGeneric.#ctor">
            <summary>
            Constructor. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectGeneric.#ctor(System.EventHandler,Gaia.WebWidgets.AspectGeneric.GenericEvent)">
            <summary>
            Constructor. Specify what kind of event to listen for and the eventHandler for the Event.
            </summary>
            <param name="eventHandler">delegate to be called when event occurs</param>
            <param name="whatEvent">Which event to listen to on the client</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectGeneric.#ctor(System.EventHandler,Gaia.WebWidgets.AspectGeneric.GenericEvent,System.Int32)">
            <summary>
            Constructor. Specify what kind of event to listen for and the eventHandler for the Event.
            Also specify a delay interval before the event is actually forwarded to the server ...
            </summary>
            <param name="eventHandler">delegate to be called when event occurs</param>
            <param name="whatEvent">Which event to listen to on the client</param>
            <param name="interval">Interval before raising the event back to the server</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectGeneric.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectGeneric.EffectEventBlur">
            <summary>
            Add this EffectEvent to a control to add an effect to the blur event. 
            note: This EffectEvent doesn't require that you add the AspectGeneric to your control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectGeneric.EffectEventFocus">
            <summary>
            Add this EffectEvent to a control to add an effect to the focus event. 
            note: This EffectEvent doesn't require that you add the AspectGeneric to your control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectGeneric.EffectEventSelect">
            <summary>
            Add this EffectEvent to a control to add an effect to the select event. 
            note: This EffectEvent doesn't require that you add the AspectGeneric to your control.
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectGeneric.EventRaised">
            <summary>
            EventRaised is called when the specified event is fired from the Client. 
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectGeneric.Focus">
            <summary>
            Event Raised when Focus occurs
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectGeneric.Blur">
            <summary>
            Event Raised when Blur occurs
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectGeneric.Select">
            <summary>
            Event Raised when Select occurs
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectGeneric.Event">
            <summary>
            Specify what kind of event to listen for. 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectGeneric.Interval">
            <summary>
            Specify a delay before the event is fired.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectGeneric.GenericEvent">
            <summary>
            GenericEvent Enum, defines what type of event on the client-side you are interested in
            trapping.
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectGeneric.GenericEvent.Abort">
            <summary>
            Triggered when: Image loading is interrupted
            Supported by: IMG
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectGeneric.GenericEvent.Blur">
            <summary>
            Triggered when: Element looses input focus
            Supported by: BUTTON, INPUT, LABEL, SELECT, TEXTAREA
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectGeneric.GenericEvent.Error">
            <summary>
            Triggered when: Image loading fails
            Supported by: IMG
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectGeneric.GenericEvent.Focus">
            <summary>
            Triggered when: Element gains input focus
            Supported by: BUTTON, INPUT, LABEL, SELECT, TEXTAREA
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectGeneric.GenericEvent.Select">
            <summary>
            Triggered when: Text is selected
            Supported by: INPUT, TEXTAREA
            </summary>
        </member>
        <member name="F:Gaia.WebWidgets.AspectGeneric.GenericEvent.None">
            <summary>
            Set this to None to construct AspectGeneric so that it listens to the other events you specify directly instead
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RadioButton">
            <summary>
            The Gaia Ajax RadioButton represents a single radio button control. It inherits from the <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.radiobutton.aspx">ASP.NET RadioButton</a>, 
            and has built-in Ajax behaviour.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.ExecuteLoadPostData(Gaia.WebWidgets.AjaxControl.LoadPostDataDelegate,System.String,System.Collections.Specialized.NameValueCollection,Gaia.WebWidgets.AjaxControl.ClearPropertyStateDelegate)"/> method for documentation. This method only forwards to that method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.OnPreRender(System.EventArgs)">
            <summary>
            See also <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RadioButton.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="E:Gaia.WebWidgets.RadioButton.Blur">
            <summary>
            Event is triggered when the control looses focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.RadioButton.Focused">
            <summary>
            Event is triggered when the control gets focus
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.RadioButton.MouseOver">
            <summary>
            Event is triggered when the Mouse cursor is moved over the control
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.RadioButton.MouseOut">
            <summary>
            Event is triggered when the Mouse cursor is moved outside of the control
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RadioButton.Text">
            <summary>
            Gets or sets the Text of the control. The default value is ""
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RadioButton.AutoPostBack">
            <summary>
            Gets or sets the AutoPostBack property. If this property is true the control will generate an
            Ajax Request when it's value changes.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RadioButton.Checked">
            <summary>
            Gets or sets if the RadioButton is checked
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RadioButton.TextAlign">
            <summary>
            Gets or sets the text alignment of the text of the CheckBox (right or left)
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RadioButton.GroupName">
            <summary>
            Gets or sets the name of the group that the radio button belongs to.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RadioButton.CausesValidation">
            <summary>
            Gets or sets a value indicating whether validation is performed when the <see cref="T:Gaia.WebWidgets.RadioButton"/> control is clicked.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RadioButton.ValidationGroup">
            <summary>
            Gets or sets the group of controls for which the <see cref="T:Gaia.WebWidgets.RadioButton"/> control causes validation when it posts back to the server.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RadioButton.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RadioButton.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ButtonField">
            <summary>
            Represents a field that is displayed as a button in a data-bound control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ButtonField.#ctor">
            <summary>
            Initializes new instance of the <see cref="T:Gaia.WebWidgets.ButtonField"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ButtonField.CreateField">
            <summary>Returns a new instance of the field class.</summary>
            <returns>A new instance of the %ButtonField class.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>Initializes the field object.</summary>
            <param name="sortingEnabled">True if sorting is supported; Otherwise, false.</param>
            <param name="control">The data control that contains the field.</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
            <summary>
            Initializes the specified cell object with the specified cell type, row state, and row index.
            </summary>
            <param name="cell">The cell to initialize.</param>
            <param name="cellType">One of the %DataControlCellType values.</param>
            <param name="rowState">One of the %DataControlRowState values.</param>
            <param name="rowIndex">The zero-based index of the row.</param>
        </member>
        <member name="P:Gaia.WebWidgets.ButtonField.Gaia#WebWidgets#IAjaxDataControlField#Control">
            <summary>
            Gets a reference to the data control that the <see cref="T:System.Web.UI.WebControls.DataControlField"/> object is associated with.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.BoundFieldImpl`1">
            <summary>
            Implementation details for the <see cref="T:Gaia.WebWidgets.BoundField"/> and derived classes.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.BoundFieldImpl`1.#ctor(`0)">
            <summary>
            Initializes new instance of the <see cref="T:Gaia.WebWidgets.BoundFieldImpl`1"/> class.
            </summary>
            <param name="field">Owner field.</param>
        </member>
        <member name="M:Gaia.WebWidgets.BoundFieldImpl`1.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> object to the specified row state. 
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> to initialize.</param>
            <param name="cellType">One of the <see cref="T:System.Web.UI.WebControls.DataControlCellType"/> values.</param>
            <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState"/> values.</param>
            <param name="rowIndex">The zero-based index of the row.</param>
        </member>
        <member name="P:Gaia.WebWidgets.BoundFieldImpl`1.HeaderText">
            <summary>
            Gets or sets the text that is displayed in the header of a data control.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.HybridControlCollection`1">
            <summary>
            Specialized <see cref="T:System.Web.UI.ControlCollection"/> for partitioning owner's Control collection
            into composition and non-composition child controls.
            </summary>
            <typeparam name="T">Type of child controls.</typeparam>
        </member>
        <member name="M:Gaia.WebWidgets.HybridControlCollection`1.#ctor(`0,System.Collections.Generic.ICollection{System.Web.UI.Control})">
            <summary>
            Constructor
            </summary>
            <param name="ownerControl">Owner control.</param>
            <param name="skipTheseControls">Collection of controls to skip.</param>
        </member>
        <member name="M:Gaia.WebWidgets.HybridControlCollection`1.IsValidControl(System.Web.UI.Control)">
            <summary>
            Return true if specified <paramref name="control"/> is valid for this wrapped container.
            </summary>
            <param name="control">Control to check for validity.</param>
            <returns>True if specified <paramref name="control"/> is valid.</returns>
        </member>
        <member name="T:Gaia.WebWidgets.CheckBoxField">
            <summary>
            Represents a Boolean field that is displayed as a check box in a data-bound control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxField.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>Initializes the field object.</summary>
            <param name="enableSorting">True if sorting is supported; Otherwise, false.</param>
            <param name="control">The data control that contains the field.</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
            <summary>
            Initializes the specified cell object with the specified cell type, row state, and row index.
            </summary>
            <param name="cell">The cell to initialize.</param>
            <param name="cellType">One of the %DataControlCellType values.</param>
            <param name="rowState">One of the %DataControlRowState values.</param>
            <param name="rowIndex">The zero-based index of the row.</param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)">
            <summary>
            Initializes the specified cell object with the specified row state.
            </summary>
            <param name="cell">The cell to initialize.</param>
            <param name="rowState">One of the %DataControlRowState values.</param>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxField.OnDataBindField(System.Object,System.EventArgs)">
            <summary>
            Binds the value of a field to a check box in the <see cref="T:Gaia.WebWidgets.CheckBoxField"/> object.
            </summary>
            <param name="sender">The source of the event. 
            </param><param name="e">An <see cref="T:System.EventArgs"/> that contains the event data. 
            </param><exception cref="T:System.Web.HttpException">The control to which the field value is bound is not a <see cref="T:System.Web.UI.WebControls.CheckBox"/> control.
            - or -
            The field value cannot be converted to a Boolean value. 
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxField.CreateField">
            <summary>Returns a new instance of the field class.</summary>
            <returns>A new instance of the %CheckBoxField class.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxField.SetCheckBoxValue(System.Web.UI.WebControls.CheckBox,System.Object)">
            <summary>
            Sets the state of the specified <paramref name="checkBox"/> according to the specified <paramref name="value"/>.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxField.Gaia#WebWidgets#IAjaxBoundField#OnFieldChanged">
            <summary>
            Raises the FieldChanged event.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CheckBoxField.Gaia#WebWidgets#IAjaxBoundField#InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)">
            <summary>
            Initializes the specified <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> object to the specified row state.
            </summary>
            <param name="cell">The <see cref="T:System.Web.UI.WebControls.DataControlFieldCell"/> to initialize.</param>
            <param name="rowState">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState"/> values.</param>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBoxField.HeaderText">
            <summary>
            Gets or sets the text that is displayed in the header of a data control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBoxField.Gaia#WebWidgets#IAjaxDataControlField#Control">
            <summary>
            Gets a reference to the data control that the <see cref="T:System.Web.UI.WebControls.DataControlField"/> object is associated with.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBoxField.Gaia#WebWidgets#IAjaxBoundField#ViewState">
            <summary>
            Gets a dictionary of state information that allows you to save and 
            restore the view state of a <see cref="T:Gaia.WebWidgets.BoundField"/> object across multiple requests for the same page.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CheckBoxField.Gaia#WebWidgets#IAjaxBoundField#SupportsHtmlEncode">
            <summary>
            Gets or sets a value indicating whether HTML encoding is supported by a <see cref="T:Gaia.WebWidgets.BoundField"/> object.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatter.FormatHtmlForInnerHTML(System.String)">
            <summary>
            Formats the specified <paramref name="value"/> to use for innerHtml assignment.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatter.FormatHtmlForInnerAttribute(System.String)">
            <summary>
            Formats the specified <paramref name="value"/> to use for attribute assignment.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RegisterAspect">
            <summary>
            Renders a clientside representation of the aspect with construction and options/parameters.
            It has a nice syntax and allow you to do chaining of 
            function calls.
            Use this one if you create your own Ajax Extension Controls.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterAspect.#ctor(System.String,System.String)">
            <summary>
            Constructor. Takes the control-type to construct and its ClientID. 
            </summary>
            <param name="controltype">controltype (ie. Gaia.Window, Gaia.Button)</param>
            <param name="clientid">ClientID for the client-side construction</param>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterAspect.ToString">
            <summary>
            Render the RegisterAspect script that is to be sent to the client 
            </summary>
            <returns>RegisterAspect script</returns>
        </member>
        <member name="P:Gaia.WebWidgets.RegisterAspect.ClientId">
            <summary>
            ClientID of the control to construct
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegisterAspect.ControlType">
            <summary>
            Type of Control to construct
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.CustomValidator">
            <summary>
            Validates whether the value of an associated input control matches the pattern specified by a regular expression.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.LoadViewState(System.Object)">
            <summary>Loads the previously saved state for the control.</summary>
            <param name="savedState">An object that contains the saved view state values for the control. </param>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.SaveViewState">
            <summary>
            Saves any state that was modified after the <see cref="M:System.Web.UI.Control.TrackViewState"/> method was invoked.
            </summary>
            <returns>
            An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object and stores tracing information about the control if tracing is enabled.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the control content. </param>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.Gaia#WebWidgets#IAjaxControl#RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Calls base class RenderControl method
            </summary>
            <param name="create">XhtmlTagFactory to use to create XHTML</param>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.Gaia#WebWidgets#IAjaxValidator#DetermineRenderUplevel">
            <summary>
            Determines whether the validation control can perform client-side validation.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.Gaia#WebWidgets#IAjaxValidator#RegisterValidatorDeclaration">
            <summary>
            Registers an ECMAScript array declaration using the array name Page_Validators.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.Gaia#WebWidgets#IAjaxValidator#GetControlRenderId(System.String)">
            <summary>
            Gets the client ID of the control having specified id.
            </summary>
            <param name="controlToValidate">The name of the control to get the client ID from. </param>
            <returns>The client ID of the specified control.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.Gaia#WebWidgets#IAjaxValidator#RenderDesignTime(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the validator to the specified HTML <paramref name="writer"/> during design time.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CustomValidator.Gaia#WebWidgets#IAjaxValidator#PropertiesValid">
            <summary>
            Gets a value that indicates whether the control specified by the <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate"/> property is a valid control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CustomValidator.Gaia#WebWidgets#IAjaxValidator#IsEnabled">
            <summary>
            Gets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CustomValidator.Gaia#WebWidgets#IAjaxValidator#RenderUplevel">
            <summary>
            Gets a value denoting if the client browser supports "upward" rendering.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CustomValidator.BaseValidator">
            <summary>
            Returns implementation.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.CustomValidator.PropertyStateManagerCustomValidator">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for <see cref="T:Gaia.WebWidgets.CustomValidator"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.PropertyStateManagerCustomValidator.#ctor(Gaia.WebWidgets.CustomValidator)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerBaseValidator"/> for specified <paramref name="validator"/>.
            </summary>
            <param name="validator">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="validator"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.PropertyStateManagerCustomValidator.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.CustomValidator.PropertyStateManagerCustomValidator.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CustomValidator.PropertyStateManagerCustomValidator.RequiresRerendering">
            <summary>
            Returns true if the associated validator needs to be rerendered.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.CompareValidator">
            <summary>
            Validates whether the value of an associated input control matches the pattern specified by a regular expression.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.LoadViewState(System.Object)">
            <summary>Loads the previously saved state for the control.</summary>
            <param name="savedState">An object that contains the saved view state values for the control. </param>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.SaveViewState">
            <summary>
            Saves any state that was modified after the <see cref="M:System.Web.UI.Control.TrackViewState"/> method was invoked.
            </summary>
            <returns>
            An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object and stores tracing information about the control if tracing is enabled.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the control content. </param>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.Gaia#WebWidgets#IAjaxControl#RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Calls base class RenderControl method
            </summary>
            <param name="create">XhtmlTagFactory to use to create XHTML</param>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.Gaia#WebWidgets#IAjaxValidator#DetermineRenderUplevel">
            <summary>
            Determines whether the validation control can perform client-side validation.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.Gaia#WebWidgets#IAjaxValidator#RegisterValidatorDeclaration">
            <summary>
            Registers an ECMAScript array declaration using the array name Page_Validators.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.Gaia#WebWidgets#IAjaxValidator#GetControlRenderId(System.String)">
            <summary>
            Gets the client ID of the control having specified id.
            </summary>
            <param name="controlToValidate">The name of the control to get the client ID from. </param>
            <returns>The client ID of the specified control.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.Gaia#WebWidgets#IAjaxValidator#RenderDesignTime(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the validator to the specified HTML <paramref name="writer"/> during design time.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CompareValidator.Gaia#WebWidgets#IAjaxValidator#PropertiesValid">
            <summary>
            Gets a value that indicates whether the control specified by the <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate"/> property is a valid control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CompareValidator.Gaia#WebWidgets#IAjaxValidator#IsEnabled">
            <summary>
            Gets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CompareValidator.Gaia#WebWidgets#IAjaxValidator#RenderUplevel">
            <summary>
            Gets a value denoting if the client browser supports "upward" rendering.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CompareValidator.BaseValidator">
            <summary>
            Returns implementation.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.CompareValidator.PropertyStateManagerCompareValidator">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for <see cref="T:Gaia.WebWidgets.CompareValidator"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.PropertyStateManagerCompareValidator.#ctor(Gaia.WebWidgets.CompareValidator)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerBaseValidator"/> for specified <paramref name="validator"/>.
            </summary>
            <param name="validator">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="validator"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.PropertyStateManagerCompareValidator.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.CompareValidator.PropertyStateManagerCompareValidator.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.CompareValidator.PropertyStateManagerCompareValidator.RequiresRerendering">
            <summary>
            Returns true if the associated validator needs to be rerendered.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.ControlListOf`1">
            <summary>
            A special control list wrapper that works on top of an existing controls collection and only
            return the controls of the specified generic <typeparamref name="T"/> type.
            </summary>
            <typeparam name="T">Control type.</typeparam>
        </member>
        <member name="M:Gaia.WebWidgets.ControlListOf`1.#ctor(`0)">
            <summary>
            Constructor
            </summary>
            <param name="ownerControl">The owner of the controls collection</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlListOf`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"/>.
            </summary>
            <returns>
            The position into which the new element was inserted.
            </returns>
            <param name="value">The <see cref="T:System.Object"/> to add to the <see cref="T:System.Collections.IList"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.
            -or- 
            The <see cref="T:System.Collections.IList"/> has a fixed size. 
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlListOf`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"/> contains a specific value.
            </summary>
            <returns>
            true if the <see cref="T:System.Object"/> is found in the <see cref="T:System.Collections.IList"/>; otherwise, false.
            </returns>
            <param name="value">The <see cref="T:System.Object"/> to locate in the <see cref="T:System.Collections.IList"/>.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlListOf`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"/>.
            </summary>
            <returns>
            The index of <paramref name="value"/> if found in the list; otherwise, -1.
            </returns>
            <param name="value">The <see cref="T:System.Object"/> to locate in the <see cref="T:System.Collections.IList"/>.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlListOf`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/> should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"/> to insert into the <see cref="T:System.Collections.IList"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.
            -or- 
            The <see cref="T:System.Collections.IList"/> has a fixed size. 
            </exception>
            <exception cref="T:System.NullReferenceException"><paramref name="value"/> is null reference in the <see cref="T:System.Collections.IList"/>.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlListOf`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to remove from the <see cref="T:System.Collections.IList"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.
            -or- 
            The <see cref="T:System.Collections.IList"/> has a fixed size. 
            </exception>
        </member>
        <member name="M:Gaia.WebWidgets.ControlListOf`1.System#Collections#Generic#IList{T}#IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:Gaia.WebWidgets.ControlListOf`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Gaia.WebWidgets.ControlListOf`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.IList"/> is read-only.</exception>
        </member>
        <member name="P:Gaia.WebWidgets.ControlListOf`1.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.IList"/> has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:Gaia.WebWidgets.ControlListOf`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="T:Gaia.WebWidgets.AspectCollection">
            <summary>
            Helper class to make registering of ParentControl abstracted while adding Aspects into a Control
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.#ctor(Gaia.WebWidgets.IAspectableAjaxControl)">
            <summary>
            Constructor
            </summary>
            <param name="ctrl">ParentControl of List of aspects</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.IndexOf(Gaia.WebWidgets.IAspect)">
            <summary>
            Returns the index of the given item
            </summary>
            <param name="item">item to return index of</param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.Insert(System.Int32,Gaia.WebWidgets.IAspect)">
            <summary>
            Inserts a new item at the specific index
            </summary>
            <param name="index">index to insert item at</param>
            <param name="item">item to insert</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an item at given index
            </summary>
            <param name="index">What index to remove an item from</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.Add(Gaia.WebWidgets.IAspect)">
            <summary>
            Apends an item to the list of Aspects
            </summary>
            <param name="item">item to append</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.Clear">
            <summary>
            Empties the list of Aspects
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.Contains(Gaia.WebWidgets.IAspect)">
            <summary>
            Returns true if given Aspect exists within the list of Aspects
            </summary>
            <param name="item">item to query for</param>
            <returns>true of item exists in the list of Aspects</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.Contains``1">
            <summary>
            Returns true if an aspect of a given type exists in the collection. Since most Aspects are
            supposed to only exist ONE instance of we created this method to easily be able to spot duplicates.
            </summary>
            <typeparam name="T">Type to search for</typeparam>
            <returns>true if list contains one instance of the given type</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.CopyTo(Gaia.WebWidgets.IAspect[],System.Int32)">
            <summary>
            Copies the list of Aspects to the given array
            </summary>
            <param name="array">array to copy into</param>
            <param name="arrayIndex">index in array to start copying into</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.Find``1">
            <summary>
            Searches the list of Aspects for the given Aspect type and returns it
            </summary>
            <typeparam name="T">Type to find</typeparam>
            <returns>Aspect of T</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.Bind``1">
            <summary>
            Binds an aspect of a particular type and returns it. It's important to use the Bind function instead of the Add/Insert
            function if you intend to automatically map properties and events over custom addition of Aspects. The reason for this is
            that MemberBound aspects are given less priority than Custom Aspects added to the collection from the user. This makes
            it quite easy to override the mapped behavior with custom functionality. 
            </summary>
            <returns>The Aspect</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.Bind``1(System.Boolean)">
            <summary>
            Binds an aspect of a particular type and returns it. It's important to use the Bind function instead of the Add/Insert
            function if you intend to automatically map properties and events over custom addition of Aspects. The reason for this is
            that MemberBound aspects are given less priority than Custom Aspects added to the collection from the user. This makes
            it quite easy to override the mapped behavior with custom functionality. 
            </summary>
            <param name="addAspect">If set to true will automatically find/create the aspect and mark it as bound. If set to false
            it will try to remove the Aspect if it was bound and return the aspect for further cleanup. If the Aspect was not
            bound and addAspect is set to false, the aspect is simply returned</param>
            <returns>The Aspect</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.IsBound``1">
            <summary>
            Returns true if a typeof Aspect is bound to a property/event
            </summary>
            <typeparam name="T">The Aspect of a given type</typeparam>
            <returns>If bound returns true, otherwise false.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.IsBound(Gaia.WebWidgets.IAspect)">
            <summary>
            Returns true if a particular Aspect is bound to a property/event
            </summary>
            <param name="item">The aspect instance</param>
            <returns>If bound returns true, otherwise false.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.Remove(Gaia.WebWidgets.IAspect)">
            <summary>
            Removes given item from list of Aspects
            </summary>
            <param name="item">item to remove</param>
            <returns>true if removal was performed</returns>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.Remove``1">
            <summary>
            Removes a given type from list of Aspects
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectCollection.GetEnumerator">
            <summary>
            Returns the enumerator or the list of Aspects
            </summary>
            <returns>Enumerator for the list of Aspects</returns>
        </member>
        <member name="P:Gaia.WebWidgets.AspectCollection.Item(System.Int32)">
            <summary>
            Returns the Aspect at the given index
            </summary>
            <param name="index">index of item to return</param>
            <returns>IAspect at specific index</returns>
        </member>
        <member name="P:Gaia.WebWidgets.AspectCollection.Count">
            <summary>
            Returns the number of Aspects in the list of Aspects
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.ContainerHtmlTextWriterPartialForce.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Gaia.WebWidgets.ContainerHtmlTextWriterPartialForce"/> class that uses a default tab string.
            </summary>
            <param name="writer">
            The <see cref="T:System.IO.TextWriter"/> instance that renders the markup content. 
            </param>
        </member>
        <member name="T:Gaia.WebWidgets.Effects.EffectHide">
            <summary>
            Hides the AjaxControl
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.Effects.EffectHide.GetElementMethod">
            <summary>
            Returns the function name for this Effect
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gaia.WebWidgets.IEffectContainer">
            <summary>
            Interface applied to Effect Containers for accessing the Child Effects
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.IEffectContainer.Effects">
            <summary>
            List of Child Effects
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectMouseMove">
            <summary>
            Aspect class for trapping MouseMove Events on elements. You would think that this is *impossible* online since it would 
            result in something similar to a DOS attack on the server, however the polling time can be configured. 
            </summary>
            <example>
            <code title="ASPX Markup for AspectMouseMove" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectMouseMove\Overview\Default.aspx"  />
            </code> 
            <code title="Adding AspectModal in CodeBehind" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectMouseMove\Overview\Default.aspx.cs" region="Code" />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AspectMouseMove.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectMouseMove.#ctor(System.EventHandler{Gaia.WebWidgets.AspectMouseMove.MouseMoveEventArgs})">
            <summary>
            Constructor taking event handler for the MouseMoved Event
            </summary>
            <param name="mouseMove">delegate called when mouse is moved</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectMouseMove.#ctor(System.EventHandler{Gaia.WebWidgets.AspectMouseMove.MouseMoveEventArgs},System.Int32)">
            <summary>
            Constructor taking event handler for the MouseMoved Event and number of milliseconds between
            events the client should wait before firing the next event when mouse is continously moved.
            </summary>
            <param name="mouseMove">delegate called when mouse is moved</param>
            <param name="millisecondsInterval">How often the MouseMove event will raise, not if this value is too small it will completely eat up all the bandwidth for both the server and the client. Default value is 100</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectMouseMove.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectMouseMove.EffectMouseMove">
            <summary>
            Add this EffectEvent to a control to add an effect when the mouse is moving over the control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectMouseMove.UseRelativeCoordinates">
            <summary>
            When you click the element which this aspect is attached to, you will retrieve the coordinates on the server
            By default it will capture the absolute x,y position on the entire viewport, but if you want to only capture
            x,y relative to the aspects parent container you can set this value to true. 
            </summary>
            <example>
            <code title="Demonstrates usage of RelativeCoordinates" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectClickable\RelativeCoordinates\Default.aspx.cs" region="Code" /> 
            </code> 
            </example>
        </member>
        <member name="E:Gaia.WebWidgets.AspectMouseMove.MouseMove">
            <summary>
            Event raised when mouse is moved on the element's surface. X and y coords are available in the 
            MouseMoveEventArgs passed.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectMouseMove.MillisecondsInterval">
            <summary>
            Since to call the server on every mousemove event is impossible due to bandwidth usage
            you can set at what interval the server will be called if the mouse is moved to reduce
            the bandwidth usage. This value is set in milliseconds meaning 1000 == 1 second.
            The default value for this property is 100. Be CAREFUL if you set this value to a "low" value
            since this might seriously increase the bandwidth traffic for your users (and your servers)
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectMouseMove.MouseMoveEventArgs">
            <summary>
            EventArgs for the MouseMove Event
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectDroppable">
            <summary>
            Aspect class for making elements droppable. 
            Element you attach this Aspect to can "catch" Drop events from other Draggable 
            elements that have the same Accept string.
            </summary>
            <example>
            <code title="Passing a CustomID via Drag and Drop (ASPX)" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectDroppable\Overview\Default.aspx" />
            </code> 
            <code title="Passing a CustomID via Drag and Drop" lang="C#"> 
            <code source="..\Gaia.WebWidgets.Samples\Aspects\AspectDroppable\Overview\Default.aspx.cs" region="Code" />
            </code>
            </example>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDroppable.#ctor">
            <summary>
            Default constructor, sets no event handler for the Dropped event
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDroppable.#ctor(System.EventHandler{Gaia.WebWidgets.AspectDroppable.DroppedEventArgs})">
            <summary>
            Constructor taking event handler for the Dropped event
            </summary>
            <param name="dropped">delegate called when widget with AspectDraggable is dropped onto this widget</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDroppable.#ctor(System.EventHandler{Gaia.WebWidgets.AspectDroppable.DroppedEventArgs},System.String)">
            <summary>
            Constructor taking event handler for the Dropped event and a string which declares the "hover class" (CSS
            class to be added to widget) when an AspectDraggable widget is "on top" of it.
            </summary>
            <param name="dropped">delegate called when widget with AspectDraggable is dropped onto this widget</param>
            <param name="hoverClass">CSS class to modify the Widget by when a draggable that's accepted is dragged 
            over it</param>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDroppable.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDroppable.EffectEventDropped">
            <summary>
            Use this EffectEvent to wire up an effect when the dragging item is actually dropped on a drop container. 
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectDroppable.Dropped">
            <summary>
            Event raised when a Draggable element that is dragged with AspectDraggable onto and released on top of the 
            AspectDroppable element
            </summary>
        </member>
        <member name="E:Gaia.WebWidgets.AspectDroppable.Dropping">
            <summary>
            Event raised after a Draggable element is dragged over an <see cref="T:Gaia.WebWidgets.AspectDroppable"/> element, 
            but before the resizing is handled by the <see cref="T:Gaia.WebWidgets.AspectDroppable"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDroppable.HoverClass">
            <summary>
            If set then the widget will change CSS class when a widget which is draggable is on top of it and would
            be dropped on top of it if dropped
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectDroppable.DroppableEventArgs">
            <summary>
            Abstract base class for <see cref="T:System.EventArgs"/> hierarchy for <see cref="T:Gaia.WebWidgets.AspectDroppable"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDroppable.DroppableEventArgs.DraggedID">
            <summary>
            The ID of the element dropped
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDroppable.DroppableEventArgs.IdToPass">
            <summary>
            The IdToPass from the AspectDraggable Aspect.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectDroppable.DroppingEventArgs">
            <summary>
            Provides data for <see cref="E:Gaia.WebWidgets.AspectDroppable.Dropping"/> event.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDroppable.DroppingEventArgs.#ctor(System.String,System.String,System.Drawing.Point)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.AspectDroppable.DroppingEventArgs"/> class using specified parameters.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDroppable.DroppingEventArgs.Cancel">
            <summary>
            Gets or sets if the <see cref="E:Gaia.WebWidgets.AspectDroppable.Dropping"/> event should be cancelled.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.AspectDroppable.DroppingEventArgs.Position">
            <summary>
            Returns drop position.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.AspectDroppable.DroppedEventArgs">
            <summary>
            Provides data for the <see cref="E:Gaia.WebWidgets.AspectDroppable.Dropped"/> event.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.AspectDroppable.DroppedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.AspectDroppable.DroppedEventArgs"/> class.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.GaiaLicenseValidator">
            <summary>
            Concrete implementation of GPL License Validation
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.TemplateField">
            <summary>
            Represents a field that displays custom content in a data-bound control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TemplateField.#ctor">
            <summary>
            Initializes new instance of the <see cref="T:Gaia.WebWidgets.TemplateField"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.TemplateField.CreateField">
            <summary>Returns a new instance of the field class.</summary>
            <returns>A new instance of the %TemplateField class.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.TemplateField.Initialize(System.Boolean,System.Web.UI.Control)">
            <summary>Initializes the field object.</summary>
            <param name="sortingEnabled">True if sorting is supported; Otherwise, false.</param>
            <param name="control">The data control that contains the field.</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
            <summary>
            Initializes the specified cell object with the specified cell type, row state, and row index.
            </summary>
            <param name="cell">The cell to initialize.</param>
            <param name="cellType">One of the %DataControlCellType values.</param>
            <param name="rowState">One of the %DataControlRowState values.</param>
            <param name="rowIndex">The zero-based index of the row.</param>
        </member>
        <member name="P:Gaia.WebWidgets.TemplateField.Gaia#WebWidgets#IAjaxDataControlField#Control">
            <summary>
            Gets a reference to the data control that the <see cref="T:System.Web.UI.WebControls.DataControlField"/> object is associated with.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.MultiView">
            <summary>
             The Gaia Ajax MultiView represents a control that acts as a container for a group of View controls. 
            It inherits from the <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.multiview.aspx">ASP.NET MultiView</a>, 
            and has built-in Ajax behaviour.<br />It is often a better alternative than using panels, because it will help you to only display one View at the time.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.ForceAnUpdate">
            <summary>
            Forces the control to redraw and re-instantiate all of it child controls
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.ForceAnUpdateWithAppending">
            <summary>
            Forces the control to redraw and append new chlid controls to existing ones
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.TrackControlAdditions">
            <summary>
            Signalizes that new controls that never has been rendered will be appended after this method invocation.-
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.Focus">
            <summary>
            Sets input focus to a control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.LoadViewState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/> methods for documentation. 
            This method only forwards to those methods.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.OnPreRender(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnPreRender"/> method for documentation. This method also calls into that method.
            </summary>
            <param name="e">EventArgs passed on from the system</param>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.SaveViewState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveViewState(System.Object)"/> method for documentation. This method only forwards to that method.
            </summary>
            <returns>the saved ViewState</returns>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Rendering
            </summary>
            <param name="writer">The HtmlTextWriter to write the control into</param>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.MultiView.Gaia#WebWidgets#IAjaxControl#RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Calls base class RenderControl method
            </summary>
            <param name="create">XhtmlTagFactory to render into</param>
        </member>
        <member name="P:Gaia.WebWidgets.MultiView.Aspects">
            <summary>
            <see cref="P:Gaia.WebWidgets.IAspectableAjaxControl.Aspects"></see> for documentation for this method
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.MultiView.Effects">
            <summary>
            Collection of Effects for the Control. 
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory">
            <summary>
            The XhtmlTagFactory works on top of the <see cref="T:Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriter"></see> and provides an easy syntax to build complex 
            xhtml structures in code. 
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.GetHtmlTextWriter">
            <summary>
            Retrieve the underlying ASP.HtmlTextWriter. This operation will flush
            the stream.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.GetXhtmlTextWriter">
            <summary>
            Retrieve the instance of the XhtmlTextWriter used within the factory
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.#ctor(Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriter)">
            <summary>
            Constructor, pass in the XhtmlTextWriter stream you wish to write to
            </summary>
            <param name="writer">XhtmlTextWriter</param>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.#ctor(Gaia.WebWidgets.HtmlFormatting.XhtmlTextWriter,System.Boolean)">
            <summary>
            Overridden constructor to make it possible to create a "non-validating" version of the XhtmlTagFactory.
            Don't use this unless you *really* have to.
            </summary>
            <param name="writer">Underlaying writer to write into</param>
            <param name="disableValidation">If true will disable validation of XHTML</param>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.#ctor(System.IO.TextWriter,System.Boolean)">
            <summary>
            Overridden constructor to make it possible to create a "non-validating" version of the XhtmlTagFactory.
            Don't use this unless you *really* have to.
            </summary>
            <param name="writer">Unerlaying TextWriter to write into</param>
            <param name="disableValidation">If true will disable validation of XHTML</param>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.#ctor(System.IO.TextWriter)">
            <summary>
            Overloaded constructor taking a TextWriter which you want to write to
            </summary>
            <param name="writer">Write rto write onto</param>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.A">
            <summary>
            The a element is used to create a hyperlink. 
            The destination of the hyperlink is specified in the href attribute, 
            and the text or image for the hyperlink is specified between the opening 
            <a> and closing </a> tags.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.A(System.String)">
            <summary>
            The a element is used to create a hyperlink. 
            The destination of the hyperlink is specified in the href attribute, 
            and the text or image for the hyperlink is specified between the opening 
            <a> and closing </a> tags.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.A(System.String,System.String)">
            <summary>
            The a element is used to create a hyperlink. 
            The destination of the hyperlink is specified in the href attribute, 
            and the text or image for the hyperlink is specified between the opening 
            <a> and closing </a> tags.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class to use for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.A(System.String,System.String,System.String)">
            <summary>
            The a element is used to create a hyperlink. 
            The destination of the hyperlink is specified in the href attribute, 
            and the text or image for the hyperlink is specified between the opening 
            <a> and closing </a> tags.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class to use for element</param>
            <param name="href">Target for URL</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Body">
            <summary>
            The body element contains the contents of a Web page.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Body(System.String)">
            <summary>
            The body element contains the contents of a Web page.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Head">
            <summary>
            The head element contains information about the current document, 
            such as its title, keywords that may be useful to search engines, 
            and other data that is not considered to be document content. 
            This information is usually not displayed by browsers.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Head(System.String)">
            <summary>
            The head element contains information about the current document, 
            such as its title, keywords that may be useful to search engines, 
            and other data that is not considered to be document content. 
            This information is usually not displayed by browsers.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Html">
            <summary>
            The html element is the root element that contains all other elements. 
            It must appear only once and usually follows the document declaration.
            </summary>        
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Html(System.String)">
            <summary>
            The html element is the root element that contains all other elements. 
            It must appear only once and usually follows the document declaration.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Title">
            <summary>
            The title element is used to identify the document.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Title(System.String)">
            <summary>
            The title element is used to identify the document.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Abbr">
            <summary>
            An abbreviation is a shortened form of a word or phrase. 
            The abbr element is used to identify an abbreviation, 
            and can help assistive technologies to correctly pronounce abbreviated text.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Acronym">
            <summary>
            An acronym is a word formed from the initial letters of a series of words. 
            The acronym element identifies acronyms, and can help assistive technologies 
            to correctly pronounce the acronym.
            <br />
            Inline Element.
            </summary>        
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Address">
            <summary>
            The address element is used to supply contact information. 
            This element often appears at the beginning or end of a document.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.BlockQuote">
            <summary>
            The blockquote element is used to identify larger amounts of quoted text.
            <br />
            Block Level Element.
            </summary>        
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Br">
            <summary>
            The br element forcibly breaks (ends) the current line of text. 
            Web browsers render these line breaks as hard returns.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Br(System.String)">
            <summary>
            The br element forcibly breaks (ends) the current line of text. 
            Web browsers render these line breaks as hard returns.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Cite">
            <summary>
            The cite element contains a citation or reference to another source.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Code">
            <summary>
            The code element contains a fragment of computer code.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Div">
            <summary>
            The div element offers a generic way of grouping areas of content.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Div(System.String)">
            <summary>
            The div element offers a generic way of grouping areas of content.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Div(System.String,System.String)">
            <summary>
            The div element offers a generic way of grouping areas of content.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Dfn">
            <summary>
            The dfn element contains the defining instance of the enclosed term.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Em">
            <summary>
            The em element is used to indicate emphasis.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Em(System.String)">
            <summary>
            The em element is used to indicate emphasis.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H1">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H1(System.String)">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H2">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H2(System.String)">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H3">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H3(System.String)">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H4">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H4(System.String)">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H5">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H5(System.String)">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H6">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.H6(System.String)">
            <summary>
            The elements h1 to h6 group the contents of a document 
            into sections, and briefly describe the topic of each section. 
            There are six levels of headings, h1 being the most important 
            and h6 the least important.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Kbd">
            <summary>
            The kbd element indicates input to be entered by the user.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.P">
            <summary>
            The p element represents a paragraph.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.P(System.String)">
            <summary>
            The p element represents a paragraph.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.P(System.String,System.String)">
            <summary>
            The p element represents a paragraph.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Pre">
            <summary>
            The pre element instructs visual Web browsers to render content 
            in a pre-formatted fashion. Most Web browsers will render 
            pre-formatted content in a monospace font while preserving 
            white space (spaces, tabs and hard returns).
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Q">
            <summary>
            The q is used to identify short quoted text.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Samp">
            <summary>
            The samp element is used to designate sample output 
            from programs, scripts, etc.
            <br />
            Block Level Element.
            <br />
            Inline Element. ALSO.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Span">
            <summary>
            The span element offers a generic way of adding structure to content.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Span(System.String)">
            <summary>
            The span element offers a generic way of adding structure to content.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Span(System.String,System.String)">
            <summary>
            The span element offers a generic way of adding structure to content.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Strong">
            <summary>
            The strong element is used to indicate stronger emphasis.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Var">
            <summary>
            The var element is used to indicate an instance of a 
            computer code variable or program argument.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Dl">
            <summary>
            The dl element is used to create a list where each item in the list 
            comprises two parts: a term and a description. A glossary of terms 
            is a typical example of a definition list, where each item consists 
            of the term being defined and a definition of the term.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Dt">
            <summary>
            The dt element is a definition term for an item in a definition list.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Dd">
            <summary>
            The dd element is a definition description for an item in a definition list.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Ol">
            <summary>
            The ol element is used to create ordered lists. An ordered list is a grouping 
            of items whose sequence in the list is important. For example, the sequence 
            of steps in a recipe is important if the result is to be the intended one.
            Every ol element must contain at least one li element.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Ul">
            <summary>
            The ul element is used to create unordered lists. An unordered list is a 
            grouping of items whose sequence in the list is not important. 
            For example, the order in which ingredients for a recipe are presented 
            will not affect the outcome of the recipe.
            Every ul element must contain at least one li element.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Ul(System.String)">
            <summary>
            
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Ul(System.String,System.String)">
            <summary>
            The li element represents a list item in ordered lists and unordered lists.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Li">
            <summary>
            The li element represents a list item in ordered lists and unordered lists.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Li(System.String)">
            <summary>
            The li element represents a list item in ordered lists and unordered lists.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Li(System.String,System.String)">
            <summary>
            The li element represents a list item in ordered lists and unordered lists.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Object">
            <summary>
            The object element provides a generic way of embedding objects such as images, 
            movies and applications (Java applets, browser plug-ins, etc.) into Web pages. 
            param elements contained inside the object element are used to configure the 
            embedded object. Besides param elements, the object element can contain 
            alternate content which can be text or another object element. Alternate content 
            serves as a fall-back mechanism for browsers that are unable to process the embedded object.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Param">
            <summary>
            The param element is used to customize embedded objects that are loaded into a 
            Web browser via the object element. The param element is a generic way of passing 
            data to embedded objects in the form of name/value pairs. The need for param 
            elements and the number of param elements depends on the embedded object.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.B">
            <summary>
            The b element renders text in bold style.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Big">
            <summary>
            The big element renders text in a large font.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Hr">
            <summary>
            The hr element is used to separate sections of content. 
            Though the name of the hr element is "horizontal rule", 
            most visual Web browsers render hr as a horizontal line.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.I">
            <summary>
            The i element renders text in italic style.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Small">
            <summary>
            The small element renders text in a small font.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Sub">
            <summary>
            The sub element indicates that its contents should be 
            regarded as a subscript.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Tt">
            <summary>
            The tt element renders text in a teletype or a monospaced font.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Del">
            <summary>
            The del element is used to mark up modifications made to a document. 
            Specifically, the del element is used to indicate that a section 
            of content has changed and has therefore been removed.
            <br />
            Block Level Element.
            <br />
            Inline Element. ALSO
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Ins">
            <summary>
            The ins element is used to mark up content that has been inserted 
            into the current version of a document. The ins element indicates 
            that content in the previous version of the document has been changed, 
            and that the changes are found inside the ins element.
            <br />
            Block Level Element.
            <br />
            Inline Element. ALSO.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Bdo">
            <summary>
            Unlike English, which is written from left-to-right (LTR), some languages, 
            such as Arabic and Hebrew, are written from right-to-left (RTL). 
            When the same paragraph contains both RTL and LTR text, this is known as 
            bidirectional text or "bidi" text for short. 
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Button">
            <summary>
            The button element is used to create button controls for forms. 
            Buttons created using the button element are similar in functionality 
            to buttons created using the input element, but offer greater rendering options.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Button(System.String)">
            <summary>
            The button element is used to create button controls for forms. 
            Buttons created using the button element are similar in functionality 
            to buttons created using the input element, but offer greater rendering options.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Button(System.String,System.String)">
            <summary>
            The button element is used to create button controls for forms. 
            Buttons created using the button element are similar in functionality 
            to buttons created using the input element, but offer greater rendering options.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.FieldSet">
            <summary>
            The fieldset element adds structure to forms by grouping together 
            related controls and labels.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Form">
            <summary>
            The form element is used to create data entry forms. 
            Data collected in the form is sent to the server for 
            processing by server-side scripts such as PHP, ASP, etc.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Input">
            <summary>
            The input element is a multi-purpose form control. 
            The type attribute specifies the type of form control to be created.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Input(System.String)">
            <summary>
            The input element is a multi-purpose form control. 
            The type attribute specifies the type of form control to be created.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Input(System.String,System.String)">
            <summary>
            The input element is a multi-purpose form control. 
            The type attribute specifies the type of form control to be created.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Input(System.String,System.String,System.String,System.String)">
            <summary>
            The input element is a multi-purpose form control. 
            The type attribute specifies the type of form control to be created.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <param name="type"></param>
            <param name="value"></param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Label">
            <summary>
            The label element associates a label with form controls such as input, 
            textarea, select and object. This association enhances the usability of forms. 
            For example, when users of visual Web browsers click in a label, 
            focus is automatically set in the associated form control. 
            For users of assistive technology, establishing associations between labels 
            and controls helps clarify the spatial relationships found in forms and makes 
            them easier to navigate.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Label(System.String)">
            <summary>
            The label element associates a label with form controls such as input, 
            textarea, select and object. This association enhances the usability of forms. 
            For example, when users of visual Web browsers click in a label, 
            focus is automatically set in the associated form control. 
            For users of assistive technology, establishing associations between labels 
            and controls helps clarify the spatial relationships found in forms and makes 
            them easier to navigate.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Label(System.String,System.String)">
            <summary>
            The label element associates a label with form controls such as input, 
            textarea, select and object. This association enhances the usability of forms. 
            For example, when users of visual Web browsers click in a label, 
            focus is automatically set in the associated form control. 
            For users of assistive technology, establishing associations between labels 
            and controls helps clarify the spatial relationships found in forms and makes 
            them easier to navigate.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Legend">
            <summary>
            The legend element is a caption to a fieldset element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Select">
            <summary>
            The select element is used to create an option selector 
            form control which most Web browsers render as a listbox control. 
            The list of values for this control is created using option elements. 
            These values can be grouped together using the optgroup element.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Select(System.String)">
            <summary>
            The select element is used to create an option selector 
            form control which most Web browsers render as a listbox control. 
            The list of values for this control is created using option elements. 
            These values can be grouped together using the optgroup element.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Select(System.String,System.String)">
            <summary>
            The select element is used to create an option selector 
            form control which most Web browsers render as a listbox control. 
            The list of values for this control is created using option elements. 
            These values can be grouped together using the optgroup element.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.OptGroup">
            <summary>
            The optgroup element is used to group the choices offered in select form controls. 
            Users find it easier to work with long lists if related sections are grouped together.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Option">
            <summary>
            The option element represents a choice offered by select form controls.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Option(System.String)">
            <summary>
            The option element represents a choice offered by select form controls.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.TextArea">
            <summary>
            The textarea element is used to create a multi-line text input form control.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.TextArea(System.String)">
            <summary>
            The textarea element is used to create a multi-line text input form control.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.TextArea(System.String,System.String)">
            <summary>
            The textarea element is used to create a multi-line text input form control.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Caption">
            <summary>
            The caption element creates a caption for a table. If a caption is to be used, 
            it should be the first element after the opening table element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Caption(System.String)">
            <summary>
            The caption element creates a caption for a table. If a caption is to be used, 
            it should be the first element after the opening table element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Caption(System.String,System.String)">
            <summary>
            The caption element creates a caption for a table. If a caption is to be used, 
            it should be the first element after the opening table element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Col">
            <summary>
            In XHTML, tables are physically constructed from rows, rather than columns. 
            Table rows contain table cells. In visual Web browsers, when cells line up 
            beneath each other, they are perceived as columns.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Col(System.String)">
            <summary>
            In XHTML, tables are physically constructed from rows, rather than columns. 
            Table rows contain table cells. In visual Web browsers, when cells line up 
            beneath each other, they are perceived as columns.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.ColGroup">
            <summary>
            In XHTML, tables are physically constructed from rows, rather than columns. 
            Table rows contain table cells. In visual Web browsers, when cells line up 
            beneath each other, they are perceived as columns.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.ColGroup(System.String)">
            <summary>
            In XHTML, tables are physically constructed from rows, rather than columns. 
            Table rows contain table cells. In visual Web browsers, when cells line up 
            beneath each other, they are perceived as columns.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Table">
            <summary>
            The table element is used to define a table. A table is a construct where data 
            is organized into rows and columns of cells.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Table(System.String)">
            <summary>
            The table element is used to define a table. A table is a construct where data 
            is organized into rows and columns of cells.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Table(System.String,System.String)">
            <summary>
            The table element is used to define a table. A table is a construct where data 
            is organized into rows and columns of cells.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Table(System.String,System.String,System.String,System.String)">
            <summary>
            The table element is used to define a table. A table is a construct where data 
            is organized into rows and columns of cells.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <param name="cellpadding"></param>
            <param name="cellspacing"></param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Table(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            The table element is used to define a table. A table is a construct where data 
            is organized into rows and columns of cells.
            <br />
            Block Level Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <param name="cellpadding"></param>
            <param name="cellspacing"></param>
            <param name="border"></param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Tbody">
            <summary>
            The tbody element can be used to group table data rows. This can be useful 
            when a Web browser supports scrolling of table rows in longer tables. 
            Multiple tbody elements can be used for independent scrolling.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Tbody(System.String)">
            <summary>
            The tbody element can be used to group table data rows. This can be useful 
            when a Web browser supports scrolling of table rows in longer tables. 
            Multiple tbody elements can be used for independent scrolling.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Td">
            <summary>
            The td element defines a data cell in a table (i.e. cells that are not header cells).
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Td(System.String)">
            <summary>
            The td element defines a data cell in a table (i.e. cells that are not header cells).
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Td(System.String,System.String)">
            <summary>
            The td element defines a data cell in a table (i.e. cells that are not header cells).
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Td(System.String,System.String,System.String)">
            <summary>
            The td element defines a data cell in a table (i.e. cells that are not header cells).
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <param name="title"></param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Tfoot">
            <summary>
            The tfoot element can be used to group table rows that contain table footer information. 
            This may be useful when printing longer tables that span several printed pages, 
            since the data in tfoot is repeated on each page. The tfoot element should appear before 
            tbody elements.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Th">
            <summary>
            
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Th(System.String)">
            <summary>
            The th element defines a table header cell.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Th(System.String,System.String)">
            <summary>
            The th element defines a table header cell.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Th(System.String,System.String,System.String)">
            <summary>
            The th element defines a table header cell.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <param name="title"></param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Thead">
            <summary>
            The thead element can be used to group table rows that contain table header information. 
            This can be useful when printing long tables that span several printed pages, 
            since the data in thead will be repeated on each page.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Thead(System.String)">
            <summary>
            The thead element can be used to group table rows that contain table header information. 
            This can be useful when printing long tables that span several printed pages, 
            since the data in thead will be repeated on each page.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Tr">
            <summary>
            The tr element defines a table row.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Tr(System.String)">
            <summary>
            The tr element defines a table row.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Tr(System.String,System.String)">
            <summary>
            The tr element defines a table row.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Tr(System.String,System.String,System.String)">
            <summary>
            The tr element defines a table row.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <param name="title"></param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Img(System.String,System.String,System.String,System.String)">
            <summary>
            The img element is used to define an image.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <param name="cssclass">CSS class for element</param>
            <param name="src"></param>
            <param name="alt"></param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Area">
            <summary>
            The area element identifies geometric regions of a client-side image map, 
            and provides a hyperlink for each region.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Map">
            <summary>
            The map element specifies a client-side image map that may be referenced 
            by elements such as img, select and object.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Map(System.String)">
            <summary>
            The map element specifies a client-side image map that may be referenced 
            by elements such as img, select and object.
            <br />
            Inline Element.
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Meta">
            <summary>
            The meta element is a generic mechanism for specifying metadata for a Web page. 
            Some search engines use this information.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.NoScript">
            <summary>
            The noscript element allows authors to provide alternate content when a script 
            is not executed. This can be because the Web browser is configured not to 
            process scripts, or because the given script language is not supported.
            <br />
            Block Level Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Script">
            <summary>
            The script element places a client-side script, such as JavaScript, within a document. 
            This element may appear any number of times in the head or body of a Web page. 
            The script element may contain a script (called an embedded script) or point via 
            the src attribute to a file containing a script (an external script).
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Style">
            <summary>
            The style element can contain CSS rules (called embedded CSS) or a URL that leads 
            to a file containing CSS rules (called external CSS).
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Link">
            <summary>
            The link element conveys relationship information that can be used by Web browsers and 
            search engines. You can have multiple link elements that link to different resources 
            or describe different relationships. The link elements can be contained in the head element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Base">
            <summary>
            To resolve relative URLs, Web browsers will use the base URL from where the Web page 
            was downloaded. In some circumstances, it is necessary to instruct the Web browser to 
            use a different base URL, in which case the base element is used.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Iframe">
            <summary>
            The Iframe Module defines an element for the definition of inline frames
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Iframe(System.String)">
            <summary>
            The Iframe Module defines an element for the definition of inline frames
            </summary>
            <param name="id">XHTML id attribute of element</param>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Ruby">
            <summary>
            Ruby is mechanism for adding annotations to characters of East Asian languages such 
            as Chinese and Japanese. These annotations typically appear in smaller typeface 
            above or to the side of regular text, and are meant to help with pronunciation 
            of obscure characters or as a language learning aid.
            <br />
            Inline Element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Rbc">
            <summary>
            The rbc element is a base container for rb elements in cases of complex ruby markup. 
            Only one rbc element may appear inside a ruby element.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Rtc">
            <summary>
            The rtc element is a ruby text container for rt elements in cases of complex ruby markup.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Rb">
            <summary>
            The rb element contains base text.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Rt">
            <summary>
            The rt element contains ruby text annotations.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="M:Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory.Rp">
            <summary>
            The rp element can be used to specify characters that can denote the beginning and 
            end of ruby text. The rp element should only be used for simple ruby markup, 
            and when Web browsers do not support standard ruby notation.
            </summary>
            <returns>Constructed Tag</returns>
        </member>
        <member name="T:Gaia.WebWidgets.RegularExpressionValidator">
            <summary>
            Validates whether the value of an associated input control matches the pattern specified by a regular expression.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.OnInit(System.EventArgs)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.OnInit"/> for documentation of this method
            </summary>
            <param name="e">The EventArgs passed on from the System</param>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.TrackViewState">
            <summary>
            Causes the control to track changes to its view state so they can be stored in the object's <see cref="P:System.Web.UI.Control.ViewState"/> property.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.TrackViewState"/> method.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.LoadViewState(System.Object)">
            <summary>Loads the previously saved state for the control.</summary>
            <param name="savedState">An object that contains the saved view state values for the control. </param>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.EndLoadViewState"/>
            <seealso cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadViewState(System.Object)"/>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.LoadControlState(System.Object)">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.BeginLoadControlState(System.Object)"/> and <see cref="M:Gaia.WebWidgets.AjaxControl.EndLoadControlState"/> methods for documentation.
            This method only forwards to those methods.
            </summary>
            <param name="savedState">Saved control state</param>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.SaveViewState">
            <summary>
            Saves any state that was modified after the <see cref="M:System.Web.UI.Control.TrackViewState"/> method was invoked.
            </summary>
            <returns>
            An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.
            </returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.SaveControlState">
            <summary>
            See <see cref="M:Gaia.WebWidgets.AjaxControl.SaveControlState(System.Object)"/> method for documentation. This method only forward to that method.
            </summary>
            <returns>Control state to save</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object and stores tracing information about the control if tracing is enabled.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object that receives the control content. </param>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"/> event.
            Forwards to <see cref="M:Gaia.WebWidgets.AjaxControl.OnUnload"/> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains event data. </param>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.IncludeScriptFiles">
            <summary>
            Override in inherited classes to include javascript files.
            Do not forget to call base.IncludeScriptFiles()
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Override in inherited class to customize rendering of the control.
            </summary>
            <param name="create">XhtmlTagFacttory to use for creating Xhtml compliant markup</param>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.Gaia#WebWidgets#IAjaxControl#RenderControlHtml(Gaia.WebWidgets.HtmlFormatting.XhtmlTagFactory)">
            <summary>
            Calls base class RenderControl method
            </summary>
            <param name="create">XhtmlTagFactory to use to create XHTML</param>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.Gaia#WebWidgets#IAjaxValidator#DetermineRenderUplevel">
            <summary>
            Determines whether the validation control can perform client-side validation.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.Gaia#WebWidgets#IAjaxValidator#RegisterValidatorDeclaration">
            <summary>
            Registers an ECMAScript array declaration using the array name Page_Validators.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.Gaia#WebWidgets#IAjaxValidator#GetControlRenderId(System.String)">
            <summary>
            Gets the client ID of the control having specified id.
            </summary>
            <param name="controlToValidate">The name of the control to get the client ID from. </param>
            <returns>The client ID of the specified control.</returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.Gaia#WebWidgets#IAjaxValidator#RenderDesignTime(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the validator to the specified HTML <paramref name="writer"/> during design time.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegularExpressionValidator.Gaia#WebWidgets#IAjaxValidator#PropertiesValid">
            <summary>
            Gets a value that indicates whether the control specified by the <see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate"/> property is a valid control.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegularExpressionValidator.Gaia#WebWidgets#IAjaxValidator#IsEnabled">
            <summary>
            Gets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegularExpressionValidator.Gaia#WebWidgets#IAjaxValidator#RenderUplevel">
            <summary>
            Gets a value denoting if the client browser supports "upward" rendering.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegularExpressionValidator.BaseValidator">
            <summary>
            Returns implementation.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RegularExpressionValidator.PropertyStateManagerRegularExpressionValidator">
            <summary>
            Specialized <see cref="T:Gaia.WebWidgets.PropertyStateManagerControl"/> for <see cref="T:Gaia.WebWidgets.RegularExpressionValidator"/> control.
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.PropertyStateManagerRegularExpressionValidator.#ctor(Gaia.WebWidgets.RegularExpressionValidator)">
            <summary>
            Initializes new instance of <see cref="T:Gaia.WebWidgets.PropertyStateManagerBaseValidator"/> for specified <paramref name="validator"/>.
            </summary>
            <param name="validator">Control to track changes for.</param>
            <remarks>
            Stores state information for the control and serializes changes during callback rendering.
            </remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if the specified <paramref name="validator"/> is null.</exception>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.PropertyStateManagerRegularExpressionValidator.AssignState(Gaia.WebWidgets.PropertyStateManagerControl)">
            <summary>
            Assigns new state to this <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> by copying from specified <paramref name="source"/>.
            </summary>
            <param name="source">The source <see cref="T:Gaia.WebWidgets.PropertyStateManagerWebControl"/> to copy state from.</param>
        </member>
        <member name="M:Gaia.WebWidgets.RegularExpressionValidator.PropertyStateManagerRegularExpressionValidator.TakeSnapshot">
            <summary>
            Takes snapshot of the current state of the associated <see cref="T:System.Web.UI.WebControls.WebControl"/>.
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegularExpressionValidator.PropertyStateManagerRegularExpressionValidator.RequiresRerendering">
            <summary>
            Returns true if the associated validator needs to be rerendered.
            </summary>
        </member>
        <member name="T:Gaia.WebWidgets.RegisterEffect">
            <summary>
            Script Builder for Effects. Simplifies generating error free JavaScript code for use in Gaia
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterEffect.SetInputParameters(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Pass in a reference to to collection of parameters that will be applied to the RegisterEffect. This allows properties
            to be parameterized when used in a function.
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterEffect.#ctor(System.String,System.String)">
            <summary>
            Constructor. Takes the control-type to construct and its ClientID. 
            </summary>
            <param name="effectType">controltype (ie. Effect.Show, Effect.Appear)</param>
            <param name="elementId">ClientID for the client-side construction</param>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterEffect.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterEffect.AddParam(System.String)">
            <summary>
            Add a simple parameter value that will go directly after construction. For example ( new X('id', paramGoesHere, ....
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterEffect.GetElementID">
            <summary>
            Returns the ElementID based on AppendString and Parameters. Various results can be
            'elementonly',  'element_child', e.target.id + '_children'
            based on usage ... 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gaia.WebWidgets.RegisterEffect.ToString">
            <summary>
            Render the RegisterEffect script that is to be sent to the client 
            </summary>
            <returns>RegisterEffect script</returns>
        </member>
        <member name="P:Gaia.WebWidgets.RegisterEffect.EffectType">
            <summary>
            Typeof Effect. For example ( Effect.Appear ) 
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegisterEffect.ElementID">
            <summary>
            The Element / Object for which to apply the Effect
            </summary>
        </member>
        <member name="P:Gaia.WebWidgets.RegisterEffect.AppendID">
            <summary>
            AppendID is the appended childnode ID if ApplyToContent() function
            was used. AppendID is an internal concept abstracted away in the 
            ApplyToContent function. 
            </summary>
        </member>
    </members>
</doc>
